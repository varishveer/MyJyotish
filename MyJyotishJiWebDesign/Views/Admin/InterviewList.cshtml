
@{
    Layout = "AdminLayout";
}


<style>
    .card-body {
        padding-left: 15px !important;
        padding-right: 15px !important;
    }
</style>


<div class="container-fluid mt-4">
    <div class="card">

        <div class="d-flex flex-row justify-content-between align-items-center  px-4">
            <h5 class="text-primary mt-2">Interview List</h5>

        </div>
        <hr />

        <div class="card-body">
            <div class="table-responsive">
                <table id="DataTable" class="table table-bordered table-striped">
                    <!-- Table content goes here -->
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        function fetchData() {
            $.ajax({
                url: BaseUrl + "api/Admin/GetInterviewList",
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem("Token")}`,
                    'Content-Type': 'application/json',
                },
                success: function (result) {
                    console.log(result); // Log the API response
                    let htmls = '<thead><tr><th>Id</th><th>Name</th><th>Mobile</th><th>Email</th><th>Expertise</th> <th>Experience</th><th>Language</th><th>Date</th><th>Time</th> <th>Reschedule</th></tr> </thead><tbody>';
                    let idCounter = 1;
                    $.each(result.data, function (key, item) {
                        htmls += '<tr>';
                        htmls += `<td class="text-center">${idCounter}</td>`;
                        htmls += `<td class="text-center">${item.name}</td>`;
                        htmls += `<td class="text-center">${item.mobile}</td>`;

                        htmls += `<td class="text-center">${item.email}</td>`;
                        htmls += `<td class="text-center">${item.expertise}</td>`;

                        htmls += `<td class="text-center">${item.experience}</td>`;
                        htmls += `<td class="text-center">${item.language}</td>`;
                        htmls += `<td class="text-center">${item.date}</td>`;
                        htmls += `<td class="text-center">${item.time}</td>`;
                        htmls += `<td class="text-center">
                           <button type="button" class="btn btn-primary" data-id="${item.id}" data-name="${item.name}" data-toggle="modal" data-target="#dynamicModal">
        Reschedule
    </button></td>`;
                        
                        htmls += '</tr>';
                        idCounter++;
                    });

                    htmls += '</tbody>';
                    $('#DataTable').html(htmls);
                    // Initialize DataTable after the data is loaded
                    $('#DataTable').DataTable({
                        "paging": true,
                        "searching": true,
                        "ordering": true,
                        "info": true
                    });
                },
                error: function (errormessage) {
                    console.error('Error fetching data:', errormessage.responseText);
                }
            });
        }

        fetchData(); // Call the function to load data
    });
</script>


<!-- Modal Structure -->
<div class="modal fade" id="dynamicModal" tabindex="-1" aria-labelledby="dynamicModalLabel" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="dynamicModalLabel">Reschedule Interview Slot</h5>
                <button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Hidden ID Field -->
                <input type="hidden" id="hiddenId" value="">
                <input type="date" id="appointmentDate" name="appointmentDate" class="form-control" />
                    <select  class="form-select my-3" id="slotList" name="slotList">
                       <option>--select slot--</option>
                    </select>
                <button class="btn btn-success" id="submitBtn"> Submit</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        let slotList=[]
        // select appoinment
        function reverseDate(dateString) {
            const parts = dateString.split('-');

            const reversedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;

            return reversedDate;
        }
        function bindslotList() {
            $('#slotList').empty();
            let newArray = slotList.filter((e) => {
                return e.date.split("T")[0] == $("#appointmentDate").val();
            })
            // Add list items dynamically
            if(newArray.length>0){
            newArray.forEach(item => {

                const listItem = `<option value="${item.id}">Time: ${item.time} &nbsp Date: ${item.date} &nbsp Duration: ${item.timeDuration} minutes</option>                          `;
                $('#slotList').append(listItem);

            });
            }else{
                $('#slotList').append(`
                <option selected disabled>--there is no slot left--</option>
                `);
            }
        }
        // Function to fetch data and populate the modal slot list
        function fetchDataAndPopulateModal() {
            $.ajax({
                url: BaseUrl + 'Api/Admin/SlotList',
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('Token'), // Adjust token if needed
                    'Content-Type': 'application/json'
                },
                success: function (response) {
                    if (response.status === 200) {
                      
                        slotList = response.data;
                        $("#appointmentDate").attr("min", slotList[0].date.split("T")[0])
                        $("#appointmentDate").attr("max", slotList[slotList.length - 1].date.split("T")[0])
                        $("#appointmentDate").val(slotList[0].date.split("T")[0])
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                },
                error: function (error) {
                    console.error('Error fetching data:', error);
                    Swal.fire('Error', 'Failed to retrieve data. Please try again later.', 'error');
                }
            }).then(()=>{
                bindslotList()

            })
        }
        fetchDataAndPopulateModal()

        $(document).on('click', 'button[data-toggle="modal"]', function () {
            debugger;
            // Get the values of data-id and data-name
            var id = $(this).data('id');
            var name = $(this).data('name');

            // Set the values to the modal fields
            $('#hiddenId').val(id);        // Populate the hidden ID field
            $('#readonlyName').text(name);  // Populate the readonly Name field
        });
        // select appoinment      
       

        $("#appointmentDate").on("input",function(){
bindslotList()
        })

        // Submit the form
        $('#submitBtn').on('click', function () {
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            var id = $('#hiddenId').val();  // Get the hidden ID field value
            var slotId = $('#slotList').val();  // Get the selected SlotId

            // Validate if both fields have been selected
            if (!id || !slotId) {
                Swal.fire('Error', 'Please select a slot and ensure the ID is valid.', 'error');
                return; // Exit the function if validation fails
            }

            // Create the data object to send in the request
            var data = {
                Id: id,
                SlotId: slotId
            };
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            // Send the data to the server using AJAX
            $.ajax({
                url: BaseUrl + 'Api/Admin/RescheduleInterview', // Replace with your API endpoint
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('Token'),
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify(data),
                success: function (response) {
                    if (response.status === 200) {
                        Swal.fire({
                            icon:'success', 
                            text:'Interview rescheduled successfully.',
                            title:'success',
                            didClose:()=>{
                               location.reload()
                            }
                        });
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                },
                error: function (error) {
                    console.error('Error submitting data:', error);
                    Swal.fire('Error', 'An error occurred. Please try again later.', 'error');
                }
            });
        });
    });
</script>