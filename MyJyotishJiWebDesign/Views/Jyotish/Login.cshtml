@{
    Layout = "Extra";

}
<link href="~/Img/" rel="icon">

<!-- Google Web Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">

<!-- Icon Font Stylesheet -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

<!-- Libraries Stylesheet -->
<link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet" />
<link href="~/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

<!-- Customized Bootstrap Stylesheet -->
<link href="~/css/bootstrap.min.css" rel="stylesheet">

<!-- Template Stylesheet -->
<!-- <link href="~/css/style.css" rel="stylesheet"> -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<style>
    .main-container {
        overflow: hidden;
        padding: 20px;
        border-radius: 0px 10px 10px 0px;
        box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.3);
    }

    .left-part img {
        max-width: 100%;
        height: auto;
        border-radius: 10px;
        border-radius: 10px 0px 0px 10px;
    }

    .right-part form input, .right-part form button {
        font-size: 13px;
    }

    .right-part button {
        background-color: #138496;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .right-part button:hover {
            background-color: #138496;
            color: white;
        }
</style>

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="main-container row w-75 rounded-3">
        <!-- Left part for image -->
        <div class="col-md-6 left-part d-flex justify-content-center align-items-center">
            <img src="/Img/mobile-login.jpg" alt="Sign Up Image" class="responsive-image">
        </div>

        <!-- Right part for the signup form -->
        <div class="col-lg-6 col-md-12 p-4 bg-white right-part ">
            <div class="d-flex align-items-center justify-content-center mb-2">
                <a href="/Admin/Login" class="">
                    <img src="~/Img/Logo.png" width="150" height="125" />
                </a>

            </div>
            <form id="loginForm">
                <div class="form-row">
                    <div class="form-group col-md-12 mb-3">
                        <label for="name" class="form-label">Email:</label>
                        <input type="email" id="email" name="name" placeholder="Enter your email" class="form-control" required>
                    </div>

                </div>

                <div class="form-row">
                    <div class="form-group col-md-12 mb-3">
                        <label for="name" class="form-label">Password:</label>
                        <input type="password" id="password" name="password" placeholder="Enter your password" class="form-control" required>
                    </div>

                </div>
                <div class="form-row">

                    <div class="d-flex justify-content-start">
                        <button type="submit" class="btn btn-info">Sign In</button>
                        <a class="text-primary" role="button" id="forgetPasswordBtn">&nbsp;&nbsp; Forgot Password</a>

                    </div>
                </div>


                <div class="form-row mt-3">

                    <div class="d-flex justify-content-start">
                        <p class="mb-0">Don't have an account ?</p>
                        <a href="/Jyotish/SignUp">&nbsp; Sign Up</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/chart/chart.min.js"></script>
<script src="~/lib/easing/easing.min.js"></script>
<script src="~/lib/waypoints/waypoints.min.js"></script>
<script src="~/lib/owlcarousel/owl.carousel.min.js"></script>
<script src="~/lib/tempusdominus/js/moment.min.js"></script>
<script src="~/lib/tempusdominus/js/moment-timezone.min.js"></script>
<script src="~/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

<!-- Template Javascript -->
<script src="~/js/main.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function () {



        $('#loginForm').submit(function (e) {

            e.preventDefault(); // Prevent the form from submitting normally

            var email = $('#email').val();
            var password = $('#password').val();
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            $.ajax({

                url: BaseUrl + "Api/Account/LoginJyotish",
                type: 'POST',
                contentType: 'application/json', // Specify that the content type is JSON
                data: JSON.stringify({
                    Email: email, // Make sure this matches the property name in your model
                    Password: password // Make sure this matches the property name in your model
                }),
                success: function (response) {
                    if (response.status === 200) {

                        // Successful login

                        localStorage.setItem('Username', response.userName);
                        localStorage.setItem('userEmail', response.user);
                        localStorage.setItem('userRole', response.role);




                        if (response.role == "Pending") {

                            Swal.close();
                            Swal.fire({
                                title: "Successful!",
                                text: "You successfully login",
                                icon: "success",

                                showConfirmButton: true, // Ensure the OK button is shown
                            }).then(() => {

                                localStorage.setItem("Token3", response.token);
                                localStorage.setItem("Id", response.id);
                                if (response.newStatus) {
                                    location.href = "/updateProfile"
                                } else {
                                    window.location.href = "/Dashboard";
                                }
                            });



                        }
                        else if (response.role == "Jyotish") {
                            Swal.close();
                            Swal.fire({
                                title: "Login Successful!",
                                text: "Redirecting to dashboard...",
                                icon: "success",

                                showConfirmButton: true, // Ensure the OK button is shown
                            }).then(() => {

                                localStorage.setItem("Token2", response.token);
                                localStorage.setItem("Id", response.id);
                                window.location.href = "/Jyotish/Dashboard";
                            });
                        }


                        else if (response.role == "Rejected") {

                            Swal.close();
                            Swal.fire({
                                title: "Login Successful!",
                                text: "Redirecting to dashboard...",
                                icon: "success",

                                showConfirmButton: true, // Ensure the OK button is shown
                            }).then(() => {
                                localStorage.setItem("Id", response.id);
                                localStorage.setItem("Role", response.role);
                                localStorage.setItem("UserName", response.userName);

                                window.location.href = "/PendingJyotish/Rejected";
                            });
                        }

                    } else if (response.status === 409) {
                        Swal.close();

                        Swal.fire({
                            title: response.message,

                            icon: "warning",

                            showConfirmButton: true, // Ensure the OK button is shown
                        })

                    } else if (response.status === 401) {
                        Swal.close();
                        Swal.fire({
                            title: response.message,

                            icon: "warning",

                            showConfirmButton: true, // Ensure the OK button is shown
                        })

                    }
                    else {
                        Swal.close();
                        Swal.fire({
                            title: "Something went wrong",

                            icon: "warning",
                            showConfirmButton: true,

                        });
                        console.log("Unexpected response: " + response.message);
                    }
                    
                },
                error: function (xhr) {
                    console.error("Error:", xhr.responseText);
                    Swal.close();
                    Swal.fire({
                        title: "Something went wrong",

                        icon: "warning",
                        showConfirmButton: true,

                    });
                }
            });
        });
    });
</script>


<script>
    $(document).ready(function() {

       // Function to take email input and send OTP
    function takeEmail() {
        return new Promise((resolve, reject) => {
            Swal.fire({
                title: 'Enter your email address',
                input: 'email',
                inputLabel: 'Your email address',
                inputPlaceholder: 'Enter your email',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                cancelButtonText: 'Cancel',
                preConfirm: (email) => {
                    if (!email) {
                        Swal.showValidationMessage('Please enter a valid email address');
                        return false;
                    }
                    return email;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "Processing Your Request",
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // AJAX request to send OTP
                    $.ajax({
                        url: BaseUrl + 'api/account/sendOtp', // Replace with your server-side logic to send OTP
                        type: 'GET',
                        data: { email: result.value, sendBy: "jyotish" },
                        success: async function(response) {
                            debugger
                            if (response.status === 200) {
                                resolve({ status: true, email: result.value });
                await takeOtp(result.value);

                            } else {
                                Swal.close();
                                Swal.fire({
                                    text: response.message,
                                    title: "Error",
                                    icon: "error",

                                }).then(()=>{
             takeEmail(); // Retry

                                });

                                reject({ status: false });
                            }
                        },
                        error: function() {
                            Swal.close();
                            Swal.fire({
                                text: "Something went wrong. Please try again.",
                                title: "Error",
                                icon: "error"

                            }).then(()=>{
             takeEmail(); // Retry

                                });

                            reject({ status: false });
                        }
                    });
                } else {
                    reject({ status: false });
                }
            });
        });
    }

    // Function to take OTP input and verify
    function takeOtp(email) {
        return new Promise((resolve, reject) => {
            Swal.fire({
                title: 'Enter OTP sent to your email',
                input: 'number',
                inputLabel: 'OTP',
                inputPlaceholder: 'Enter OTP',
                showCancelButton: true,
                confirmButtonText: 'Verify OTP',
                cancelButtonText: 'Cancel',
                preConfirm: (otp) => {
                    if (!otp) {
                        Swal.showValidationMessage('Please enter OTP');
                        return false;
                    }
                    return otp;
                }
            }).then((otpResult) => {
                if (otpResult.isConfirmed) {
                    Swal.fire({
                        title: "Processing Your Request",
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // AJAX request to verify OTP
                    $.ajax({
                        url: BaseUrl + 'api/account/verifyOtp', // Replace with your server-side logic to verify OTP
                        type: 'GET',
                        data: { email: email, otp: otpResult.value, sendBy: "jyotish" },
                        success: function(verifyResponse) {

                            if (verifyResponse.status === 200) {
                                resolve({ status: true });
                    // Step 3: Take new password input
                    Swal.fire({
                        title: 'Enter your new password',
                        html: `
                            <input id="newPassword" class="swal2-input" type="password" placeholder="New password">
                            <input id="confirmPassword" class="swal2-input" type="password" placeholder="Confirm new password">
                        `,
                        showCancelButton: true,
                        confirmButtonText: 'Change Password',
                        cancelButtonText: 'Cancel',
                        preConfirm: () => {
                            const newPassword = $('#newPassword').val();
                            const confirmPassword = $('#confirmPassword').val();

                            // Validation
                            if (!newPassword || !confirmPassword) {
                                Swal.showValidationMessage('Please enter both passwords');
                                return false;
                            }
                            if (newPassword !== confirmPassword) {
                                Swal.showValidationMessage('Passwords do not match');
                                return false;
                            }
                            return { newPassword };
                        }
                    }).then((passwordResult) => {
                        if (passwordResult.isConfirmed) {
                            const { newPassword } = passwordResult.value;
                             Swal.fire({
                        title: "Processing Your Request",
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                            // Step 4: Submit new password via AJAX
                            $.ajax({
                                url: BaseUrl + 'api/account/changePasswordByEmail', // Replace with your server-side logic to change password
                                type: 'GET',
                                data: { email:email, Password: newPassword, sendBy: "jyotish" },
                                success: function(changePasswordResponse) {
                                    if (changePasswordResponse.status === 200) {
                                        Swal.fire('Success', 'Password changed successfully!', 'success');
                                    } else {
                                        Swal.fire('Error', 'Password change failed. Try again.', 'error');
                                    }
                                },
                                error: function() {
                                    Swal.fire('Error', 'Something went wrong. Please try again.', 'error');
                                }
                            });
                        }
                    });
                            } else {
                                Swal.fire({
                                    text: verifyResponse.message,
                                    title: "Error",
                                    icon: "error"

                                }).then(()=>{
                                    takeOtp(email)
                                });

                                reject({ status: false });
                            }
                        },
                        error: function() {
                            Swal.close();
                            Swal.fire({
                                text: "Something went wrong. Please try again.",
                                title: "Error",
                                icon: "error",
                            }).then(()=>{
                                    takeOtp(email)

                            })

                            reject({ status: false });
                        }
                    });
                } else {
                    reject({ status: false });
                }
            });
        });
    }

    // Function to handle password change after OTP verification
    $("#forgetPasswordBtn").click(async function() {
              takeEmail();
    });

    });

</script>
