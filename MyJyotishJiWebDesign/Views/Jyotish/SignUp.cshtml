@{
    Layout = "Extra";

}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    .container {
        margin-top: 50px;
        margin-bottom: 50px;
    }


    .left-part {
        border-radius: 10px 0px 0px 10px;
        box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.2);
        padding: 15px;
    }

    .right-part {
        border-radius: 0px 10px 10px 0px;
        box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.2);
        padding: 30px;
        background-color: white;
    }

    .responsive-image {
        max-width: 100%;
        height: auto;
        border-radius: 10px;
    }

    h2 {
        margin-bottom: 20px;
        color: black;
    }

    .btn-primary {
        border-radius: 6px;
    }

    .form-group {
        margin-bottom: 0.5rem; /* Adjust this value as needed */
    }

    .form-label {
        margin-bottom: 0.2rem; /* Reduce space between label and input */
        font-size: 16px;
    }

    .input-group {
        margin-bottom: 0.5rem; /* Reduce space between input groups */
    }

    .form-control {
        font-size: 12px;
    }

    .form-select {
        font-size: 12px;
    }

    .btn:not(:disabled):not(.disabled) {
        font-size: 12px;
    }

    .otpcolour {
        color: white;
    }

    .error {
        display: block !important;
    }
</style>

<div class="container h-80 ">
    <div class="row w-70">
        <div class="col-md-5 left-part d-flex justify-content-center align-items-center">
            <img src="/Img/mobile-login.jpg" alt="Sign Up Image" class="responsive-image">
        </div>
        <div class="col-md-7 right-part">
            <h2 class="mb-3 d-flex justify-content-center">Sign Up</h2>
            <form id="registrationForm">
                <div class="form-row">
                    <div class="form-group col-md-6" style="margin-bottom: 0.1rem;">
                        <label for="name" class="form-label">Name:</label>
                        <input type="text" id="name" name="name" placeholder="Enter your name" class="form-control" required>
                    </div>
                    <div class="form-group col-md-6" style="margin-bottom: 0.1rem;">
                        <label for="email" class="form-label">Email:</label>
                        <div class="input-group">
                            <input type="email" id="email" name="email" class="form-control" placeholder="Enter your email" aria-label="Recipient's username" required>
                            <button class="btn btn-outline-secondary otpcolour rounded-end bg-info" type="button" id="getOtp">Get OTP</button>
                            <span id="email-error"></span>
                        </div>
                    </div>
                </div>

                <div class="form-row d-none" id="verifyOtp-container">
                    <label for="otp" class="form-label">Verification:</label>
                    <div class="input-group col-md-12" style="margin-bottom: 0.2rem;">
                        <input type="number" id="otp" name="otp" class="form-control" placeholder="Enter OTP">
                        <button class="btn btn-outline-secondary bg-info text-white" type="button" id="verifyOtp">Verify OTP</button>
                    </div>
                </div>

                <div class="form-row">

                    <div class="form-group col-md-6" style="margin-bottom: 0.2rem;">
                        <label for="gender" class="form-label">Gender:</label>
                        <select id="gender" name="gender" class="form-select disabledInput" required>
                            <option value="Male" selected>Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6" style="margin-bottom: 0.2rem;">
                        <label for="language" class="form-label">Language:</label>
                        <select id="language" name="language" class="form-select disabledInput" required>
                            <option value="">Select Language</option>
                            <!-- Add language options here -->
                        </select>
                    </div>
                </div>

                <div class="form-row">

                    <div class="form-group col-md-6" style="margin-bottom: 0.2rem;">
                        <label for="expertise" class="form-label">Expertise:</label>
                        <select id="expertise" name="expertise" class="form-select disabledInput" required>
                            <option value="">Select Expertise</option>
                            <!-- Add expertise options here -->
                        </select>
                    </div>
                    <div class="form-group col-md-6" style="margin-bottom: 0.2rem;">
                        <label for="country" class="form-label">Country:</label>
                        <select id="country" name="country" class="form-select disabledInput" required>
                            <option value="">Select Country</option>
                            <!-- Add country options here -->
                        </select>
                    </div>
                </div>

                <div class="form-row">

                    <div class="form-group col-md-6" style="margin-bottom: 0.6rem;">
                        <label for="state" class="form-label">State:</label>
                        <select id="state" name="state" class="form-select disabledInput" disabled>
                            <option value="">Select State</option>
                            <!-- Add state options here -->
                        </select>
                    </div>
                    <div class="form-group col-md-6" style="margin-bottom: 0.6rem;">
                        <label for="city" class="form-label">City:</label>
                        <select id="city" name="city" class="form-select disabledInput" disabled>
                            <option value="">Select City</option>
                            <!-- Add city options here -->
                        </select>
                    </div>

                </div>

                <div class="form-row mb-2">
                    <div class="form-group col-md-6" style="margin-bottom: 0.2rem;">
                        <label for="mobile" class="form-label">Mobile Number:</label>
                        <div class="d-flex">
                            <input type="text" class="rounded-start countryCode" value="+91" disabled style="width:40px;" />
                            <input type="number" id="mobile" name="mobile" class="form-control rounded-start-0 rounded-end disabledInput" placeholder="Mobile Number" required>
                        </div>
                        <span id="mobile-error"></span>
                    </div>

                </div>

                <button type="submit" class="btn btn-info disabledInput">Sign Up</button>

                <div class="form-row mt-3" style="margin-bottom: 0.2rem;">
                    <div class="form-group col-md-12" style="margin-bottom: 0.2rem;">
                        <p>
                            By submitting this form, you agree to our
                            <a href="#" class="text-info">Privacy Policy</a> and
                            <a href="#" class="text-info">Terms of Service</a>.
                        </p>
                    </div>
                    <div class="d-flex justify-content-center">
                        <p class="mb-0">Already have an account?</p>
                        <a href="/Jyotish/Login">Login</a>
                    </div>
                </div>
            </form>
        </div>


    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css">



<script>
    $(document).ready(function () {

        $(".disabledInput").attr("disabled", true)

        $("#getOtp").click(function () {

            debugger;
            var email = $("#email").val();
            if (email == "") {
                Swal.fire({
                    title: "Invalid Email",
                    text: "Please Enter Email",

                    icon: "error",
                    showConfirmButton: true,
                }).then(() => {
                    $("#email").focus();
                    return; // Exit the function to prevent further execution
                });
                return; // Exit the function to prevent AJAX call
            }




            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })


            $.ajax({
                url: BaseUrl + `Api/Account/RegisterJyotish?email=${encodeURIComponent(email)}`,
                type: 'POST',
                contentType: 'application/json',
                success: function (response) {
                    console.log(response)
                    if (response.status === 200) {
                        Swal.fire({
                            title: "success",
                            text: response.message,
                            icon: "success",


                        });
                        if (response.message == "Otp sent Successfully") {

                            $("#verifyOtp-container").removeClass("d-none");
                        } else {
                            $(".disabledInput").attr("disabled", false)

                        }

                    }
                    else if (response.status === 400) {
                        Swal.fire({
                            title: "warning",
                            text: response.message,
                            icon: "warning",
                        });
                        if (response.message == "Email already verified") {

                            $(".disabledInput").attr("disabled", false)
                        }
                    }
                    else {
                        Swal.fire({
                            title: "Something went wrong",
                            text: response.message,
                            icon: "warning",
                        });
                    }

                },
                error: function (xhr) {
                    Swal.fire({
                        title: "Something went wrong",
                        text: "some error occured",
                        icon: "warning",
                    });

                    console.log("Error: " + xhr.status + " - " + xhr.statusText);
                }
            });
        });


        $("#verifyOtp").click(function () {
            var email = $("#email").val();
            var otp = $("#otp").val();
            if (otp == null || otp == "") {
                Swal.fire({
                    title: "Please Enter Otp",
                    icon: "warning",
                });
                return
            }
            var data = { Email: email, Otp: otp };
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            $.ajax({
                url: BaseUrl + `Api/Account/VerifyJyotish`,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    switch (response.status) {
                        case 200:
                            Swal.fire({
                                title: "OTP Verified " + response.message,
                                icon: "success",
                            });

                            $("#verifyOtp-container").addClass("d-none");

                            $(".disabledInput").attr("disabled", false)

                            break;
                        case 409:
                            Swal.fire({
                                title: "Conflict:" + response.message,
                                icon: "warning",
                            });

                            break;
                        case 400:
                            Swal.fire({
                                title: response.message,
                                icon: "warning",
                            });

                            break;
                        case 500:
                            Swal.fire({
                                title: "Internal Server Error:" + response.message,
                                icon: "warning",
                            });

                            break;
                        default:
                            Swal.fire({
                                title: "Unexpected response:" + response.message,
                                icon: "warning",
                            });

                            break;
                    }
                },
                error: function (xhr) {
                    Swal.fire({
                        title: "Something went Wrong",
                        icon: "warning",
                    });


                    console.log("Error: " + xhr.status + " - " + xhr.statusText);
                }
            });
        });



        async function loadLanguage() {
            try {
                Swal.fire({
                    title: "Processing Your Request",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                })
                const response = await fetch(BaseUrl + 'Api/Account/Languages');
                const data = await response.json();
                const $languageDropdown = $('#language');
                $languageDropdown.html('<option value="">Select Language</option>');

                data.data.forEach(language => {
                    $languageDropdown.append(`<option value="${language}">${language}</option>`);
                });
                Swal.close()
            } catch (error) {
                console.error('Error fetching Language:', error);
            }
        }

        const $countryDropdown = $('#country');
        const $stateDropdown = $('#state');
        const $cityDropdown = $('#city');

        async function loadExpertise() {
            try {
                Swal.fire({
                    title: "Processing Your Request",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                })
                const response = await fetch(BaseUrl + 'Api/Jyotish/Expertise');
                const data = await response.json();
                const $expertiseDropdown = $('#expertise');
                $expertiseDropdown.html('<option value="">Select Expertise</option>');

                data.data.forEach(expertise => {
                    $expertiseDropdown.append(`<option value="${expertise.name}">${expertise.name}</option>`);
                });
                Swal.close()
            } catch (error) {
                console.error('Error fetching expertise:', error);
            }
        }

        async function loadCountries() {
            try {
                const response = await fetch(BaseUrl + 'Api/Jyotish/Country');
                const data = await response.json();
                $countryDropdown.html('<option value="">Select Country</option>');

                data.data.forEach(country => {
                    $countryDropdown.append(`<option value="${country.id}" data-countryName="${country.name}">${country.name}</option>`);
                });
            } catch (error) {
                console.error('Error fetching countries:', error);
            }
        }

        async function loadStates(countryId) {
            try {
                Swal.fire({
                    title: "Processing Your Request",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                })
                const response = await fetch(BaseUrl + `Api/Jyotish/State?Id=${countryId}`);
                const data = await response.json();
                $stateDropdown.html('<option value="">Select State</option>');

                data.data.forEach(state => {
                    $stateDropdown.append(`<option value="${state.id}">${state.name}</option>`);
                });
                Swal.close();
                $stateDropdown.prop('disabled', false);
            } catch (error) {
                console.error('Error fetching states:', error);
            }
        }

        async function loadCities(stateId) {
            try {
                Swal.fire({
                    title: "Processing Your Request",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                })
                const response = await fetch(BaseUrl + `Api/Jyotish/City?Id=${stateId}`);
                const data = await response.json();
                $cityDropdown.html('<option value="">Select City</option>');

                data.data.forEach(city => {
                    $cityDropdown.append(`<option value="${city.id}" data-name="${city.name}">${city.name}</option>`);
                });
                Swal.close()
                $cityDropdown.prop('disabled', false);
            } catch (error) {
                console.error('Error fetching cities:', error);
            }
        }
        loadLanguage();
        loadExpertise();
        loadCountries();

        async function bindCountryCode(id) {
            console.log(id)
            const response = await fetch(BaseUrl + `Api/Jyotish/countryCode?country=${id}`);
            const data = await response.json();
            console.log(data)
            if (data.status == 200) {
                $(".countryCode").val("+" + data.code)
            }
        }

        $countryDropdown.change(function () {
            const countryId = $(this).val();
            if (countryId) {
                bindCountryCode(countryId)
                loadStates(countryId);
            } else {
                $stateDropdown.html('<option value="">Select State</option>').prop('disabled', true);
                $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        $stateDropdown.change(function () {
            const stateId = $(this).val();
            if (stateId) {
                loadCities(stateId);
            } else {
                $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
            }
        });



        $("#registrationForm").on("submit", function (event) {
            event.preventDefault();
            if ($("#mobile").val().length > 10 && $("#mobile").val().length < 10) {
                return
            }
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            // Check if the OTP is required and empty

            if (!$('#name').val() || !$('#email').val() || !$('#gender').val() || !$('#mobile').val() ||
                !$('#language').val() || !$('#expertise').val() || !$('#country').val() ||
                !$('#state').val() || !$('#city').val()) {
                Swal.close();
                Swal.fire({
                    icon: 'warning',
                    title: 'Incomplete Form',
                    text: 'Please fill in all required fields before submitting.',

                });
                return; // Exit if any field is empty
            }
            const formData = new FormData();
            formData.append('name', $('#name').val());
            formData.append('email', $('#email').val());
            formData.append('gender', $('#gender').val());
            formData.append('mobile', $('#mobile').val());
            formData.append('language', $('#language').val());
            formData.append('expertise', $('#expertise').val());
            formData.append('country', $('#country').val());
            formData.append('state', $('#state').val());
            formData.append('city', $('#city').val());



            $.ajax({
                url: BaseUrl + 'Api/Account/SignUpJyotish',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.status == 200) {
                        Swal.fire({
                            title: "Form submitted successfully!",
                            icon: "success",
                            allowOutsideClick: false,  // Disable background click
                            allowEscapeKey: false,     // Disable escape key to close alert
                        }).then(() => {
                            location.replace('/Jyotish/login'); // Redirect after user clicks OK
                        });

                        $('#registrationForm')[0].reset();
                    } else {
                        Swal.fire({
                            title: "warning",
                            icon: "warning",
                            text: response.message
                        })
                    }

                },
                error: function (xhr) {
                    try {
                        // Parse the responseText if it's JSON
                        var response = JSON.parse(xhr.responseText);

                        if (response.message === "Not authorized to register") {
                            Swal.fire({
                                title: "Please Verify OTP",
                                icon: "warning",
                            });

                        } else {
                            Swal.fire({
                                title: 'Error: ' + response.message || 'There was an error submitting the form',
                                icon: "warning",
                            });

                        }
                    } catch (e) {
                        Swal.fire({
                            title: "Something went wrong",
                            icon: "warning",
                        });
                        // Fallback if parsing fails
                        console.log('There was an error submitting the form: ' + xhr.responseText);
                    }
                }
            });
        });

    });

    $(document).ready(function () {
        $("#registrationForm").validate({
            rules: {
                "name": {
                    required: true,
                    letterswithbasicpunc: true
                },
                "email": {

                },

                "gender": {
                    required: true
                },
                "language": {
                    required: true
                },
                "expertise": {
                    required: true
                },
                "country": {
                    required: true
                },
                "state": {
                    required: true
                },
                "city": {
                    required: true
                }
            },
            messages: {
                "name": {
                    required: 'Enter username',
                    letterswithbasicpunc: 'Only letters are allowed'
                }
            },
            errorPlacement: function (error, element) {

                if (element.attr("name") == "email") {
                    error.appendTo("#email-error");
                } else {
                    error.insertAfter(element);
                }


            }
        });
    })
</script>

