@{
    Layout = "JyotishLayout";
 
}

<!-- Razorpay Script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<!-- jQuery and Bootstrap JS -->



<!-- Bootstrap CSS -->

<!-- Font Awesome for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Custom CSS for Styling -->
<style>
    .title {
        width: 145%;
        transform: translateX(-16%);
    }

    .card {
        transition: 0.2s linear;
    }

    .blur-bg {
        background-color: #8EC5FC;
        background-image: linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%);
    }

    .card:hover {
        transform: scale(1.07);
        z-index: 2;
    }

    .Platinum {
        color: #E5E4E2;
        background-color: #00DBDE;
        background-image: linear-gradient(90deg, #00DBDE 0%, #FC00FF 100%);
    }

    .Gold {
        color: #FFD700;
        background-color: #FBAB7E;
        background-image: linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%);
    }

    .Silver {
        color: #C0C0C0;
        background-color: #8BC6EC;
        background-image: linear-gradient(135deg, #8BC6EC 0%, #9599E2 100%);
    }

    .list-group-item {
        padding: 8px 3px !important;
    }

    .availablebg {
        background-color: rgba(255, 255, 255, 0.6) !important;
    }

    .upgradePlan {
        background-color: #0093E9;
        background-image: linear-gradient(160deg, #0093E9 0%, #80D0C7 100%);
        color: white !important;
    }

    .planType {
        right: 0;
        font-size: 0.8rem;
    }
</style>

<div class="container-fluid">
    <h2 class="mt-1 text-primary">Pricing Plan</h2>
    <hr />
    <div class="row justify-content-center align-items-center gap-3 my-3">
        <!-- Cards will be dynamically inserted here -->
    </div>
</div>

<script>
    $(document).ready(function () {
        // API URL
        var apiUrl = BaseUrl + "Api/Jyotish/GetAllSubscription";

        // Make an AJAX request to get subscription plans
        $.ajax({
            url: apiUrl,
            type: "GET",
            headers: {
                'Authorization': `Bearer ${localStorage.getItem("Token2")}`,
                'Content-Type': 'application/json'
            },
            success: function (response) {
                if (response.status === 200 && response.data.length > 0) {
                    var container = $(".row.justify-content-center");
                    container.empty();

                    // Iterate over each subscription plan in the response
                    $.each(response.data, function (index, item) {
                        var servicesHTML = "";



                        
                      

                        
                        $.each(item.features, function (index, feature) {
                            if (feature.status == true) {
                                servicesHTML += `
                                        <li class="list-group-item availablebg rounded my-1">
                                            <span class="me-1 text-success">
                                                <i class="fa-solid fa-circle-check"></i>
                                            </span>
                                            <a href="#!">${feature.name}</a>
                                        </li>
                                    `;
                            } else {
                                servicesHTML += `
                                        <li class="list-group-item blur-bg rounded my-1">
                                            <span class="me-1 text-danger">
                                                <i class="fa-solid fa-ban"></i>
                                            </span>
                                                <a href="#!" class="fs-6">${feature.name}</a>
                                        </li>
                                    `;
                            }
                        });

                        // Generate the card HTML for each plan
                        var cardHTML = `
                                <div class="card blur-bg position-relative shadow mx-3" style="width: 13.5rem;">
                                    <div class="card-body">
                                        <h3 class="mb-3 font-weight-400 text-center py-2 px-0 shadow title ${item.name}">${item.name}</h3>
                                        <div class="blur-bg p-2 rounded">
                                            <span class="position-absolute top-0 planType btn btn-success p-0 fst-italic">${item.planType}</span>
                                            ${item.newPrice != 0 ? `
                                                <del style="font-size:20px;text-shadow:1px 1px 1px black; color:red;" class="mt-2">
                                                    <span class="display-30 me-1">₹${item.oldPrice}</span>
                                                </del>
                                                <sup style="font-size:12px;">${item.discount} %OFF</sup><br />
                                            ` : ""}
                                            <span class="bg-success text-light p-1 rounded">${item.newPrice == 0 ? "Free" : "₹ " + item.newPrice}</span>
                                        </div>
                                    </div>
                                    <ul class="list-group list-group-flush">
                                        ${servicesHTML}
                                    </ul>
                                    <div class="card-body">
                                        <button type="button" class="btn upgradePlan" id="upgradeBtn_${item.subscriptionId}"
                                            data-planId="${item.subscriptionId}" data-planType="${item.planType}"
                                            data-planPrice="${item.newPrice}">Upgrade</button>
                                    </div>
                                </div>
                            `;

                        container.append(cardHTML);
                    });
                } else {
                    console.log("No subscription plans available or an error occurred.");
                }
            },
            error: function (error) {
                console.log("Error fetching subscription plans:", error);
            }
        });
    });

    // Attach click event to dynamically created buttons
    $(document).on('click', '.upgradePlan', function () {
         
        Swal.fire({
            title: "Please wait...",
            text: "We are processing your request!",
            allowOutsideClick: false,
            didOpen: () => { Swal.showLoading(); }
        });

        var planId = $(this).data("planid");
        var planType = $(this).data("plantype");
        var planPrice = $(this).data("planprice");
        var JId = localStorage.getItem("Id");
        // Make AJAX call to initiate payment
        $.ajax({
            url: BaseUrl + "Api/Payments/create-order",
            type: "POST",
            contentType: "application/json", // Set the content type to JSON
            data: JSON.stringify({ // Stringify the data to send as JSON
                JyotishId: JId, // Example JyotishId
                amount: planPrice // Example amount
            }),
            success: function (response) {
                 
                if (response.status === 200 && response.data) {
                    var data = response.data; // Get the actual data object
                    var options = {
                        key: data.secretKey,  // Use the correct secret key from data
                        amount: data.amount,   // Amount in paise
                        currency: data.currency,
                        name: 'My Jyotish G',
                        description: 'Payment Transaction',
                        image: "https://vakiluncle.in/Content/assets/img/advocate/logo.png",
                        order_id: data.id,     // Order ID
                        handler: function (paymentResponse) {
                             
                            console.log(paymentResponse.razorpay_payment_id, paymentResponse.razorpay_signature, paymentResponse.razorpay_order_id, planPrice);
                            InsertPayment(paymentResponse.razorpay_payment_id, paymentResponse.razorpay_signature, paymentResponse.razorpay_order_id, planPrice);
                        },
                        modal: {
                            ondismiss: function () {
                                Swal.fire({
                                    icon: "warning",
                                    title: "Payment Cancelled",
                                   
                                });
                            }
                        },
                        prefill: {
                            name: data.advocateList?.advocateName || 'John Doe',  // Fallback if name not available
                            email: data.advocateList?.email || 'user@example.com',
                            contact: data.advocateList?.contactNum || '9999999999'
                        },
                        theme: { color: '#F37254' }
                    };

                    var rzp1 = new Razorpay(options);
                    rzp1.on('payment.failed', function (response) {
                        Swal.fire({
                            icon: "error",
                            title: "Payment Failed",
                            text: response.error.description || "Unknown error occurred.",
                        });
                    });
                    rzp1.open();
                } else {
                    Swal.fire({ icon: "error", title: "Error", text: "Payment initiation failed. Please try again." });
                }
            },
            error: function () {
                 
                Swal.fire({ icon: "error", title: "Server Error", text: "Server down, please try later." });
            }
        });

    });

    // Function to handle payment insertion into the system
    function InsertPayment(pay_id, signature, order_id, planPrice) {
         
        $.ajax({
            url: BaseUrl+"Api/payments/capture-payment",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({
                orderId: order_id,
                paymentId: pay_id,
                SignatureId: signature,
                amount: planPrice,
                Status: "success",
              
            }),
            success: function (res) {
                 
                if (res.message == "Payment captured and recorded.") {
                    Swal.fire({
                        title: "Success!",
                        text: "Plan activated successfully.",
                        icon: "success",
                        didClose: () => { location.reload(true); }
                    });
                } else {
                    Swal.fire({ title: "Payment Failed!", text: "Technical issue occurred. Try again later.", icon: "error" });
                }
            },
            error: function () {
                 
                Swal.fire({ icon: "error", title: "Technical Issue", text: "Payment verification failed." });
            }
        });
    }
</script>
