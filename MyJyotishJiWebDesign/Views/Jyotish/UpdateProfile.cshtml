@{
    Layout = "JyotishLayout";

}

<style>
    .back-to-top {
        display: none !important;
    }

</style>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<div class="container mt-2">
    <h3 style="font-weight:300;" class="mb-4">Update Profile Information</h3>
    <form id="profileUpdateForm" enctype="multipart/form-data">
        <div class="row">
            <!-- Personal Information Section -->
            <div class="col-md-12 col-lg-6">
                <div class="profile-card bg-light rounded p-3 mb-4">



                    <div class="form-group m-0 p-0 text-center">
                        <img id="profileImagePreview" class="rounded-circle" width="150" height="150" /><br /><br />
                        <label for="profileImage" class="btn btn-outline-primary">EditImage</label>
                    </div>
                    <div class="form-group p-0 ">
                        <input type="file" id="profileImage" hidden name="profileImage" class="form-control form-control-sm">
                    </div>
                    <div class="form-group mb-2">
                        <label for="name">Name:</label>
                        <input type="text" id="name"  name="name" class="form-control form-control-sm" required>
                    </div>
                    <div class="form-group mb-2">
                        <label for="gender">Gender:</label>
                        <select id="gender" name="gender" class="form-control form-control-sm" required>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="form-group mb-2">
                        <label for="dateOfBirth">Date of Birth:</label>
                        <input type="date" id="dateOfBirth" name="dateOfBirth" class="form-control form-control-sm" required>
                    </div>
                    <div class="form-group mb-2">
                        <label for="mobile">Mobile:</label>
                        <div class="d-flex">
                            <input type="text" class="rounded-start countryCode" value="+91" disabled style="width:40px;" />
                            <input type="tel" id="mobile" name="mobile" class="form-control form-control-sm" required>
                        </div>
                       
                    </div>
                    <div class="form-group mb-2">
                        <label for="mobile">Alternate Mobile:</label>
                        <div class="d-flex">
                            <input type="text" class="rounded-start countryCode" value="+91" disabled style="width:40px;" />
                            <input type="tel" id="alternatemobile" name="alternatemobile" class="form-control form-control-sm" >
                        </div>
                       
                    </div>
                    <div class="form-group mb-2">
                        <label for="expertise">Expertise:</label>
                        <select id="expertise" name="expertise" class="form-control   form-control-sm" multiple>
                            <option value="">Select Expertise</option>
                        </select>
                    </div>
                    <div class="form-group mb-2">
                        <label for="experience">Experience (Years):</label>
                        <input type="number" id="experience" name="experience" class="form-control form-control-sm" required>
                    </div>


                    <div class="form-group mb-2">
                        <label for="state">Country:</label>
                        <select id="country" name="country" class="form-control form-control-sm" disabled>
                            <option selected disabled>--Select Country--</option>
                        </select>
                    </div>
                    <div class="form-group mb-2">
                        <label for="state">State:</label>
                        <select id="state" name="state" class="form-control   form-control-sm" disabled>
                            <option selected disabled>Select State</option>
                        </select>
                    </div>
                    <div class="form-group mb-2">
                        <label for="city">City:</label>
                        <select id="city" name="city" class="form-control   form-control-sm" disabled>
                            <option selected disabled>Select City</option>
                        </select>
                    </div>

                    <div class="form-group mb-2">
                        <label for="specialization">Specialization:</label>
                        <input type="text" id="specialization" name="specialization" class="form-control form-control-sm" required>
                    </div>
                </div>
            </div>

            <!-- Profile Image Section -->
            <div class="col-md-12 col-lg-6">
                <div class="profile-card bg-light rounded p-3 mb-4">


                    <div class="form-group py-0">
                        <label>Pooja:</label>
                        <br />
                        <div class="gap-2 d-flex">
                            <div>
                                <input type="radio" class="poojaradioBtn" id="poojaYes" name="pooja" value="yes">
                                <label for="poojaYes">Yes</label>
                            </div>
                            <div>
                                <input type="radio" class="poojaradioBtn" id="poojaNo" name="pooja" value="no">
                                <label for="poojaNo">No</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group py-0 ">
                        <label>Call:</label>
                        <br />
                        <div class="gap-2 d-flex">
                            <div>
                                <input type="radio" class="callradioBtn" value="yes" id="callYes" name="call">
                                <label for="callYes">Yes </label>
                            </div>
                            <div>
                                <input type="radio" class="callradioBtn" value="no" id="callNo" name="call">
                                <label for="callNo">No </label>
                            </div>
                        </div>


                    </div>

                    <div class="form-group mb-2 py-0 d-none" id="callChargesInputDiv">
                        <label for="callCharges">Call Charges:</label>
                        <input type="number" id="callCharges" value="0" name="callCharges" class="form-control form-control-sm">
                    </div>

                    <div class="form-group py-0 ">
                        <label>Chat:</label>
                        <br />
                        <div class="gap-2 d-flex">
                            <div>
                                <input type="radio" class="chatradioBtn" id="chatYes" name="chat" value="yes">
                                <label for="chatYes">Yes</label>
                            </div>
                            <div>
                                <input type="radio" class="chatradioBtn" id="chatNo" name="chat" value="no">
                                <label for="chatNo">No</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-2  py-0 d-none" id="chatChargesInputDiv">
                        <label for="chatCharges">Chat Charges:</label>
                        <input type="number" id="chatCharges" name="chatCharges" value="0" class="form-control form-control-sm" required>
                    </div>

                    <div class="form-group py-0">
                        <label>Appointment:</label>
                        <br />
                        <div class="gap-2 d-flex">
                            <div>
                                <input type="radio" class="appointmentradioBtn" id="appointmentYes" name="appointment" value="yes">
                                <label for="appointmentYes">Yes</label>
                            </div>
                            <div>
                                <input type="radio" class="appointmentradioBtn" id="appointmentNo" name="appointment" value="no">
                                <label for="appointmentNo">No</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-2 py-0  d-none" id="appointmentChargesInputDiv">
                        <label for="appointmentCharges">Appointment Charges</label>
                      <input type="text" id="appointmentCharge" value="0" name="appointmentCharge" class="form-control form-control-sm" required>

                    </div>
                
                    <div class="form-group" >
                        <label for="language" class="form-label">Language:</label>
                        <select id="language" name="language" class="form-select" multiple>
                            <option value="">Select Language</option>
                            <!-- Languages will be dynamically populated here -->
                        </select>
                    </div>

                    <div class="form-group mb-2">
                        <label for="about">About:</label>
                        <textarea rows="5" id="about" name="about" class="form-control form-control-sm" required></textarea>
                    </div>
                    <div class="form-group mb-2">
                        <label for="awardsAndAchievement">Awards and Achievement:</label>
                        <textarea rows="3" id="awardsAndAchievement" name="awardsAndAchievement" class="form-control form-control-sm" required></textarea>
                        
                    </div>



                    <div class="form-group mb-2">
                        <label for="address">Address:</label>
                        <input type="text" id="address" name="address" class="form-control form-control-sm" required>
                    </div>
                    <div class="form-group mb-2">
                        <label for="timeFrom">Available From:</label>
                        <input type="time" id="timeFrom" name="timeFrom" class="form-control form-control-sm" required>
                    </div>
                    <div class="form-group mb-2">
                        <label for="timeTo">Available To:</label>
                        <input type="time" id="timeTo" name="timeTo" class="form-control form-control-sm" required>
                    </div>


                </div>
                
            </div>
            <div class="text-center"><button type="submit" class="btn btn-primary ">Update Profile</button></div>
        </div>

        <!-- Submit Button -->
    </form>
</div>


<script>
    $(document).ready(function () {

        $('#callYes').on('click', function () {

            $('#callChargesInputDiv').removeClass('d-none');

        });
        $('#callNo').on('click', function () {

            $('#callChargesInputDiv').addClass('d-none');

        });
        
        $('#chatYes').on('click', function () {

            $('#chatChargesInputDiv').removeClass('d-none');

        });
        $('#chatNo').on('click', function () {

            $('#chatChargesInputDiv').addClass('d-none');

        });
         
        $('#appointmentYes').on('click', function () {

            $('#appointmentChargesInputDiv').removeClass('d-none');

        });
        $('#appointmentNo').on('click', function () {

            $('#appointmentChargesInputDiv').addClass('d-none');

        });

        $('#language').select2();
        $('#expertise').select2();


        var token = localStorage.getItem('Token2');
        var id = localStorage.getItem("Id");
        // Load Profile Data on Page Load
        function loadProfileData() {
            if (!token || !id) {
                alert('Missing authentication token or profile ID.');
                return;
            }
             Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
            $.ajax({
                url: BaseUrl + 'Api/Jyotish/GetProfile',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: id },
                success: function (response) {
                    if (response.status === 200) {
                        var profile = response.data;
                        console.log(profile)
                        // Fill in text fields
                        $('#name').val(profile.name);
                        $('#mobile').val(profile.mobile);
                        $('#alternatemobile').val(profile.alternateMobile);
                        $('#gender').val(profile.gender);
                        $('#experience').val(profile.experience);
                        $('#timeTo').val(profile.timeTo);
                        $('#timeFrom').val(profile.timeFrom);
                        $('#specialization').val(profile.specialization);
                        $('#about').val(profile.about);
                        $('#awardsAndAchievement').val(profile.awordsAndAchievement || 'N/A');
                        $('#callCharges').val(profile.callCharges);
                        $('#chatCharges').val(profile.chatCharges);
                        $('#address').val(profile.address);
                        $('#appointmentCharge').val(profile.appointmentCharges);
                        if(profile.pooja){
                        $('#poojaYes').attr("checked",true);
                        }else{
                        $('#poojaNo').attr("checked",true);
                        } if(profile.call){
                        $('#callYes').attr("checked",true)
                        $('#callChargesInputDiv').removeClass('d-none');
                        }else{
                        $('#callNo').attr("checked",true);
                        } if(profile.chat){
                        $('#chatYes').attr("checked",true)
                       $('#chatChargesInputDiv').removeClass('d-none');
                        }else{
                        $('#chatNo').attr("checked",true);
                        } if(profile.appointment){
                        $('#appointmentYes').attr("checked",true)
                       $('#appointmentChargesInputDiv').removeClass('d-none');
                        }else{
                        $('#appointmentNo').attr("checked",true);
                        } 
                        // Set profile image preview or fallback image
                        debugger
                        if (profile.profileImage!=null) {
                            $('#profileImagePreview').attr('src', BaseUrl + profile.profileImage).show();
                        } else {
                            $('#profileImagePreview').attr('src', '/user-not-found.png').show();
                        }

                        // Handle comma-separated string fields (languages and expertise)
                        if (profile.language) {
                            let languagesArray = profile.language.split(',');
                            $('#language').val(languagesArray).trigger('change');
                        }
                        if (profile.expertise) {
                            let expertiseArray = profile.expertise.split(',');
                            setTimeout(() => {
                                $('#expertise').val(expertiseArray).trigger('change');
                            }, 1000)
                        }

                            setTimeout(() => {
                                if (profile.country != null) {
                                    $("#country").val(profile.country).change()
                                }
                            }, 1000)
                         
                        setTimeout(() => {
                                if (profile.city != null) {
                                    $("#state").val(profile.state).change()
                                }
                            }, 2000)
                      
                            setTimeout(() => {
                                $("#city").val(profile.city).change();
                            }, 3000)


                        // Date of birth field
                        if (profile.dateOfBirth) {
                            let date = new Date(profile.dateOfBirth);
                            let day = String(date.getDate()).padStart(2, '0');
                            let month = String(date.getMonth() + 1).padStart(2, '0'); // Adjust for zero-based month
                            let year = date.getFullYear();

                            // Set the value in the `YYYY-MM-DD` format expected by input type="date"
                            $('#dateOfBirth').val(`${year}-${month}-${day}`);
                        }


                    } else {
                        Swal.fire({
                        text:'Failed to load profile data. Please try again.',
                        title:"error",
                        icon:"error"
                    });
                    }

    $("#profileImage").on('error', function () {
        $(this).attr("src", '/user-not-found.png');
    });
    Swal.close()
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal({
                        text:'Failed to load profile data. Please try again.',
                        title:"error",
                        icon:"error"
                    });
                    console.error('Error fetching profile data:', jqXHR);
                }
            });
        }

        // Load data on page load

        // Handle form submission
        $('#profileUpdateForm').on('submit', function (e) {
            e.preventDefault();
              Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
            var formData = new FormData();

            // Append basic form data
            formData.append('Id', id); // Assuming this is the user ID
            formData.append('name', document.getElementById('name').value);
            formData.append('dateOfBirth', document.getElementById('dateOfBirth').value);
            formData.append('gender', document.getElementById('gender').value);
            formData.append('mobile', document.getElementById('mobile').value);
            formData.append('alternatemobile', document.getElementById('alternatemobile').value);
            formData.append('email', localStorage.getItem('userEmail')); // Hardcoded for example
            formData.append('role', 'Jyotish'); // Hardcoded for example

            // Concatenate expertise options as comma-separated values
            var expertiseOptions = Array.from(document.getElementById('expertise').selectedOptions).map(option => option.value);
            var expertiseString = expertiseOptions.join(',');
            formData.append('expertise', expertiseString);

            // Concatenate language options as comma-separated values
            var languageOptions = Array.from(document.getElementById('language').selectedOptions).map(option => option.value);
            var languageString = languageOptions.join(',');
            formData.append('language', languageString);

            formData.append('specialization', document.getElementById('specialization').value);
            formData.append('experience', document.getElementById('experience').value);
            formData.append('country', document.getElementById('country').value);
            formData.append('state', document.getElementById('state').value);
            formData.append('city', document.getElementById('city').value);
            formData.append('address', document.getElementById('address').value);
            formData.append('timeFrom', document.getElementById('timeFrom').value);
            formData.append('timeTo', document.getElementById('timeTo').value);
            formData.append('about', document.getElementById('about').value);
            formData.append('awordsAndAchievement', document.getElementById('awardsAndAchievement').value);
            formData.append('call', $(".callradioBtn:checked").val()=="yes"?true:false); 
            formData.append('chat', $(".chatradioBtn:checked").val()=="yes"?true:false); 
            if( $(".chatradioBtn:checked").val()=="yes"){
            formData.append('chatCharges', document.getElementById('chatCharges').value);

            }else{
                document.getElementById('chatCharges').removeAttribute("required")

            } 
            if( $(".callradioBtn:checked").val()=="yes"){
            formData.append('callCharges', document.getElementById('callCharges').value);
            }else{
                document.getElementById('callCharges').removeAttribute("required")

            }
            formData.append('pooja', $(".poojaradioBtn").val()=="yes"?true:false); 
            formData.append('appointment', $(".appointmentradioBtn:checked").val()=="yes"?true:false); 
            let app=$(".appointmentradioBtn").val()
            if($(".appointmentradioBtn:checked").val()=="yes"){
                debugger
            formData.append('appointmentCharges', document.getElementById('appointmentCharge').value);

            }else{
                document.getElementById('appointmentCharge').removeAttribute("required")
            }
            var profileImage = document.getElementById('profileImage').files[0];
            if (profileImage != undefined) {
                formData.append('profileImageUrl', profileImage);
            }

            $('button[type="submit"]').prop('disabled', true);

            $.ajax({
                url: BaseUrl + "Api/Jyotish/UpdateProfile", 
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                headers: {
                    'Authorization': `Bearer ${token}` 
                },
                success: function (response) {

                    if (response.status === 200) {

                        Swal.fire({
                            title: "Profile updated successfully!",
                            text: "Redirecting to Profile...",
                            icon: "success",
                            showConfirmButton: true,
                            didClose:()=>{
                                 window.location.href = "/Jyotish/Profile";
                            }
                        })

                    } else {
                        Swal.fire({
                            title: 'Error: ' + response.message,

                            icon: "warning",

                            showConfirmButton: true, // Ensure the OK button is shown

                        });
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {

                    console.error('Error updating profile:', jqXHR);
                }
            });
       


    });

        // Image preview functionality (optional)
        $('#profileImage').on('change', function (e) {
            debugger
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#profileImagePreview').attr('src', e.target.result);
            }
            reader.readAsDataURL(this.files[0]);
        });
     async function loadLanguage() {
         
            try {
                const response = await fetch(BaseUrl+'Api/Account/Languages');
                const data = await response.json();
                const $languageDropdown = $('#language');
                $languageDropdown.html('<option value="">Select Language</option>');

                data.data.forEach(language => {
                    $languageDropdown.append(`<option value="${language}">${language}</option>`);
                });
            } catch (error) {
                console.error('Error fetching Language:', error);
            }
        }
        // Load Expertise
        var token = localStorage.getItem('Token2');
       
            $.ajax({
                url: BaseUrl+'Api/Jyotish/Expertise',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    var expertiseDropdown = $('#expertise');
                    expertiseDropdown.empty().append('<option value="">Select Expertise</option>');
                    response.data.forEach(expertise => {
                        expertiseDropdown.append(new Option(expertise.name, expertise.name));
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching expertise:', textStatus, errorThrown);
                }
            }).then(() => { 
                 Swal.fire({
                        title: "Processing Your Request",
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    })
            $.ajax({
                url: BaseUrl + 'Api/Jyotish/Country',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    var countryDropdown = $('#country');
                    countryDropdown.empty().append('<option value="">--Select Country--</option>');
                    response.data.forEach(country => {
                        countryDropdown.append(new Option(country.name, country.id));
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching countries:', textStatus, errorThrown);
                }
            })
            }).then(() => {
                loadLanguage();
            }).then(() => {
                       
                        $.ajax({
                            url: BaseUrl + "api/jyotish/GetSpecializationList",
                            type: 'GET',
                            success: function (result) {

                                $.each(result.data, function (key, item) {
                                    $('#specialization').append(`
                                            <option value='${item.name}'>${item.name}</option>
                                    `);
                                });
                        Swal.close()

                            },
                            error: function (errormessage) {
                                console.error('Error fetching data:', errormessage.responseText);
                            }
                        });
                
                }).then(()=>{
            
        // Load States
        function loadStates(countryId) {
                   
            $.ajax({
                url: BaseUrl + `Api/Jyotish/State`,
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: countryId }, // Query string parameter
                success: function (response) {
                    var stateDropdown = $('#state');
                    stateDropdown.empty().append('<option value="">Select State</option>');
                    response.data.forEach(state => {
                        stateDropdown.append(new Option(state.name, state.id));
                    });
                    stateDropdown.prop('disabled', false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching states:', textStatus, errorThrown);
                }
            });
        }

        // Load Cities
        function loadCities(stateId) {
                  
            $.ajax({
                url: BaseUrl+`Api/Jyotish/City`,
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: stateId }, // Query string parameter
                success: function (response) {
                    var cityDropdown = $('#city');
                    cityDropdown.empty().append('<option value="">--Select City--</option>');
                    response.data.forEach(city => {
                        cityDropdown.append(new Option(city.name, city.id));
                    });
                    cityDropdown.prop('disabled', false);
                            Swal.close()

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching cities:', textStatus, errorThrown);
                }
            });
        }

                async function bindCountryCode(id) {
                    console.log(id)
                    const response = await fetch(BaseUrl + `Api/Jyotish/countryCode?country=${id}`);
                    const data = await response.json();
                    console.log(data)
                    if (data.status == 200) {
                        $(".countryCode").val("+" + data.code)
                    }
                }
        // Event Listeners
        $('#country').on('change', function () {
            const countryId = $(this).val();
                    bindCountryCode(countryId)
            if (countryId) {
                loadStates(countryId);
            } else {
                $('#state').empty().append('<option value="">Select State</option>').prop('disabled', true);
                $('#city').empty().append('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        $('#state').on('change', function () {
            const stateId = $(this).val();
            if (stateId) {
                loadCities(stateId);
            } else {
                $('#city').empty().append('<option value="">Select City</option>').prop('disabled', true);
            }
        });
                }).then(()=>{
        loadProfileData();

                })
                 });

</script>
