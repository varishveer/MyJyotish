



@{
    string BaseUrl = "https://api.myjyotishg.in/";
    //var BaseUrl = "https://localhost:7118/";

}                
                


<style>
    /* Background and container styling */
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #f0f4fd, #dae9f4);
        margin: 0;
        padding: 0;
        overflow-x:hidden;
    }
    *{
        box-sizing:border-box;
    }
    .astrologer-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 30px;
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Card styling */
    .astrologer-card {
        position: relative;
        background: white;
        border-radius: 15px;
        overflow: hidden;
        padding: 7px;
        transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        max-width: 450px !important;
        max-height:200px;
        background: linear-gradient(135deg, #f8f9fa, #f1f1f1);
    }

        .astrologer-card:hover {
            transform: translateY(-20px) scale(1.05);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

    /* Left Section: Profile Image and Stars */
    .profile-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .profile-image-container {
        width: 100px;
        height: 120px;
        border-radius: 10px;
        overflow: hidden;
        border: 5px solid #f0f4fd;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
    }

    .jyotishProfileImages {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: border-color 0.4s ease-in-out;
    }

    .astrologer-card:hover .jyotishProfileImages {
        border-color: #ffc107;
    }

    /* Right Section: Details */
    .card-body {
        text-align: left;
        padding-left: 15px;
    }

    .astrologer-card h6 {
        font-size: 1.2em;
        font-weight: bold;
        margin: 10px 0 5px;
        color: #333;
    }

    .astrologer-card p {
        font-size: 0.95em;
        color: #666;
        margin: 8px 0;
    }

        .astrologer-card p span {
            color: #333;
            font-weight: bold;
        }

    /* Add a decorative icon for creativity */
    .astrologer-card .decorative-icon {
        position: absolute;
        top: -20px;
        right: -20px;
        font-size: 50px;
        color: rgba(255, 193, 7, 0.1);
        transition: transform 0.4s ease;
    }

    .astrologer-card:hover .decorative-icon {
        transform: rotate(45deg);
        color: rgba(255, 193, 7, 0.3);
    }
        .content-container{
            max-height:100vh;
           
        }

    .content-container::-webkit-scrollbar{
        width:4px;
        height:4px;
    }
    .content-container::-webkit-scrollbar-thumb{
            background: #fad550;
            border-radius:10px;
    }

    .w-23 {
        width: 31.2%;
    }

    .active-logo {
        left: 0;
    }
</style>

<h4 class="border-bottom py-3 fw-bold text-secondary text-center">Astrologers</h4>
<div class="row p-3 ">
    <div class="col-sm-12 ">
        <div class="row">
            <div class="col-sm-3 ">
                <div class="row">
                    <div class="col-sm-12">
                        <form class=" border p-3 rounded shadow" id="filterForm">
                            <h3 class="fw-bold my-3">Filter</h3>
                       <select class="form-control py-2 rounded-0 mb-4" name="country" id="country">
                                <option value="">--select country--</option>
                       </select> 
                       <select disabled class="form-control py-2 rounded-0 mb-4" name="state" id="state">
                           <option value=" ">--select state--</option>
                       </select> 
                       <select disabled class="form-control py-2 rounded-0 mb-4" name="city" id="city">
                           <option value="">--select city--</option>
                       </select>
                            <select class="form-control py-2 rounded-0 mb-4" name="expertise" id="expertise">
                           <option value="">--select experties-</option>
                       </select>
                            <select class="form-control py-2 rounded-0 mb-4" name="experience" id="experience">
                           <option value="">--select experience--</option>
                           <option value="1,5">1-5 years</option>
                                <option value="5,10">5-10 years</option>
                                <option value="10,15">10-15 years</option>
                                <option value="15,20">15-20 years</option>
                                <option value="20,0">more than 20 years</option>
                       </select>
                        <select class="form-control py-2 rounded-0 mb-4" name="gender" id="gender">
                           <option value="">--select gender--</option>
                           <option value="male">Male</option>
                           <option value="female">Female</option>
                       </select>
                        <select class="form-control py-2 rounded-0 mb-4" name="rating" id="rating">
                           <option value="">--select rating--</option>
                           <option>1</option>
                           <option>2</option>
                           <option>3</option>
                           <option>4</option>
                           <option>5</option>
                       </select>
                        <select class="form-control py-2 rounded-0 mb-4" name="activity" id="activity">
                            <option value="">--select activity--</option>
                            <option value="1">Alphabetically</option>
                            <option value="2">Experience</option>
                       </select>

                       
                      <div class="mt-3 d-flex justify-content-center gap-3">
                                <input type="reset" value="Reset" class="btn text-light fw-semi-bold btn-warning" />
                       <input type="submit" value="Filter" class="btn text-light fw-semi-bold btn-warning" />
                            </div>
                        </form>
                    </div>
                </div>
                </div>
            <div class="astrologer-list col-sm-9 mx-auto  overflow-auto content-container">
                <div class="row gap-3" id="astrologerList"></div>
    <!-- Astrologer results will be injected here -->
</div>
        </div>
    </div>
</div>
   
<script>

    // Function to get the URL parameter
    function getURLParameter(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
    }

    // Function to search astrologers

    function filterAstrologer(){
        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        let formData = new FormData();
        let filterData = $("#filterForm").serializeArray();
        filterData.forEach(function (d) {
            formData.append(d.name, d.value);
        })
        debugger
        $.ajax({
            url: BaseUrl + `Api/User/FilterAstrologer`,
            type: 'POST',
            processData: false,
            contentType: false,
            data: formData,
            success: function (response) {
                if (response.status === 200) {
                    var astrologers = response.data;
                    displayAstrologers(astrologers);
                } else {
                    $('#astrologerList').html('<p>No astrologers found.</p>');
                }
                Swal.close()
            },
            error: function () {
                $('#astrologerList').html('<p>An error occurred while searching for astrologers.</p>');
            }
        });
    }
    $("#filterForm").submit(function (e) {
        e.preventDefault();
        filterAstrologer();
    })
    function SearchAstrologers() {
        let searchValue = "@ViewBag.searchInput" + " " + "@ViewBag.filterValue";
        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        $.ajax({
            url: BaseUrl + "api/user/searchAstrologers",
            type: "post",
            data: { searchInp: searchValue },
            success: function (res) {
                console.log(res)

                if (res.status == 200) {
                    displayAstrologers(res.data)
                }
               Swal.close()
            }, error: function () {
                $('#astrologerList').html('<p>An error occurred while searching for astrologers.</p>');
            }
        })
    }
    @if (ViewBag.filterValue == null && ViewBag.searchInput == null)
    {

        @:filterAstrologer();
    }
    else
    {
        @:SearchAstrologers()
    }


  async function getAdvertisementBanners(){
      let data=null;
         await $.ajax({
                url: BaseUrl + "api/user/AdvertisementBanner",
              type: "get",

              success: function (res) {
                    data=res;
                 
              }, error: function () {
                  $('#astrologerList').html('<p>An error occurred while searching for astrologers.</p>');
              }
          })
      return data
  }

    //function for create stars
     function generateFullStars(starCount) {

          let hstarCount=starCount%1!=0?1:0;

          let empStars='<i class="far fa-star"></i>'.repeat(5-starCount);;
          let fillStars='<i class="fa fa-star"></i>'.repeat(starCount);;
          let halfStars='<i class="fas fa-star-half-alt"></i>'.repeat(hstarCount);

          return fillStars+halfStars+empStars;
      }
    // Function to display astrologers
   async function displayAstrologers(astrologers) {
        var html = '';
        let adCount=0;
        let showAdvCount=0;
        let data= await getAdvertisementBanners();
        console.log(data)
        if (astrologers.length > 0) {
            astrologers.forEach(function (astrologer) {
                var ImgSrc = "@BaseUrl" + `${astrologer.profileImageUrl}`;
                html += `

                  <div class="astrologer-card w-23 position-relative">
          <small class="py-1 fw-bold px-2 text-light position-absolute top-0 active-logo ${astrologer.activeStatus ? 'bg-success' : 'bg-danger'}">
              ${astrologer.activeStatus ? 'Online' : 'Offline'}
          </small>

          <a href="/Home/JyotishProfile?Id=${astrologer.id}" class="text-decoration-none">
              <div class="d-flex align-items-start">
                  <div class="profile-section">
                      <div class="profile-image-container">
                          <img src="${ImgSrc}" class="jyotishProfileImages" alt="${astrologer.name}">
                      </div>
                      <div class="text-warning my-2">
                            ${generateFullStars(astrologer.stars)}
                      </div>
                  </div>
                  <div class="card-body ms-3">
                      <p class="card-title fw-bold">${astrologer.name} <i class="fa-solid text-success fa-circle-check"></i> - ${astrologer.city}</p>
                      <small class=" text-secondary">
                           ${astrologer.expertise.split(',')[0] || 'NA'}  ${astrologer.expertise != null ? astrologer.expertise.split(',').length > 1 ? "+" + astrologer.expertise.split(',').length +"more" : "":""
              }
                      </small>
                      <small class="d-block text-secondary">${astrologer.language}</small>
                      <small class="d-block text-secondary">Exp : ${astrologer.experience != null ? astrologer.experience : 0} Years</small>
                  </div>    
              </div>
          </a>
      </div>
                `
                adCount++
                if(adCount==6 &&data!=null){
                    if(data.data.result.length>0){

                    html+=`
      <div class="col-12 col-sm-12 col-md-12 rounded border-0 col-lg-12 mb-2 p-1">
                                                <div class="card w-100 h-100 ">
                                                      <img height="170" class="w-100 rounded" src="${BaseUrl+data.data.result[showAdvCount].bannerUrl}">
                                                </div>
                                            </div>`
                                                    if(data.data.result.length-1==showAdvCount){
                                                          showAdvCount=0;
                                                    }else{
                                                showAdvCount++;
                                                    }
                    }
                adCount=0;
                  }
            });
                 if(astrologers.length<6 && data!=null){
                      if(data.data.result.length>0){
                     html+=`
        <div class="col-12 col-sm-12 col-md-12 rounded border-0 col-lg-12 mb-2 p-1">
                                                  <div class="card w-100 h-100 ">
                                                        <img height="170" class="w-100 rounded" src="${BaseUrl+data.data.result[showAdvCount].bannerUrl}">
                                                  </div>
                                              </div>`
                    }
                    }

          }else if(data!=null){
                        if(data.data.result.length>0){
            html='<p class="text-center text-secondary my-4">no record found</p>'
              html+=`
        <div class="col-12 col-sm-12 col-md-12 rounded border-0 col-lg-12 mb-2 p-1">
                                                  <div class="card w-100 h-75 ">
                                                        <img height="170" class="w-100 rounded" src="${BaseUrl+data.data.result[showAdvCount].bannerUrl}">
                                                  </div>
                                              </div>`
                                              }
        }
        $('#astrologerList').html(html);
        $(".jyotishProfileImages").on('error', function () {
            $(this).attr("src", '/user-not-found.png');
        });
    }
</script>
<script>
    async function loadCountries() {
        try {
            const response = await fetch(BaseUrl + 'Api/Jyotish/Country');
            const data = await response.json();
            $("#country").html('<option value="">Select Country</option>');

            data.data.forEach(country => {
                $("#country").append(`<option value="${country.id}" data-countryName="${country.name}">${country.name}</option>`);
            });
        } catch (error) {
            console.error('Error fetching countries:', error);
        }
    }

    async function loadStates(countryId) {
        try {
            const response = await fetch(BaseUrl + `Api/Jyotish/State?Id=${countryId}`);
            const data = await response.json();
            $("#state").html('<option value="">Select State</option>');

            data.data.forEach(state => {
                $("#state").append(`<option value="${state.id}">${state.name}</option>`);
            });

            $("#state").prop('disabled', false);
        } catch (error) {
            console.error('Error fetching states:', error);
        }
    }

    async function loadCities(stateId) {
        try {
            const response = await fetch(BaseUrl + `Api/Jyotish/City?Id=${stateId}`);
            const data = await response.json();
            $("#city").html('<option value="">Select City</option>');

            data.data.forEach(city => {
                $("#city").append(`<option value="${city.id}" data-name="${city.name}">${city.name}</option>`);
            });

            $("#city").prop('disabled', false);
        } catch (error) {
            console.error('Error fetching cities:', error);
        }
    }
    loadCountries();
    $("#country").change(function () {
        const countryId = $(this).val();
        if (countryId) {
            loadStates(countryId);
        } else {
            $stateDropdown.html('<option value="">Select State</option>').prop('disabled', true);
            $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
        }
    });

    $("#state").change(function () {
        const stateId = $(this).val();
        if (stateId) {
            loadCities(stateId);
        } else {
            $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
        }
    });
    function loadExpertise() {
        var token = localStorage.getItem('Token3');

        $.ajax({
            url: "@BaseUrl" + 'Api/Jyotish/Expertise',
            type: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            success: function (response) {
                var expertiseDropdown = $('#expertise');
                expertiseDropdown.empty().append('<option value="">Select Expertise</option>');
                response.data.forEach(expertise => {
                    expertiseDropdown.append(new Option(expertise.name, expertise.id));
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error fetching expertise:', textStatus, errorThrown);
            }
        });
    }
    loadExpertise();
</script>