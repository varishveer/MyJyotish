



@{
    string BaseUrl = "https://api.myjyotishg.in/";
  
}                
                


<style>
    /* Background and container styling */
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #f0f4fd, #dae9f4);
        margin: 0;
        padding: 0;
        overflow-x:hidden;
    }
    *{
        box-sizing:border-box;
    }
    .astrologer-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 30px;
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Card styling */
    .astrologer-card {
        position: relative;
        background: white;
        border-radius: 15px;
        overflow: hidden;
        text-align: center;
        padding: 30px 20px;
        transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

        .astrologer-card:hover {
            transform: translateY(-20px) scale(1.05);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        /* Avatar with unique animation and effect */
        .astrologer-card img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 15px;
            border: 5px solid #f0f4fd;
            transition: border-color 0.4s ease-in-out;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
        }

        .astrologer-card:hover img {
            border-color: #ffc107;
            transform: rotate(360deg);
        }

        /* Card content styling */
        .astrologer-card h4 {
            font-size: 1.3em;
            margin: 10px 0 5px;
            color: #333;
        }

        .astrologer-card p {
            font-size: 0.95em;
            color: #666;
            margin: 8px 0;
        }

            .astrologer-card p span {
                color: #333;
                font-weight: bold;
            }

        /* Add a decorative icon for creativity */
        .astrologer-card .decorative-icon {
            position: absolute;
            top: -20px;
            right: -20px;
            font-size: 50px;
            color: rgba(255, 193, 7, 0.1);
            transition: transform 0.4s ease;
        }

        .astrologer-card:hover .decorative-icon {
            transform: rotate(45deg);
            color: rgba(255, 193, 7, 0.3);
        }
        .content-container{
            max-height:80vh;
           
        }

    .content-container::-webkit-scrollbar{
        width:4px;
        height:4px;
    }
    .content-container::-webkit-scrollbar-thumb{
            background: #fad550;
            border-radius:10px;
    }
</style>

<h4 class="border-bottom py-3 fw-bold text-secondary text-center">Astrologers</h4>
<div class="row p-3 ">
    <div class="col-sm-12 ">
        <div class="row">
            <div class="col-sm-3 ">
                <div class="row">
                    <div class="col-sm-12">
                        <form class=" border p-3 rounded shadow" id="filterForm">
                            <h3 class="fw-bold my-3">Filter</h3>
                       <select class="form-control py-2 rounded-0 mb-4" name="country" id="country">
                                <option selected disabled value="">--select country--</option>
                       </select> 
                       <select disabled class="form-control py-2 rounded-0 mb-4" name="state" id="state">
                           <option selected disabled value="">--select state--</option>
                       </select> 
                       <select disabled class="form-control py-2 rounded-0 mb-4" name="city" id="city">
                           <option selected disabled value="">--select city--</option>
                       </select>
                            <select class="form-control py-2 rounded-0 mb-4" name="experience" id="experience">
                           <option selected disabled value="">--select experience--</option>
                           <option value="1,5">1-5 years</option>
                                <option value="5,10">5-10 years</option>
                                <option value="10,15">10-15 years</option>
                                <option value="15,20">15-20 years</option>
                                <option value="0,20">more than 20 years</option>
                       </select>
                        <select class="form-control py-2 rounded-0 mb-4" name="gender" id="gender">
                           <option selected disabled value="">--select gender--</option>
                           <option value="male">Male</option>
                           <option value="female">Female</option>
                       </select>
                        <select class="form-control py-2 rounded-0 mb-4" name="rating" id="rating">
                           <option selected disabled value="">--select rating--</option>
                           <option>1</option>
                           <option>2</option>
                           <option>3</option>
                           <option>4</option>
                           <option>5</option>
                       </select>
                        <select class="form-control py-2 rounded-0 mb-4" name="activity" id="activity">
                            <option selected disabled value="">--select activity--</option>
                            <option value="1">Alphabetically</option>
                            <option value="2">Experience</option>
                       </select>

                       
                      <div class="mt-3 d-flex justify-content-center gap-3">
                                <input type="reset" value="Reset" class="btn text-light fw-semi-bold btn-warning" />
                       <input type="submit" value="Filter" class="btn text-light fw-semi-bold btn-warning" />
                            </div>
                        </form>
                    </div>
                </div>
                </div>
            <div class="astrologer-list col-sm-9 overflow-auto content-container" id="astrologerList">
    <!-- Astrologer results will be injected here -->
</div>
        </div>
    </div>
</div>
<script>
    // Automatically search based on the URL parameter when the page loads
    // $(document).ready(function () {
    //     var keyword = getURLParameter('keyword');

    //     if (keyword) {
    //         FilterAstrologers(keyword);
    //     } else {
    //         $('#astrologerList').html('<p>No keyword provided.</p>');
    //     }
    // });

    // Function to get the URL parameter
    function getURLParameter(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
    }

    // Function to search astrologers
    $("#filterForm").submit(function (e) {
        e.preventDefault();
        let formData=new FormData();
        let filterData = $(this).serializeArray();
        filterData.forEach(function(d){
            formData.append(d.name, d.value);
        })
        debugger
        $.ajax({
            url: BaseUrl + `Api/User/FilterAstrologer`,
            type: 'POST',
            processData:false,
            contentType:false,
            data: formData,
            success: function (response) {
                console.log(response)
                if (response.status === 200) { 
                    var astrologers = response.data;
                    displayAstrologers(astrologers);
                } else {
                    $('#astrologerList').html('<p>No astrologers found.</p>');
                }
            },
            error: function () {
                $('#astrologerList').html('<p>An error occurred while searching for astrologers.</p>');
            }
        });
    })

    //function for create stars
    function generateFullStars() {
        return '<i class="fa fa-star"></i>'.repeat(5); // Return 5 filled stars
    }
    // Function to display astrologers
    function displayAstrologers(astrologers) {
        var html = '';
        astrologers.forEach(function (astrologer) {
            var ImgSrc = "@BaseUrl" + `${astrologer.profileImageUrl}`;
            html += `
                 <div class="col-12 col-sm-12 col-md-12 col-lg-12 mb-2 p-1">
                                            <div class="card astrologer-card shadow">
                                                 <a class='text-secondary text-decoration-none' href= "/Home/JyotishProfile?Id=${astrologer.id}">
                                                        <img src=  "${ImgSrc}" class="card-img-top rounded-circle" alt="${astrologer.name}">
                                                    <div class="card-body p-0 pt-2">
                                                        <h6 class="card-title text-center">${astrologer.name} - ${astrologer.city}</h6>
                                                            <p class='text-center text-warning' >${generateFullStars()}</p>
                                                        <p class="card-text px-1 text-center" >
                                                             ${astrologer.expertise || 'NA'} | ${astrologer.experience != null ? astrologer.experience : 0} Years
                                                        </p>
                                                    </div>
                                                </a>
                                            </div>
                                        </div>

                `;
        });
        $('#astrologerList').html(html);
    }
</script>
<script>
    async function loadCountries() {
        try {
            const response = await fetch(BaseUrl + 'Api/Jyotish/Country');
            const data = await response.json();
            $("#country").html('<option value="">Select Country</option>');

            data.data.forEach(country => {
                $("#country").append(`<option value="${country.id}" data-countryName="${country.name}">${country.name}</option>`);
            });
        } catch (error) {
            console.error('Error fetching countries:', error);
        }
    }

    async function loadStates(countryId) {
        try {
            const response = await fetch(BaseUrl + `Api/Jyotish/State?Id=${countryId}`);
            const data = await response.json();
            $("#state").html('<option value="">Select State</option>');

            data.data.forEach(state => {
                $("#state").append(`<option value="${state.id}">${state.name}</option>`);
            });

            $("#state").prop('disabled', false);
        } catch (error) {
            console.error('Error fetching states:', error);
        }
    }

    async function loadCities(stateId) {
        try {
            const response = await fetch(BaseUrl + `Api/Jyotish/City?Id=${stateId}`);
            const data = await response.json();
            $("#city").html('<option value="">Select City</option>');

            data.data.forEach(city => {
                $("#city").append(`<option value="${city.id}" data-name="${city.name}">${city.name}</option>`);
            });

            $("#city").prop('disabled', false);
        } catch (error) {
            console.error('Error fetching cities:', error);
        }
    }
    loadCountries();
    $("#country").change(function () {
        const countryId = $(this).val();
        if (countryId) {
            loadStates(countryId);
        } else {
            $stateDropdown.html('<option value="">Select State</option>').prop('disabled', true);
            $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
        }
    });

    $("#state").change(function () {
        const stateId = $(this).val();
        if (stateId) {
            loadCities(stateId);
        } else {
            $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
        }
    });

</script>