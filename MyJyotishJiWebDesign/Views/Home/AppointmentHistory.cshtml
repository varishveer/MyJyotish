

<div class="container appointment-cont my-2 px-2 py-4 pb-5 shadow rounded">
    <h5 class="text-secondary border-bottom pb-2 text-center my-4 appoinmentHeader">Appointment History</h5>
    <div class="row">
        <div class="col-sm-12">
            <div class="my-3 fw-bold ">
                <div class="row justify-content-start appointment"></div>
            </div>
        </div>
    </div>
</div>

<style>
    .modal-dialog-centered {
        display: flex;
        align-items: center;
        justify-content: center;
        position:relative;
    }
</style>
<div class="modal fade" id="ProblemModals" tabindex="-1" aria-labelledby="ProblemModalsLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="ProblemModalsLabel">Problem Details</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
               
                <p id="problemDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        function reverseDate(dateString) {
            const parts = dateString.split('-');
            const reversedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;
            return reversedDate;
        }

        var appointmentUrl = BaseUrl + `api/User/AppointmentHistory?Id=${localStorage.getItem('userId')}`;
        let appointmentArray;

        $.ajax({
            url: appointmentUrl,
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${localStorage.getItem("Token")}`,
                'Content-Type': 'application/json'
            },
            success: function (response) {
                console.log(response);
                appointmentArray = response.data;
            },
            error: function (err) {
                console.log(err);
            }
        }).then(() => {
            $(".appointment").empty();
            if (appointmentArray && appointmentArray.length > 0) {
                appointmentArray.forEach(function (d) {
                    let fdata = d.status || "Not Confirmed"; // Default status if not available

                    let cards = `
                                   <div class="col-sm-4 col-md-4 mb-4">
        <div class="card shadow-sm rounded border">
            <div class="card-body p-3">
                <div class="row">
                    <div class="col-sm-6">
                        <a href='/Home/JyotishProfile?Id=${d.userId}' class="text-decoration-none">
                            <h5 class="card-title fw-semibold text-dark">${d.userName}</h5>
                        </a>
                        <p class="card-subtitle my-2 text-muted">Fees: ${d.amount != null ? d.amount : "0"}</p>
                        <p class="card-text text-muted">Problem:
                            <i class="fas fa-eye" data-bs-toggle="modal" data-bs-target="#ProblemModals" data-problem="${d.problem}"></i>
                        </p>
                    </div>
                    <div class="col-sm-6">
                        <p class="card-text text-muted">Date: ${reverseDate(d.date.split("T")[0])}</p>
                        <p class="card-text text-muted">Time: ${d.time}</p>
                        <span class="badge ${fdata == 'Active' ? 'bg-success' : fdata == 'Pending' ? 'bg-warning' : fdata == 'Cancelled' ? 'bg-danger' : 'bg-info'}">${fdata}</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

                                `;

                    $(".appointment").append(cards);
                });
            } else {
                $(".appointment").html(`<p class='my-5 text-center text-secondary'>There are no appointments yet.</p>`);
            }
        });

        // Listen for the click event on problem icon
        $('#ProblemModals').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var problem = button.data('problem'); // Extract the problem from data-* attribute

            var modal = $(this);
            modal.find('.modal-body #problemDetails').text(problem); // Set the modal content
        });
    });
</script>
