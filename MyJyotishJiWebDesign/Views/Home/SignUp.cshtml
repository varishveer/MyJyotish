@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    Layout = "Extra";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    .container {
        margin-top: 50px;
        margin-bottom: 50px;
    }

    .left-part {
        border-radius: 10px 0px 0px 10px;
        box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.2);
        padding: 15px;
    }

    .right-part {
        border-radius: 0px 10px 10px 0px;
        box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.2);
        padding: 30px;
        background-color: white;
    }

    .responsive-image {
        max-width: 100%;
        height: auto;
        border-radius: 10px;
    }

    h2 {
        margin-bottom: 20px;
        color: black;
    }

    .btn-primary {
        border-radius: 6px;
    }

    .form-group {
        margin-bottom: 0.5rem;
    }

    .form-label {
        margin-bottom: 0.2rem;
        font-size: 16px;
    }

    .input-group {
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        font-size: 12px;
    }

    .btn:not(:disabled):not(.disabled) {
        font-size: 12px;
    }

    .otpcolour {
        color: white;
        background-color: lightslategray;
    }

    #PlaceOfBirthList
    {
        position: absolute;
        height: 250px;
        padding:10px;
        overflow: auto;
        
    }

    .pOBPtag:hover{
        background-color : skyblue;
        color:white;
    }

</style>
<div class="container h-80 ">
    <div class="row w-70">
        <div class="col-md-5 left-part d-flex justify-content-center align-items-center">
            <img src="~/gif/6300830.jpg" alt="Sign Up Image" class="responsive-image" />
        </div>
        <div class="col-md-7 right-part">
            <h2 class="mb-3 d-flex justify-content-center">Sign Up</h2>
            <form id="registrationForm">
                <div class="form-row row">
                    <div class="form-group col-md-6 mb-0">
                        <label for="name" class="form-label">Name:</label>
                        <input type="text" id="name" name="name" placeholder="Enter your name" class="form-control mb-0"
                               required>
                    </div>
                    <div class="form-group col-md-6 mb-0">
                        <label for="email" class="form-label">Email:</label>
                        <div class="input-group">
                            <input type="email" id="email" name="email" class="form-control mb-0"
                                   placeholder="Enter your email" aria-label="Recipient's username" required>
                            <button class="btn btn-outline-secondary otpcolour" type="button" id="getOtp">Get OTP</button>
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-12 mb-0 d-none otpContainer">
                    <label for="otp" class="form-label otp-label" >Verification:</label>
                    <div class="input-group">
                        <input type="number" id="otp" name="otp" class="form-control otp-input" 
                               placeholder="Enter OTP" >
                        <button class="btn btn-outline-secondary otp-button" type="button" id="verifyOtp"
                               >
                            Verify OTP
                        </button>
                    </div>
                </div>

                <div class="form-row row">
                    <div class="form-group col-md-6">
                        <label for="gender" class="form-label">Gender:</label>
                        <select id="gender" name="gender" class="form-select custom-field" required>
                            <option value="Male" selected>Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="mobile" class="form-label">Mobile:</label>
                        <input type="tel" id="mobile" name="mobile" class="form-control custom-field" placeholder="Mobile Number"
                               required>
                    </div>
                </div>

                <div class="form-row row">
                    <div class="form-group col-md-6">
                        <label for="DoB" class="form-label">Date Of Birth:</label>
                        <input type="text" class="form-control custom-field" id="DoB" name="doB" placeholder="Enter DOB" />
                    </div>
                    <div class="form-group col-md-6 position-relative">
                        <label for="PlaceOfBirthInput" class="form-label">Place of Birth:</label>
                        <input list="PlaceOfBirthList" type="text" id="PlaceOfBirthInput" name="placeOfBirth" class="form-control custom-field"
                               placeholder="Enter City"  autocomplete="off"/>
                        <div class="position-absolute bg-light " id="PlaceOfBirthList">

                        </div>
                       @*  <datalist id="PlaceOfBirthList" name="PlaceOfBirth" class="form-select mt-2" required>
                          
                        </datalist> *@
                    </div>
                </div>

                <div class="form-row row">
                    <div class="form-group col-md-6">
                        <label for="TimeOfBirth" class="form-label">Time Of Birth:</label>
                        <input type="time" class="form-control custom-field" id="TimeOfBirth" name="timeOfBirth" />
                    </div>
                    <div class="form-group col-md-6">
                        
                    </div>
                </div>




                <button type="submit" class="btn-sm btn btn-info custom-field fw-bold text-light">Sign Up</button>

                <div class="form-row mt-3">
                    <div class="form-group col-md-12">
                        <p>
                            By submitting this form, you agree to our
                            <a href="#" class="text-info">Privacy Policy</a> and
                            <a href="#" class="text-info">Terms of Service</a>.
                        </p>
                    </div>
                    <div class="d-flex justify-content-center">
                        <p class="mb-0">Already have an account?</p>
                        <a href="/Home/Login">Login</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>


    $(document).ready(()=> {
        $(".custom-field").attr("disabled", false);
    })
    // Debounce function to limit API requests
    function debounce(func, delay) {
        let timeout;
        return function (...args) {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, args), delay);
        };
    }

    // Function to load the Place of Birth list dynamically
    async function loadPlaceOfBirth(city) {
        if (!city) return;

        try {
            const response = await fetch(BaseUrl + `Api/Account/PlaceOfBirthList?City=${encodeURIComponent(city)}`);
            const data = await response.json();
            const $placeOfBirthDropdown = $('#PlaceOfBirthList');
           

            data.data.forEach(placeOfBirth => {
                $placeOfBirthDropdown.prepend(`<p class="pOBPtag" onClick="setPlace('${placeOfBirth}')"> ${placeOfBirth}</p>`);
            });
        } catch (error) {
            console.error('Error fetching PlaceOfBirth:', error);
        }
    }
    function setPlace(svalue) {

        $('#PlaceOfBirthList').hide();
        $('#PlaceOfBirthInput').val(svalue);
    }
    // Trigger API call on every keypress in the PlaceOfBirth input
    $('#PlaceOfBirthInput').on('keyup',function () {
        debugger
        $('#PlaceOfBirthList').show();
        const city = $(this).val();
        loadPlaceOfBirth(city);
       
    });

    // Get OTP button click event
    $("#getOtp").click(function () {
        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        const email = $('#email').val();

        $.ajax({
            url: BaseUrl + `Api/Account/RegisterUserEmail?email=${encodeURIComponent(email)}`,
            type: 'POST',
            success: function (res) {
                
                if (res.status == 200) {

                    if( res.message ==  "Successful"){
                             Swal.fire({
                            title: "success",
                            text: "OTP send successfully",
                            icon: "success",
                            didClose: () => {
                          
                                $(".otpContainer").removeClass('d-none');

                           
                            }
                        })
                    }
                    else{
                      Swal.fire({
                            title: "success",
                            text: res.message,
                            icon: "success",
                            didClose: () => {
                          
                               $(".custom-field").attr("disabled" , false)

                           
                            }
                        })
                    }
                   
               
                }
                else 
                {
                    Swal.fire({
                        title: "Warning",
                        text: res.message,
                        icon: "warning",
                       
                    })
                }
              
               
            },
            error: function (xhr) {
                Swal.fire({
                    title: "error",
                    text: xhr.statusText,
                    icon: "error"
                })
              
            }
        });
    });

    // Verify OTP button click event
    $("#verifyOtp").click(function () {
        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        const email = $('#email').val();
        const otp = $('#otp').val();

        const data = { Email: email, Otp: otp };

        $.ajax({
            url: BaseUrl + `Api/Account/VerifyUserOtp`,
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (res) {

                if (res.status == 200) {

                    Swal.fire({
                        title: "success",
                        text: "OTP verified successfully",
                        icon: "success",
                        didClose: () => {
                            $("#otp").show();
                              $(".custom-field").attr("disabled", false);
                            $("#verifyOtp").show();
                        }
                    })
                }
                else {
                    Swal.fire({
                        title: "Warning",
                        text: res.message,
                        icon: "warning",

                    })
                }

            },
            error: function (xhr) {
                 
                Swal.fire({
                    title: "error",
                    text: xhr.statusText,
                    icon: "error"
                })
            }
        });
    });
    function convertDateFormatdesc(dateString) {
        const dateParts = dateString.split('/');

        if (dateParts.length === 3) {
            const day = dateParts[0];
            const month = dateParts[1];
            const year = dateParts[2];

            return `${month}/${day}/${year}`;
        } else {
            return 'Invalid date format';
        }
    }
    // Form submission event
    $('#registrationForm').on("submit", function (event) {
        event.preventDefault();


        var placeOfBirthList = $('#PlaceOfBirthInput').val()
        if (!$('#name').val() || !$('#email').val() || !$('#gender').val() || !$('#mobile').val() ||
            !$('#DoB').val() || !$('#PlaceOfBirthInput').val() || !$('#TimeOfBirth').val()
        ) {

            Swal.fire({
                icon: 'warning',
                title: 'Incomplete Form',
                text: 'Please fill in all required fields before submitting.',

            });
            return; // Exit if any field is empty
        }



        if ($('#mobile').val().length != 10) {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Number',
                text: 'Please enter a valid 10-digit number.',
                
            });
            return; // Stop form submission
        }
        let formData=new FormData();
        let arrData = $(this).serializeArray();
        arrData.forEach(function(d){
            if(d.name=="doB"){
                let convertedDate = convertDateFormatdesc(d.value)
                    formData.append(d.name, convertedDate)
            }else{
                formData.append(d.name, d.value)

            }
        })



        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
      

       
        console.log(formData);
        $.ajax({
            url: BaseUrl + 'Api/Account/RegisterUserDetails',
            type: 'POST',
            processData:false,
            contentType:false,
            data: formData,
            success: function (response) {
                if (response.status === 200) {
                    Swal.fire({
                        title: "success",
                        text: "Registered Successfully",
                        icon: "success",
                        didClose: () => {
                            window.location.href = "/Home/Login";
                        }
                    })
                }
                else {
                    Swal.fire({
                        title: "error",
                        text: response.message,
                        icon: "error"
                    })
                }
                           
            },
            error: function (xhr) {
                alert('Error: ' + xhr.status + ' - ' + xhr.statusText);
            }
        });
    });


    let currentDate = new Date();

    // Subtract 20 years from the current date
    currentDate.setFullYear(currentDate.getFullYear() - 20);

    $("#DoB").attr("max", currentDate.toISOString().split('T')[0])
</script>
<script>
    var maxDate = new Date();
    maxDate.setFullYear(maxDate.getFullYear());
    

    // Initialize the datepicker with the calculated maxDate
    $("#DoB").datepicker({
        autoclose: true,
        dateFormat: 'dd-mm-yyyy',
        changeMonth: true,
        changeYear: true,
        yearRange: "c-100:c",
        endDate: maxDate,
        showAnim: "slideDown",
        buttonImageOnly: true,
        buttonText: "Select date"


    })

    function convertDateFormat(dateString) {
        const dateParts = dateString.split('/');

        if (dateParts.length === 3) {
            const month = dateParts[0];
            const day = dateParts[1];
            const year = dateParts[2];

            return `${day}/${month}/${year}`;
        } else {
            return 'Invalid date format';
        }
    }
    $("#DoB").on('change', function () {
        let formatedDate = convertDateFormat($(this).val());
        console.log(formatedDate)
        setTimeout(() => {

            $(this).val(formatedDate)
        })
    })
</script>

