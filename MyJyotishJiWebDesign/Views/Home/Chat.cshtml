
<style>
    /* Background and container styling */
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #f0f4fd, #dae9f4);
        margin: 0;
        padding: 0;
    }

    .astrologer-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 30px;
        padding: 50px 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Card styling */
    .astrologer-card {
        position: relative;
        background: white;
        border-radius: 15px;
        overflow: hidden;
        text-align: center;
        padding: 30px 20px; 
        transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

        .astrologer-card:hover {
            transform: translateY(-20px) scale(1.05);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        /* Avatar with unique animation and effect */
        .astrologer-card img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 15px;
            border: 5px solid #f0f4fd;
            transition: border-color 0.4s ease-in-out;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
        }

        .astrologer-card:hover img {
            border-color: #ffc107;
            transform: rotate(360deg);
        }

        /* Card content styling */
        .astrologer-card h4 {
            font-size: 1.3em;
            margin: 10px 0 5px;
            color: #333;
        }

        .astrologer-card p {
            font-size: 0.95em;
            color: #666;
            margin: 8px 0;
        }

            .astrologer-card p span {
                color: #333;
                font-weight: bold;
            }

        /* Add a decorative icon for creativity */
        .astrologer-card .decorative-icon {
            position: absolute;
            top: -20px;
            right: -20px;
            font-size: 50px;
            color: rgba(255, 193, 7, 0.1);
            transition: transform 0.4s ease;
        }

        .astrologer-card:hover .decorative-icon {
            transform: rotate(45deg);
            color: rgba(255, 193, 7, 0.3);
        }
</style>
<div class="astrologer-list mt-3" id="astrologerList">
    <!-- Astrologer results will be injected here -->
</div>





<div class="modal fade" id="exampleModal3" tabindex="-1" aria-labelledby="exampleModal3Label" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModal3Label"> Please enter your details </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="row d-flex">
                    <div class="col-md-4 mb-2">
                        <label name="Name">Name</label>
                        <input class="form-control" name="Name" id="Name" type="text" />
                    </div>

                    <div class="col-md-4  mb-2">
                        <label name="Gender">Gender</label>
                        <select id="Gender" name="Gender" class="form-select custom-field" required>
                            <option value="Male" selected>Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>

                    <div class="col-md-4  mb-2">
                        <label name="DateOfBirth">DateOfBirth</label>
                        <input class="form-control" name="DateOfBirth" id="DateOfBirth" type="date" />
                    </div>
                </div>

                <div class="row d-flex">
                    <div class="col-md-4 mb-2 ">
                        <label name="TimeOfBirth">TimeOfBirth</label>
                        <input class="form-control" name="TimeOfBirth" id="TimeOfBirth" type="time" />
                    </div>
                    <div class="col-md-4 mb-2 position-relative">
                        <label name="PlaceOfBirth">PlaceOfBirth</label>

                        <input list="PlaceOfBirthList" type="text" id="PlaceOfBirth" name="placeOfBirth" class="form-control custom-field"
                               placeholder="Enter City" autocomplete="off" />
                        <div class="position-absolute w-100 bg-light d-none" id="PlaceOfBirthList">
                        </div>
                    </div>
                    <div class="col-md-4  mb-2">
                        <input id="JyotishId" hidden />
                        <input id="UserId" hidden />
                        <input id="Action" value="2" hidden />
                    </div>
                </div>

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="DataSubmitBtn">Submit</button>
            </div>
        </div>
    </div>
</div>


<script>


     $('#DataSubmitBtn').on('click', function () {
       
        
        var Name = $("#Name").val();
        var Gender = $("#Gender").val();
        var DateOfBirth = $("#DateOfBirth").val();
        var TimeOfBirth = $("#TimeOfBirth").val();
        var PlaceOfBirth = $("#PlaceOfBirth").val();
        var astrologerId = $('#JyotishId').val();

        var UserId = localStorage.getItem('userId');
     

        var DataContainer = {
            Name: Name,
            Gender: Gender,
            DateOfBirth: DateOfBirth,
            TimeOfBirth: TimeOfBirth,
            PlaceOfBirth: PlaceOfBirth,
            JyotishId: astrologerId,
            UserId: UserId,
            Action: 1
        }

        $.ajax({
            url: BaseUrl + "api/User/AddUserServiceRecord", // Ensure BaseUrl is properly defined
            method: "POST",
            headers: {
                'Authorization': `Bearer ${localStorage.getItem("Token")}` // Retrieve token from localStorage
            },
            data: JSON.stringify(DataContainer), // Corrected JSON.stringify
            contentType: "application/json", // Ensure content type is set to JSON
            success: function (response) {
                if (response.status === 200) {
                    // Success case: Show success message using SweetAlert
                    Swal.fire({
                        title: "Success!",
                        text: "Successful",
                        icon: "success"
                    });
                } else {
                    // Handle unexpected response status (if needed)
                    Swal.fire({
                        title: "Error!",
                        text: "There was an issue with the response.",
                        icon: "error"
                    });
                }
            },
            error: function (xhr, status, error) {
                // Error case: Handle request errors
                Swal.fire({
                    title: "Error!",
                    text: "Something went wrong. Please try again later.",
                    icon: "error"
                });
            }
        });

    });
    var UserId = localStorage.getItem('userId');
    if(UserId != null && UserId != undefined)
    {
        GetUserDataForService(UserId);
    }

     function GetUserDataForService(Id) {


        $.ajax({
            url: `${BaseUrl}api/User/GetUserDataForService?Id=${Id}`,
            method: "GET",
            headers: {
                'Authorization': `Bearer ${localStorage.getItem("Token")}`
            },
            success: function (response) {
                if (response.status === 200) {

                    $('#Name').val(response.data.name);
                    $('#Gender').val(response.data.gender);
                    $('#DateOfBirth').val(response.data.dateOfBirth);
                    $('#TimeOfBirth').val(response.data.timeOfBirth);
                    $('#PlaceOfBirth').val(response.data.placeOfBirth);

                }
            },
            error: function (xhr, status, error) {

                console.log("Error:", error);
                console.log("Status:", status);
                console.log("XHR:", xhr);
            }
        });
    }

    function ChatBtn(id)
    {
         $('#JyotishId').val(id);
    }
    // Function to fetch astrologers for the chat
    function GetAstroListCallChat() {
        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        $.ajax({
            url: BaseUrl + 'Api/User/GetAstroListCallChat?listName=Chat',
            type: 'GET',
            success: function (response) {
                 
                if (response.status === 200) {
                    var astrologers = response.data;
                    if (astrologers.length > 0) {
                        displayAstrologers(astrologers);
                    } else {
                        $('#astrologerList').html('<p>No astrologers found.</p>');
                    }
                } else {
                    $('#astrologerList').html('<p>No astrologers found.</p>');
                }
                Swal.close()
            },
            error: function () {
                 
                $('#astrologerList').html('<p>An error occurred while searching for astrologers.</p>');
            }
        });
    }
    function generateFullStars() {
        return '<i class="fa fa-star"></i>'.repeat(5); // Return 5 filled stars
    }
    // Function to display astrologers dynamically
    function displayAstrologers(astrologers) {
        console.log(astrologers)
        var html = '';
        astrologers.forEach(function (astrologer) {
            var ImgSrc = BaseUrl + astrologer.profileImageUrl;
            html += `
                    <div class="astrologer-card">
                            <a href="/Home/JyotishProfile?Id=${astrologer.id}" class="text-decoration-none">
                            <i class="decorative-icon fa fa-star"></i>
                                <img src=  "${ImgSrc}"  alt="${astrologer.name}">
                                                    <div class="card-body p-0 pt-2">
                                                        <h6 class="card-title  text-center">${astrologer.name} - ${astrologer.city}</h6>
                                                            <p class='text-center text-warning' >${generateFullStars()}</p>
                                                        <p class="card-text px-1 text-center" >
                                                             ${astrologer.expertise} | ${astrologer.experience != null ? astrologer.experience : 0} Years
                                                        </p>
                                                    </div>
                        </a><br>
                                 <button class="btn btn-primary chatBtn me-2 mb-2 mb-md-0 " onclick="ChatBtn(${astrologer.id})"   style="background-color: #4CAF50; border-color: #4CAF50;" data-bs-toggle="modal" data-bs-target="#exampleModal3">
                                        Start Chat ₹${astrologer.chatCharges}/min
                            </button>
                    </div>
                `;
        });
        $('#astrologerList').html(html);
    }

    // Initialize the function to get astrologers on page load
    GetAstroListCallChat();
</script>
