@{
    Layout = null;
  var BaseUrl = "https://api.myjyotishg.in/";
    //var BaseUrl = "https://localhost:7118/";

}
<html>
    <head>
        <script>
        var BaseUrl = "https://api.myjyotishg.in/";
       // var BaseUrl = "https://localhost:7118/";

        </script>
  
<style>
    .select2{
        min-width:100%;
    }
    #callInputBox{
        display:none;
    }
    #chatInputBox{
        display:none;
    }

 
    .dropify-message p {
        font-size: 12px; /* Adjust this value to make the placeholder smaller */
        color: #aaa; /* Optional: Change placeholder color */
    }
    body{
        overflow-x:hidden !important;
    }
   ::-webkit-scrollbar{
       width:5px;
       height:5px;
   }
   ::-webkit-scrollbar-thumb{
       background:gray;
       border-radius:10px;
   }
   
  
  
   .nav-container{
       height:auto !important;
   }

        .detail-container {
       min-height:500px !important;
   }
   .profile-container{
       max-height:300px;
       border:1px solid black !important;
   }
   .nexbtn-container{
       bottom:10px;
       right:10px;
   }
   input,select,textarea{
       border-radius:0 !important;
   }

        .product {
            width: 400px;
            padding: 20px;
            background-color: #f5f5f5;
            text-align: center;
        }

            .product h2 {
                background-color: black;
                color: white;
                padding: 15px;
                width: calc(100% + 100px );
                position: relative;
                left: -50px;
            }

                .product h2::before, .product h2::after {
                    content: "";
                    position: absolute;
                    bottom: -30px;
                    border-width: 15px;
                    border-style: solid;
                }

                .product h2::before {
                    left: 0;
                    border-color: gray gray transparent transparent;
                }

                .product h2::after {
                    right: 0;
                    border-color: gray transparent transparent gray;
                }

            .product p {
                line-height: 1.6;
            }
            .select2-selection{
                padding:5px !important;
                height:auto !important;
                border-radius:0 !important;
            }

       
        .datepicker {
            z-index: 10000 !important; /* Ensure datepicker is above other elements */
            font-size: 1.1rem; /* Slightly larger font size for datepicker */
        }

            .datepicker table {
                width: 100%; /* Full width */
            }

            .datepicker th {
                background-color: white; /* Header background color */
                color: #007bff; /* Header text color */
                padding: 10px; /* More padding for header */
                border:1px solid  #007bff;
            }

            .datepicker td {
                text-align: center; /* Center align dates */
                padding: 7px; /* More padding for dates */
            }

                .datepicker td.day:hover {
                    background-color: #e9ecef; /* Light hover effect */
                    cursor: pointer; /* Pointer cursor on hover */
                }

                .datepicker td.day.active {
                    background-color: #007bff; /* Active date color */
                    color: white; /* Active date text color */
                }

                .datepicker td.day.disabled {
                    color: #ced4da; /* Disabled dates color */
                }
</style>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link href="~/dropify/css/dropify.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />

 <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/dropify/js/dropify.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- FontAwesome for icons -->
<script defer src="https://use.fontawesome.com/releases/v5.15.4/js/all.js" integrity="sha384-rOA1PnstxnOBLzCLMcre8ybwbTmemjzdNlILg8O7z1lUkLXozs4DHonlDtnE7fpc" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
    <script src="~/bootstrap-datepicker/datepicker.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js" integrity="sha512-KFHXdr2oObHKI9w4Hv1XPKc898mE4kgYx58oqsc/JqqdLMDI4YjOLzom+EMlW8HFUd0QfjfAvxSL6sEq/a42fQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="~/Jquery-validation/JqueryValidations.js"></script>
</head>
<body class="h-100  bg-light">
<div class="container-fluid  mb-5 h-100 w-100">
        <div class="product w-100">
            <h2 class="title">Update Profile</h2>
           
        </div>
<div class="row gap-2 justify-content-center">
           
    </div>
            <div class="col-sm-12 rounded p-3 bg-light">
        <div class="row ">
               
                <div class="col-sm-12" >      
                    <div class="row justify-content-end">
                            <div class="col-sm-12  rounded mb-4">
                            <div class="row gap-2 justify-content-center">
                            <div class="col-sm-3">
                                    </div>
                                <div class="col-sm-6">

                                <div class=" border-end d-flex">

                                        <button data-page="1" class="btn btn-sm active1 border-0 border-top border-start bg-dark text-light navigatorBtn rounded-0 btn-outline-dark w-100">Basic Information</button>   
                                        <button data-page="3" disabled class="btn border-0 border-top btn-sm active3 navigatorBtn rounded-0 btn-outline-dark w-100">Availability</button>
                                        <button data-page="4" disabled class="btn border-0 border-top btn-sm active4 navigatorBtn rounded-0 btn-outline-dark w-100">About</button>
                                        <button data-page="5" disabled class="btn border-0 btn-sm border-top border-end active5 navigatorBtn rounded-0 btn-outline-dark w-100">Documents</button>
                                </div>
                                </div>
                        </div>
                        </div>

                        <div class="col-sm-12">
                                <div class="row justify-content-center gap-2">
                            <div class="col-sm-3 position-sticky top-0 p-2 rounded bg-light profile-container">
                                <div class="w-100">
                                    <div class="text-center my-3 mb-5">
                                        <img src="/user-not-found.png" accept="image/*" id="profileImage" height="130" width="130" class="rounded-circle" /><br /><br />
                                        <p id="expertise-profile"></p>
                                        <label for="profile" class="btn btn-dark text-light">Edit Profile</label>
                                        <button class="btn btn-success d-none saveProfile">Save</button>
                                        <input type="file" hidden name="profile" id="profile" />
                                    </div>
                                </div>
                                </div>
                                <div class="col-sm-8  detail-container position-relative rounded border">
                                    <div class="row">   
                                        <!--basic Detail-->

                                        <div class="col-sm-12  mt-4" id="basicDetails">
                 <form id="basicForm">
                    <div class="row">
                        <div class="col-sm-6">
                            <label for="name">Name <span class="text-danger">*</span></label>
                                    <input type="text" id="name" name="Name" class="form-control" placeholder="Enter your name" />
                        </div>
                        <div class="col-sm-6">
                            <label for="email">Email <span class="text-danger">*</span></label>
                                    <input type="email" id="email" disabled name="email" class="form-control" placeholder="Enter your email" />
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="col-sm-6">
                            <label for="mobno">Mobile Number <span class="text-danger">*</span></label>
                                    <input type="text" name="mobno" disabled id="mobno" class="form-control" placeholder="Enter your Phone Number" />
                        </div>
                        <div class="col-sm-6">
                            <label for="altmobno">Alternate Number <span class="text-danger">*</span></label>
                                                        <div class="d-flex">
                                                            <input type="text" class="rounded-start" id="countryCode" value="+91" disabled style="width:40px;" />
                                    <input type="number" id="altmobno" name="AlternateMobile" class="form-control" placeholder="Enter alternate Phone Number" />
                        </div>
                        </div>
                    </div> 
                    <div class="row">
                        <div class="col-sm-6">
                                    <label for="gender">Gender <span class="text-danger">*</span></label>
                                    <select class="form-control" id="gender" name="Gender">
                        <option selected disabled>--select gender--</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                        </div>
                        <div class="col-sm-6">
                            <label for="language">Language <span class="text-danger">*</span></label>
                                    <select id="language" name="lang" class="form-control form-control-sm " multiple>
                                <option value="">Select Language</option>
                            </select>
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="col-sm-6">
                                  
                                                        <label for="dob">Date of Birth <span class="text-danger">*</span></label>
                                                        <input type="text" autocomplete="off" placeholder="dd/mm/yyyy" id="dob" name="DateOfBirthres" class="form-control" />
                                                        
                                                    </div>
                                                   
                    </div>
                        </form>

                                            <div class="text-end position-absolute nexbtn-container"><button type="button" role="button" class="btn btn-dark nxtBtn basicnxtBtn" data-page="2">Save</button></div>
                    </div>
                <!--Address-->
                                        <div class="col-sm-12 mb-5 mt-2" id="address">
                                            <div class="d-flex gap-1 mb-2 align-items-center justify-content-center">
                                                <hr class="w-100"/>
                                                <span>Address</span>
                                                <hr class="w-100" />
                                            </div>
                    <form id="addressform">
                    <div class="row">
                        <div class="col-sm-6 mb-3">
                                    <label for="country">Country: <span class="text-danger">*</span></label>
                            <select id="country" disabled name="country" class="form-control form-control-sm select2" required>
                                <option selected disabled>Select Country</option>
                            </select>
                        </div>
                        <div class="col-sm-6 mb-3">
                                    <label for="state">State: <span class="text-danger">*</span></label>
                            <select id="state" name="state" class="form-control select2 form-control-sm" disabled>
                                <option selected disabled>Select State</option>
                            </select>
                        </div>
                        <div class="col-sm-6 mb-3">
                                    <label for="city">City: <span class="text-danger">*</span></label>
                            <select id="city" name="city" class="form-control select2 form-control-sm" disabled>
                                <option selected disabled>Select City</option>
                            </select>
                        </div>
                        <div class="col-sm-6 mb-3">
                                    <label for="pincode">Pincode <span class="text-danger">*</span></label>
                            <input type="number" id="pincode" name="pincode" class="form-control" placeholder="Enter your pincode" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                                    <label for="addresstext">Address <span class="text-danger">*</span></label>
                            <textarea rows="4" name="address" id="addresstext" placeholder="Enter your full address" class="form-control"></textarea>
                        </div></div>
                        </form>
                                            
                </div>

                <!--Availability-->
              
                    <div class="col-sm-12" id="availability">

                        <div class="row mt-4">

                        <div class="col-sm-6">
                            <div class="d-flex gap-2 justify-content-between">
                            <p>You are available for pooja? : </p>
                         
                            <div>
                                 <input type="radio" class="checkboxforavail poojarbtn" value="1" name="pooja" /> Yes &nbsp;&nbsp;
                                  <input type="radio" class="checkboxforavail poojarbtn" value="0" name="pooja" /> No
                            </div>
                             </div>
                             <div>
                           <div class="d-flex justify-content-between">
                             <p>You are available for call? : </p>
                             <div>
                                <input type="radio" class="checkboxforavail callrbtn" value="1" name="call" /> Yes &nbsp;&nbsp;
                                  <input type="radio"  class="checkboxforavail callrbtn" value="0" name="call" /> No

                            </div>
                            </div>
                                                        <div id="callInputBox" class="input-box mb-1">
                                                            <label for="callprice" class="">Call Price <span class="text-danger">*</span></label>
                                                            <input type="text" class="form-control " id="callprice" name="callprice" placeholder="Enter call price ₹/Minute" />
                                                        </div>
                            </div>
                            <div>
                           <div class="d-flex gap-2 justify-content-between">

                            <p>You are available for chat? : </p>
                            <div>
                                 <input type="radio"  class="checkboxforavail chatrbtn" value="1" name="chat" />
                                                        Yes &nbsp;&nbsp;
                                   <input type="radio"  class="checkboxforavail chatrbtn" value="0" name="chat" /> No                        
                               </div>
                             </div>
                                                        <div id="chatInputBox" class="input-box mb-1">
                                                            <label for="chatprice" class="">Chat Price <span class="text-danger">*</span></label>
                                                            <input type="text" class="form-control " id="chatprice" name="chatprice" placeholder="Enter chat price  ₹/Minute" />
                                                        </div>
                             </div>
                             <div>
                          <div class="d-flex gap-2 justify-content-between">
                                   <p>You are available for Appointment? : </p>
                             <div>
                                 <input type="radio"  class="checkboxforavail apprbtn" value="1" name="appointment" />
                                                        Yes &nbsp;&nbsp;
                                  <input type="radio" class="checkboxforavail apprbtn" value="0" name="appointment" /> No
                                  </div>
                                  </div>
                                                        <div id="appointmentCharges" class="input-box mb-1">
                                                            <label for="AppointmentCharges" class="">Appointment Charges <span class="text-danger">*</span></label>
                                                            <input type="text" class="form-control " id="AppointmentChargesInp" name="AppointmentCharges" placeholder="Enter Appointment Charges" />
                                                        </div>
                                                    </div>
                                                    </div>
                                                   
                                                <div class="col-sm-6">

                           
                           
                          
                            <p class=" my-4 text-secondary alertforbox">Please check boxes if you are available</p>
                        </div>
                       
                        </div>
                                            <div class="text-end mt-3 position-absolute nexbtn-container"><button type="button" role="button" class="btn btn-dark nxtBtn" data-page="4">Save</button></div>
                </div>

                <!--About-->

                                        <div class="col-sm-12  mt-4" id="about">

                        <form id="aboutForm">
                        <div class="row">
                            <div class="col-sm-6">
                                    <label for="expertise">Expertise: <span class="text-danger">*</span></label>
                                                        <select id="expertise" name="Expert" class="form-control select2 form-control-sm" multiple>
                                <option value="" selected disabled>Select Expertise</option>
                            </select>
                            </div>
                            <div class="col-sm-6">
                            <label for="specialization">Fields: </label>
                                                        <select multiple id="specialization" name="SpecializationData" class="form-control form-control-sm select2" required>
                                <option>--select Fields--</option>
                            </select >
                                   
                            </div>
                        </div>
                        <div class="row my-3">
                            <div class="col-sm-6">
                                    <label for="awardsAndAchievement">Awards and Achievement: </label>
                                    <input type="text" id="awardsAndAchievement" name="AwordsAndAchievement" class="form-control form-control-sm">
                            </div>
                            <div class="col-sm-6">
                                    <label for="experiance">Experiance: <span class="text-danger">*</span></label>
                                    <input type="number" id="experiance" name="Experience" class="form-control form-control-sm">
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-sm-12">
                                    <label for="aboutus">About <span class="text-danger">*</span></label>
                                    <textarea rows="4" placeholder="About us" name="About" id="aboutus" class="form-control"></textarea>
                            </div>
                            </div>
                        </form>
                                            <div class="text-end mt-3 position-absolute nexbtn-container"><button type="button" role="button" class="btn btn-dark nxtBtn" data-page="5">Save</button></div>
                </div>

                <!--Documents-->
                <div class="col-sm-12  mt-2" id="document">

                                <div class="row h-100 overflow-auto">
<div class="col-sm-6  mb-3">
                                <label for="idProof">Aadhar Card Front <span class="text-danger">*</span></label>
    <input type="file" name="idProof" id="idProof"/>

</div>
<div class="col-sm-6 mb-3">
                                <label for="addressdoc">Aadhar Card Back <span class="text-danger">*</span></label>
    <input type="file" name="addressdoc" id="addressdoc"/>
</div>
                        <div class="col-sm-6  mb-3">
                                <label for="professionaldoc">Professional Certificate <span class="text-danger">*</span></label>
                   <input type="file" name="professionaldoc" id="professionaldoc" />

</div>
                        <div class="col-sm-6  mb-3">
                                <label for="metricdocs">10th Marksheet</label>
               <input type="file" name="metricdocs" id="metricdocs" />

</div>
                        <div class="col-sm-6  mb-3">
                                <label for="postmetricdocs">12th Marksheet</label>
                  <input type="file" name="postmetricdocs" id="postmetricdocs" />

</div>
                    <div class="text-end mt-3 mb-3"><input type="submit" id="finalSubmit" value="Submit" class="btn fw-bold btn-dark" /></div>
</div>
                </div>
                    </div>
                        </div>
                            </div>
                        </div>
                        </div>
        </div>
    </div>
</div>
</div>


<script>
  
    async function loadLanguage() {
        try {
            const response = await fetch("@BaseUrl" + 'Api/Account/Languages');
            const data = await response.json();
            const $languageDropdown = $('#language');
            $languageDropdown.html('<option value="">Select Language</option>');

            data.data.forEach(language => {
                $languageDropdown.append(`<option value="${language}">${language}</option>`);
            });
        } catch (error) {
            console.error('Error fetching Language:', error);
        }
    }
    loadLanguage();
    function loadExpertise() {
        var token = localStorage.getItem('Token2');

        $.ajax({
            url: "@BaseUrl" + 'Api/Jyotish/Expertise',
            type: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            success: function (response) {
                var expertiseDropdown = $('#expertise');
                expertiseDropdown.empty().append('<option value="" selected disabled>Select Expertise</option>');
                response.data.forEach(expertise => {
                    expertiseDropdown.append(new Option(expertise.name, expertise.name));
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error fetching expertise:', textStatus, errorThrown);
            }
        });
    }
    loadExpertise();

            function loadCountries() {
                $.ajax({
                    url: "@BaseUrl" + 'Api/Jyotish/Country',
                    type: 'GET',
                    success: function (response) {
                        var countryDropdown = $('#country');
                        countryDropdown.empty().append('<option value="">Select Country</option>');
                        response.data.forEach(country => {
                            countryDropdown.append(`<option class='country' value="${country.id}">${country.name}</option>`);
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error fetching countries:', textStatus, errorThrown);
                    }
                });
            }
            loadCountries();
            // Fetch States based on selected Country
            $('#country').change(function () {
                var countryId = $(this).val();
            $('#state').prop('disabled', false).empty().append('<option value="">Select State</option>'); // Reset State dropdown
            $('#city').prop('disabled', true).empty().append('<option value="">Select City</option>'); // Reset City dropdown

            if (countryId) {
                $.ajax({
                    url: "@BaseUrl" + 'Api/Jyotish/State',
                    type: 'GET',
                    data: { Id: countryId },
                    success: function (response) {
                        var stateDropdown = $('#state');
                        stateDropdown.empty().append('<option value="">Select State</option>');
                        response.data.forEach(state => {
                            stateDropdown.append(`<option class='state' value="${state.id}">${state.name}</option>`);
                        });
                        stateDropdown.prop('disabled', false);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error fetching states:', textStatus, errorThrown);
                    }
                });
                }
            });

            // Fetch Cities based on selected State
            $('#state').change(function () {
                var stateId = $(this).val();
            $('#city').prop('disabled', false).empty().append('<option value="">Select City</option>'); // Reset City dropdown

            if (stateId) {
                $.ajax({
                    url: "@BaseUrl" + 'Api/Jyotish/City',
                    type: 'GET',
                    data: { Id: stateId },

                    success: function (response) {
                        var cityDropdown = $('#city');
                        cityDropdown.empty().append('<option value="">Select City</option>');
                        response.data.forEach(city => {
                            cityDropdown.append(`<option class='city' value="${city.id}">${city.name}</option>`);
                        });
                        cityDropdown.prop('disabled', false);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error fetching cities:', textStatus, errorThrown);
                    }
                });
                }
            });


        $("#profile").on("change",function(){
            const file = this.files[0]; 
            if (file) {
                const url = URL.createObjectURL(file); 
                $("#profileImage").attr("src", url).show();
                $(".saveProfile").removeClass("d-none")

            } else {
                $("#profileImage").attr("src", "/user-not-found.png");
            }
        })
    </script>


    <script>
    $("#basicDetails").show()
    $("#address").show();
    $("#availability").hide();
    $("#about").hide();
    $("#document").hide();

    function showRequiredAlert(){
            Swal.fire({
                title: "Required",
                text: "some input fields are empty",
                icon: "warning"
            });
    }
    function pagination(page,clickby) {
            $(".navigatorBtn").each(function (i, d) {
                d.classList.remove("bg-dark")
                d.classList.remove("text-light")
            });
        if (page == 1) {
                $(".active1").addClass("bg-dark")
                $(".active1").addClass("text-light")
            $("#basicDetails").show()
            $("#address").show();
            $("#availability").hide();
            $("#about").hide();
            $("#document").hide();
                

        } else if (page == 2) {
            if ($("#altmobno").val() == $("#mobno").val()) {
                Swal.fire({
                    title: "warning",
                    text: "alternate mobile number is not same as your first mobile number",
                    icon: "warning",

                })
               
                    $(".active2").attr("disabled", true)
                    $(".active1").addClass("bg-dark")
                    $(".active1").addClass("text-light")
            } else if($("#altmobno").val().length!=10) {
                    Swal.fire({
                        title: "warning",
                        text: "invalid number",
                        icon: "warning",

                    })
            }
                    else if($("#dob").val()==""){
                        Swal.fire({
                            title: "warning",
                            text: "invalid date of birth",
                            icon: "warning",

                        })
                    }
                else{
                let basicData = $("#basicForm").serializeArray();
                let enablenxt = 0;
                debugger
                basicData.forEach(function (d) {
                    if (d.value != "" & d.value != null & d.value != 0) {
                        enablenxt++;
                    }
                })
                if (enablenxt == basicData.length ) {
                    $(".active2").attr("disabled", false)
                } else {
                    $(".active2").attr("disabled", true)
                    $(".active1").addClass("bg-dark")
                    $(".active1").addClass("text-light")
                    showRequiredAlert()
                }
                if ($(".active2").attr("disabled") === undefined) {
                    if (clickby == "btn") {
                        basicData.push({ name: "Id", value: localStorage.getItem("Id") })
                        basicData.push({ name: "BasicSection", value: true })
                        addDataonTemp(basicData,"basicData")
                    }
                    $(".active2").addClass("bg-dark")
                    $(".active2").addClass("text-light")
                    $("#basicDetails").show()
                    $("#address").show();
                    $("#availability").hide();
                    $("#about").hide();
                    $("#document").hide();
                }
            }

        } else if (page == 3) {
                let basicData = $("#addressform").serializeArray();
                let enablenxt = 0;
                debugger
                basicData.forEach(function (d) {
                    if (d.value != "" & d.value != null & d.value != 0) {
                        enablenxt++;
                    }
                })
                if (enablenxt == basicData.length) {
                    
                    $(".active3").attr("disabled", false)
                } else {
                    $(".active3").attr("disabled", true)
                    $(".active2").addClass("bg-dark")
                    $(".active2").addClass("text-light")
                    showRequiredAlert()

                }
                if ($(".active3").attr("disabled") === undefined) {
                    if ($("#pincode").val().length == 6) {
                    if (clickby == "btn") {
                        basicData.push({ name: "Id", value: localStorage.getItem("Id") })
                        basicData.push({ name: "AddressSection", value: true })
                        addDataonTemp(basicData,"addressData")
                    }
                    $(".active3").addClass("bg-dark")
                    $(".active3").addClass("text-light")
            $("#availability").show();
            $("#address").hide();
            $("#basicDetails").hide()
            $("#about").hide();
            $("#document").hide();
                } else {
                    Swal.fire({
                        title: "warning",
                        text: "please enter valid pincode",
                        icon: "warning"
                    })
                }
                }
        } else if (page == 4) {
            debugger
                let callPrice = $("#callprice").val()
                let chatPrice = $("#chatprice").val()
                let appPrice = $("#AppointmentChargesInp").val()
                if ($(".checkboxforavail:checked").length==4) {
                    $(".active4").attr("disabled", false)

                    if ($(".callrbtn:checked").length > 0 && $(".callrbtn:checked").val() == 1 && callPrice != "") {

                debugger
                $(".active4").attr("disabled", false)
                    } else if ($(".callrbtn:checked").length > 0 && $(".callrbtn:checked").val() == 1 && callPrice == "") {
                    $(".active4").attr("disabled", true)
                        showRequiredAlert()
                }


                    if ($(".apprbtn:checked").length > 0 && $(".apprbtn:checked").val() == 1 && appPrice != "") {

                $(".active4").attr("disabled", false)
                    } else if ($(".apprbtn:checked").length > 0 && $(".apprbtn:checked").val() == 0) {
                        $(".active4").attr("disabled", false)

                    } else if ($(".apprbtn:checked").length > 0 && $(".apprbtn:checked").val() == 1 && appPrice == "") {
                    $(".active4").attr("disabled", true)
                        showRequiredAlert()
                    }
                    if (($("#chatCheckbox:checked").length > 0 && chatPrice != "" && $(".chatrbtn:checked").val() == 1) & ($("#callCheckbox:checked").length > 0 && $(".callrbtn:checked").val() == 1 && callPrice != "") && ($(".apprbtn:checked").length > 0 && $(".apprbtn:checked").val() == 1 && appPrice != "")) {
                    $(".active4").attr("disabled", false)
                    } else if ($(".chatrbtn:checked").length > 0 && chatPrice == "" && $(".apprbtn:checked").val() == 1) {
                    $(".active4").attr("disabled", true)
                    showRequiredAlert()

                }
           }else{
                    $(".active4").attr("disabled", true)
                    $(".active3").addClass("bg-dark")
                    $(".active3").addClass("text-light")
                    showRequiredAlert()

           }
                if ($(".active4").attr("disabled") === undefined) {
                    if (clickby == "btn") {

                        let availability = [];
                        availability.push({ name: "Id", value: localStorage.getItem("Id") })
                        availability.push({ name: "AvailbilitySection", value: true })
                        availability.push({ name: "pooja", value: $(".poojarbtn:checked").length > 0 && $(".poojarbtn:checked").val() == 1 ? true : false })
                        availability.push({ name: "Call", value: $(".callrbtn:checked").length > 0 && $(".callrbtn:checked").val() == 1 ? true : false })
                        availability.push({ name: "Chat", value: $(".chatrbtn:checked").length > 0 && $(".chatrbtn:checked").val() == 1 ? true : false })
                        availability.push({ name: "CallCharges", value: $(".callrbtn:checked").length > 0 && $(".callrbtn:checked").val() == 1 ? callPrice : 0 })
                        availability.push({ name: "ChatCharges", value: $(".chatrbtn:checked").length > 0 && $(".chatrbtn:checked").val() == 1 ? chatPrice : 0 })
                        availability.push({ name: "AppointmentCharges", value: $(".apprbtn:checked").length > 0 && $(".apprbtn:checked").val() == 1 ? $("#AppointmentChargesInp").val() : 0 })
                        availability.push({ name: "Appointment", value: $(".apprbtn:checked").val() == 1 ? true : false })
                        addDataonTemp(availability,"availableData")
                    }
                    $(".active4").addClass("bg-dark")
                    $(".active4").addClass("text-light")
            $("#availability").hide();
            $("#address").hide();
            $("#basicDetails").hide()
            $("#about").show();
            $("#document").hide();
                }

        } else if (page == 5) {
                let basicData = $("#aboutForm").serializeArray();
                let enablenxt = 0;
            let basicDataLength=0;
                basicData.forEach(function (d) {
                    if (d.value != "" & d.value != null & d.value != 0 & d.name != "AwordsAndAchievement" & d.name != "SpecializationData") {
                        enablenxt++;
                    }
                    if (d.name != "SpecializationData" & d.name != "AwordsAndAchievement") {

                    basicDataLength++
                    }
                })
                debugger
                if ((enablenxt == basicData.length || enablenxt == basicDataLength ) & $("#expertise").val()!="") {
                    $(".active5").attr("disabled", false)
                } else {
                    $(".active5").attr("disabled", true)
                    $(".active4").addClass("bg-dark")
                    $(".active4").addClass("text-light")
                    showRequiredAlert()

                }
                if ($(".active5").attr("disabled") === undefined) {
                    debugger
                    if (clickby == "btn") {
                        basicData.push({ name: "Id", value: localStorage.getItem("Id") })
                        basicData.push({ name: "AboutSection", value: true })
                        addDataonTemp(basicData,"aboutData")
                    }
                    $(".active5").addClass("bg-dark")
                    $(".active5").addClass("text-light")
            $("#availability").hide();
            $("#address").hide();
            $("#basicDetails").hide()
            $("#about").hide();
            $("#document").show();
                        
                }

        }
    }

        $("#finalSubmit").click(function () {
        var token = localStorage.getItem('Token3');

            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick:false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
           let formData=new FormData();
                
           formData.append("JyotishId",localStorage.getItem("Id"))
            let addressdoc = $("#addressdoc").get(0).files[0]
            let iddoc = $("#idProof").get(0).files[0]
            let profdoc = $("#professionaldoc").get(0).files[0]
            let metrics = $("#metricdocs").get(0).files[0]
            let postmetrics = $("#postmetricdocs").get(0).files[0]
            if (addressdoc) {
                 formData.append("AddressProof" , addressdoc);
            }
            
            if (iddoc) {
                formData.append("IdProof", iddoc);
            }
            

            if (profdoc) {
                 formData.append("ProfessionalCertificate" , profdoc);
            }
           
            if (metrics) {
                 formData.append("TenthCertificate" ,metrics);
            }

            if (postmetrics) {
                 formData.append("TwelveCertificate" ,postmetrics);
            }
            debugger
            if (addressdoc && iddoc && profdoc) {
            $.ajax({
                    url: "@BaseUrl" + "Api/PendingJyotish/UploadDocument",
                type: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                processData:false,
                contentType:false,
                data: formData,
                success: function (response) {
                    if (response.status == 200) {
                        Swal.fire({
                            title: "Success!",
                            text: "Profile Updated Successfully",
                            icon: "success",
                                didClose: () => { location.href = "/Dashboard"; }
                        });
                    }else{
                        Swal.fire({
                            title: "error",
                            text: response.messsage,
                            icon: "error"
                        });
                    }
                },error:function(err){
                    Swal.fire({
                        title: "error",
                        text: "some error occured",
                        icon: "error"
                    });
                }
            })
            }else{
                Swal.fire({
                    title: "Required",
                    text: "some input fields are empty",
                    icon: "warning"
                   
                });
                setTimeout(()=>{
                    Swal.close();
                },2000)

            }
        });

    $(".navigatorBtn").click(function(){
        
        let page=$(this).attr("data-page")
           
        pagination(page,"nbtn")
    })

    $(".nxtBtn").click(function(){
          
            let page = $(this).attr("data-page")
          
            pagination(page, "btn")
    })

   $('.callrbtn').on('change', function () {
        document.getElementById('callInputBox').style.display = this.checked && $(this).val()==1 ? 'block' : 'none';
            if ($('.checkboxforavail:checked').length == 0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }
    });

    $('.chatrbtn').on('change', function () {
        document.getElementById('chatInputBox').style.display = this.checked && $(this).val()==1 ? 'block' : 'none';
            if ($('.checkboxforavail:checked').length ==0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }

    });
    $('.apprbtn').on('change', function () {
        document.getElementById('appointmentCharges').style.display = this.checked && $(this).val()==1 ? 'block' : 'none';
            if ($('.checkboxforavail:checked').length ==0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }
    });
        $('.poojarbtn').on('change', function () {
            if ($('.checkboxforavail:checked').length == 0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }

        })

        document.getElementById('appointmentCharges').style.display = 'none';

    </script>


   

<script>
    $(document).ready(function () {
        
        $(".select2").select2();
        $('#addressdoc').dropify(
            {
                messages: {
                    default: 'Upload Aadhar Card Back max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        ) 
        $('#idProof').dropify(
            {
                messages: {
                    default: 'Upload Aadhar Card Front max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )
        $('#professionaldoc').dropify(
            {
                messages: {
                    default: 'Upload Professional Certificate max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )
        $('#metricdocs').dropify(
            {
                messages: {
                    default: 'Upload metrics max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )
        $('#postmetricdocs').dropify(
            {
                messages: {
                    default: 'Upload post metrics max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )

$("#language").select2({
            placeholder: "--select language--"
})
        var token = localStorage.getItem('Token3');
        var email = localStorage.getItem("userEmail");

        async function loadLanguage() {
            try {
                const response = await fetch("@BaseUrl"+'Api/Account/Languages');
                const data = await response.json();
                const $languageDropdown = $('#language');
                $languageDropdown.html('<option value="">Select Language</option>');

                data.data.forEach(language => {
                    $languageDropdown.append(`<option value="${language}">${language}</option>`);
                });
            } catch (error) {
                console.error('Error fetching Language:', error);
            }
        }
        // Load Expertise
       
            $.ajax({
                url: "@BaseUrl"+'Api/Jyotish/Expertise',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    var expertiseDropdown = $('#expertise');
                    expertiseDropdown.empty().append('<option value="">Select Expertise</option>');
                    response.data.forEach(expertise => {
                        expertiseDropdown.append(new Option(expertise.name, expertise.name));
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching expertise:', textStatus, errorThrown);
                }
            }).then(() => { 
       
            $.ajax({
                url: "@BaseUrl" + 'Api/Jyotish/Country',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    var countryDropdown = $('#country');
                    countryDropdown.empty().append('<option value="">Select Country</option>');
                    response.data.forEach(country => {
                        countryDropdown.append(new Option(country.name, country.id));
                    });
                        Swal.close()

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching countries:', textStatus, errorThrown);
                }
            })
            }).then(() => {
                loadLanguage();
            }).then(() => {
                       
                        $.ajax({
                            url: BaseUrl + "api/jyotish/GetSpecializationList",
                            type: 'GET',
                            success: function (result) {

                                $.each(result.data, function (key, item) {
                                    $('#specialization').append(`
                                            <option value='${item.name}'>${item.name}</option>
                                    `);
                                });
                        Swal.close()

                            },
                            error: function (errormessage) {
                                console.error('Error fetching data:', errormessage.responseText);
                            }
                        });
                
                }).then(()=>{
            
        // Load States
        function loadStates(countryId) {
                    Swal.fire({
                        title: "Processing Your Request",
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    })
            $.ajax({
                url: "@BaseUrl" + `Api/Jyotish/State`,
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: countryId }, // Query string parameter
                success: function (response) {
                    var stateDropdown = $('#state');
                    stateDropdown.empty().append('<option value="">Select State</option>');
                    response.data.forEach(state => {
                        stateDropdown.append(new Option(state.name, state.id));
                    });
                    stateDropdown.prop('disabled', false);
                            Swal.close()
                   
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching states:', textStatus, errorThrown);
                }
            });
        }

        // Load Cities
        function loadCities(stateId) {
                    Swal.fire({
                        title: "Processing Your Request",
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    })
            $.ajax({
                url: "@BaseUrl"+`Api/Jyotish/City`,
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: stateId }, // Query string parameter
                success: function (response) {
                    var cityDropdown = $('#city');
                    cityDropdown.empty().append('<option value="">Select City</option>');
                    response.data.forEach(city => {
                        cityDropdown.append(new Option(city.name, city.id));
                    });
                    cityDropdown.prop('disabled', false);
                            Swal.close()

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching cities:', textStatus, errorThrown);
                }
            });
        }

                async function bindCountryCode(id) {
                    console.log(id)
                    const response = await fetch(BaseUrl + `Api/Jyotish/countryCode?country=${id}`);
                    const data = await response.json();
                    console.log(data)
                    if (data.status == 200) {
                        $(".countryCode").val("+" + data.code)
                    }
                }
        // Event Listeners
        $('#country').on('change', function () {
            const countryId = $(this).val();
                    bindCountryCode(countryId)
            if (countryId) {
                loadStates(countryId);
            } else {
                $('#state').empty().append('<option value="">Select State</option>').prop('disabled', true);
                $('#city').empty().append('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        $('#state').on('change', function () {
            const stateId = $(this).val();
            if (stateId) {
                loadCities(stateId);
            } else {
                $('#city').empty().append('<option value="">Select City</option>').prop('disabled', true);
            }
        });

            $(".saveProfile").click(function () {
                Swal.fire({
                    title: "Processing Your Request",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                })
            let profileImage=$("#profile").get(0).files[0]
            if(profileImage!=null){
                let formData = new FormData();
                var Id =localStorage.getItem("Id");
                formData.append("id",Id)
                    formData.append("Image", profileImage)
                $.ajax({
                    url: "@BaseUrl" + "api/PendingJyotish/UploadProfileImage",
                    type: 'POST',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem("Token3")}`

                    },
                    processData:false,
                    contentType:false,
                        data: formData,
                    success: function (response) {
                        if(response.status==200){
                                Swal.fire({
                                    title: "success",
                                    text: "Profile Image Saved",
                                    icon: "success",
                                    didClose:()=>{
                                        $(".saveProfile").addClass("d-none")
                                    }
                                });
                        }else{
                                Swal.fire({
                                    title: "error",
                                    text: response.messsage,
                                    icon: "error"
                                });
                        }
                    },error:function(){
                            Swal.fire({
                                title: "error",
                                text: "Some error occured",
                                icon: "error"
                            });
                    }
                })
            }
        })
        // Load data on page load
     
    })

            
            function formatDate(inputDate) {
                const dateParts = inputDate.split('-');

                const year = dateParts[0];
                const month = dateParts[1];
                const day = dateParts[2];

                return `${day}/${month}/${year}`;
            }
            function loadJyotishProfile() {
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
                var Id = localStorage.getItem('Id');
                let checkData = true;
                let checkImage=true
            $.ajax({

                url: "@BaseUrl" + "api/PendingJyotish/ProfileTempData",
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem("Token3")}`

                },
                data: { Id: Id },
                success: function (response) {
                    if (response.status === 200) {
                        console.log(response)
                        if (response.data.name != null) {
                        checkData = false;

                        }
                        if (response.data.image!=null) {
                            checkImage = false;
                        }
                        $("#name").val(response.data.name)
                        $("#email").val(response.data.email)
                            $("#mobno").val($("#countryCode").val() + response.data.mobile)
                        $("#gender").val(response.data.gender)
                        $("#altmobno").val(response.data.alternateMobile)
                            $("#dob").val(formatDate(response.data.dateOfBirth))
                            console.log(formatDate(response.data.dateOfBirth), response.data.dateOfBirth)
                        setTimeout(() => { 
                        $("#language").val(response.data.language != null ? response.data.language.split(",") : response.data.language).change()
                        $("#expertise").val(response.data.expertise != null ? response.data.expertise.split(",") : response.data.expertise).change()
                            $("#specialization").val(response.data.specialization != null ? response.data.specialization.split(',') : response.data.specialization).change()

                        },1000)
                        $("#expertise-profile").text(response.data.expertise)
                        $("#pincode").val(response.data.pincode)
                        $("#addresstext").val(response.data.address)
                        $("#timefrom").val(response.data.timeFrom)
                        $("#timeto").val(response.data.timeTo)
                       $(".callrbtn[value='" + (response.data.call ? 1 : 0) + "']").prop("checked", true);
                       $(".poojarbtn[value='" + (response.data.pooja ? 1 : 0) + "']").prop("checked", true);
                       $(".chatrbtn[value='" + (response.data.chat ? 1 : 0) + "']").prop("checked", true);
                       $(".apprbtn[value='" + (response.data.appointment ? 1 : 0) + "']").prop("checked", true);
                        $("#AppointmentChargesInp").val(response.data.appointmentCharges)
                            document.getElementById('chatInputBox').style.display = $(".chatrbtn:checked").length > 0 && $(".chatrbtn:checked").val() == 1 ? 'block' : 'none';
                            document.getElementById('callInputBox').style.display = $(".callrbtn:checked").length > 0 && $(".callrbtn:checked").val() == 1 ? 'block' : 'none';
                            document.getElementById('appointmentCharges').style.display = $(".apprbtn:checked").length>0 && $(".apprbtn:checked").val()==1 ? 'block' : 'none';
                        if ($('.checkboxforavail:checked').length == 0) {
                            $(".alertforbox").show();

                        } else {
                            $(".alertforbox").hide();

                        }
                        $("#chatprice").val(response.data.chatCharges)
                        $("#callprice").val(response.data.callCharges)
                        $("#timeto").val(response.data.timeTo)
                        $("#experiance").val(response.data.experience)
                        $("#awardsAndAchievement").val(response.data.awordsAndAchievement)
                        $("#aboutus").val(response.data.about)
                        if(response.data.image!=null){

                            $("#profileImage").attr("src", "@BaseUrl" + response.data.image)
                        }
                        if (response.data.basicSection){
                            $(".active2").attr("disabled",false)
                        } if (response.data.addressSection) {
                            $(".active3").attr("disabled",false)
                        } if (response.data.availbilitySection) {
                            $(".active4").attr("disabled",false)
                        } if (response.data.aboutSection) {
                            $(".active5").attr("disabled",false)
                        }
                        setTimeout(()=>{
                            $("#country option").filter(function () {
                                return $(this).text() === response.data.country;
                            }).prop("selected", true).change()
                        },1000)
                        
                        setTimeout(() => {
                            
                            $("#state option").filter(function () {
                                return $(this).text() === response.data.state;
                            }).prop("selected", true).change()
                        }, 2000)
                        setTimeout(() => {
                            $("#city option").filter(function () {
                                return $(this).text() === response.data.city;
                            }).prop("selected", true).change()
                        }, 3000)
                        setTimeout(() => {
                        Swal.close()
                        }, 2000)

                    }
                }
            }).then(() => { 
            if(checkData){
                $.ajax({

                    url: BaseUrl+"api/PendingJyotish/ProfileData",
                    type: 'GET',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem("Token3")}`

                    },
                    data: { Id: Id },
                    success: function (response) {
                        console.log(response)
                        if (response.status === 200) {
                            let data = response.data.jyotishRecord
                            $("#name").val(data.name)
                            $("#email").val(data.email)
                                    $("#mobno").val($("#countryCode").val() + data.mobile)
                            $("#gender").val(data.gender)
                            setTimeout(() => {
                                $("#language").val(data.language != null ? data.language.split(",") : data.language).change()
                                $("#expertise").val(data.expertise != null ? data.expertise.split(",") : data.expertise).change()
                            }, 1000)
                            $("#expertise-profile").text(data.expertise)

                            $("#state").val()
                            $("#city").val()
                            if (checkImage) {
                                    $("#profileImage").attr("src", "@BaseUrl" + data.profileImageUrl)
                            }
                             $("#country option").filter(function () {
                                return $(this).text() === data.country;
                            }).prop("selected", true).change()
                            setTimeout(()=>{
                            $("#state option").filter(function () {
                                return $(this).text() === data.state;
                            }).prop("selected", true).change()
                            }, 1000)
                        setTimeout(() => {
                            $("#city option").filter(function () {
                                return $(this).text() === data.city;
                            }).prop("selected", true).change()
                        },2000)
                            setTimeout(() => {
                                Swal.close()
                            }, 2000)

                        }
                    }
                })
            }
                })
            }
            loadJyotishProfile()
    })

        function convertDateFormatdesc(dateString) {
            const dateParts = dateString.split('/');

            if (dateParts.length === 3) {
                const day = dateParts[0];
                const month = dateParts[1];
                const year = dateParts[2];

                return `${month}/${day}/${year}`;
            } else {
                return 'Invalid date format';
            }
        }

            function addDataonTemp(sArray,dataType)
            {
                if ($("#altmobno").val() == $("#mobno").val()) {
                    Swal.fire({
                        title: "warning",
                        text: "alternate mobile number is not same as your first mobile number",
                        icon: "warning",
                        
                    })
                }else{
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            var token = localStorage.getItem('Token3');
            debugger
            let language=[]
            let expertise=[]
            let specializationList=[]
                let formData=new FormData();
                sArray.forEach(function(d){
                    formData.append(d.name,d.value)
                    if(d.name=="DateOfBirthres"){
                        let formatedDate = convertDateFormatdesc(d.value)
                        debugger
                        formData.append("DateOfBirth", formatedDate)
                    }
                    if(d.name=="lang"){
                    language.push(d.value)
                    }
                if (d.name == "Expert"){
                    expertise.push(d.value)
                }
                if (d.name == "SpecializationData")
                specializationList.push(d.value)
                })
                debugger
                let joinlang = language.toString();
                formData.append("Language",joinlang)
            let joinexpert = expertise.toString();
                formData.append("Expertise", joinexpert)
                let joinSpec = specializationList.toString();
            formData.append("Specialization", joinSpec)
            $.ajax({
                url: "@BaseUrl" + "Api/PendingJyotish/UpdateProfile",
                type: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                processData:false,
                contentType:false,
                data: formData,
                success: function (response) {

                    if(response.status==200){
                        if(dataType=="basicData"){
                            pagination(3,"btn")
                        }else{
                            Swal.fire({
                        title: "success",
                        text: "Date Saved Successfully",
                        icon: "success"
                        })
                        }
                    }else{
                    Swal.fire({
                        title: "warning",
                        text:response.message,
                        icon: "warning",
                        
                    });
                        }
                },
                error: function (err) {
                    if (err.responseJSON) {
                    } else {
                        Swal.fire({
                            title: "error",
                            text: "Some error occured",
                            icon: "error"
                        });
                    }
                }
            });
                }
            }
    
</script>

<script>
    function manageforms(){
        //basic Details
            let basicData = $("#basicForm").serializeArray();
            let enablenxt = 0;
            debugger
            basicData.forEach(function (d) {
                if (d.value != "" & d.value != null & d.value != 0) {
                    enablenxt++;
                }
            })
            if (enablenxt == basicData.length) {
                $(".active2").attr("disabled", false)
            }
    }
    manageforms();

      

        let currentDate = new Date();

        // Subtract 20 years from the current date
        currentDate.setFullYear(currentDate.getFullYear() - 20);

        $("#dob").attr("max", currentDate.toISOString().split('T')[0])
</script>
<script>
            var maxDate = new Date();
            maxDate.setFullYear(maxDate.getFullYear() - 20);
            var minDate = new Date();
            minDate.setFullYear(minDate.getFullYear() - 100);


            // Initialize the datepicker with the calculated maxDate
            $("#dob").datepicker({
                autoclose: true,
                dateFormat:'dd-mm-yyyy',
                changeMonth: true,
                changeYear: true,
                yearRange: "c-100:c",
                startDate: minDate,
                endDate:maxDate,
                showAnim: "slideDown",         
                buttonImageOnly: true,
                buttonText: "Select date"
            
                
            })

        function convertDateFormat(dateString) {
            const dateParts = dateString.split('/');

            if (dateParts.length === 3) {
                const month = dateParts[0];
                const day = dateParts[1];
                const year = dateParts[2];

                return `${day}/${month}/${year}`;
            } else {
                return 'Invalid date format';
            }
        }
       $("#dob").on('change',function(){
          let formatedDate= convertDateFormat($(this).val());
            console.log(formatedDate)
            setTimeout(()=>{

            $(this).val(formatedDate)
            })
       })

            $(document).ready(function(){
                $("#altmobno").on("keyup",function(){
                    if($(this).val()==$("#mobno").val()){
                        Swal.fire({
                            title:"warning",
                            text:"alternate mobile number is not same as your first mobile number",
                            icon:"warning"
                        })
                    }
                })

           
            $("#addressform").validate({
                rules:
                {
                    "pincode": {
                        required: true,
                        minlength:6,
                        maxlength:6,
                        number:true
                    }
                }   
            })
            })
    </script>
</body>
</html>