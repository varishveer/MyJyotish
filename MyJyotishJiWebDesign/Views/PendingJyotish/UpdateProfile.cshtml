@{
    Layout = null;
    var BaseUrl = "https://api.myjyotishg.in/";

}
<html>
    <head>

<style>
    .select2{
        min-width:100%;
    }
    #callInputBox{
        display:none;
    }
    #chatInputBox{
        display:none;
    }

 
    .dropify-message p {
        font-size: 12px; /* Adjust this value to make the placeholder smaller */
        color: #aaa; /* Optional: Change placeholder color */
    }
    body{
        overflow-x:hidden !important;
    }
   ::-webkit-scrollbar{
       width:5px;
       height:5px;
   }
   ::-webkit-scrollbar-thumb{
       background:orange;
       border-radius:10px;
   }
</style>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link href="~/dropify/css/dropify.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
 <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/dropify/js/dropify.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- FontAwesome for icons -->
<script defer src="https://use.fontawesome.com/releases/v5.15.4/js/all.js" integrity="sha384-rOA1PnstxnOBLzCLMcre8ybwbTmemjzdNlILg8O7z1lUkLXozs4DHonlDtnE7fpc" crossorigin="anonymous"></script>
<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
</head>
<body class="w-100">
<div class="container mh-75 w-100 mb-3 mt-5 border p-3 rounded shadow-sm">
<div class="row">
    <h3 class="text-center text-secondary border-bottom py-2 mb-5">Update Profile</h3>
    <div  class=col-sm-12>
        <div class="row">
               
            <div class="col-sm-3 border-end">
                        <div class="text-center my-3 mb-5">
                            <img src="/user-not-found.png" accept="image/*" id="profileImage" height="130" width="130" class="rounded-circle" /><br /><br />
                            <label for="profile" class="btn btn-primary">Edit Profile</label>
                            <button class="btn btn-success d-none saveProfile" >Save</button>
                            <input type="file" hidden name="profile" id="profile" />
                        </div>
                <button data-page="1" class="btn active1 bg-primary text-light navigatorBtn rounded-0 btn-outline-primary w-100">Basic Information</button>
                    <button data-page="2" disabled class="btn active2 navigatorBtn rounded-0 btn-outline-primary w-100">Address</button>

                        <button data-page="3" disabled class="btn active3 navigatorBtn rounded-0 btn-outline-primary w-100">Availability</button>
                        <button data-page="4" disabled class="btn active4 navigatorBtn rounded-0 btn-outline-primary w-100">About</button>
                        <button data-page="5" disabled class="btn active5 navigatorBtn rounded-0 btn-outline-primary w-100">Documents</button>
            </div>
             <!--basic Detail-->

                <div class="col-sm-9" id="basicDetails">
                 <form id="basicForm">
                    <div class="row">
                        <div class="col-sm-6">
                            <label for="name">Name</label>
                                    <input type="text" id="name" name="Name" class="form-control" placeholder="Enter your name" />
                        </div>
                        <div class="col-sm-6">
                            <label for="email">Email</label>
                                    <input type="email" id="email" disabled name="email" class="form-control" placeholder="Enter your email" />
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="col-sm-6">
                            <label for="mobno">Mobile Number</label>
                                    <input type="number" name="mobno" disabled id="mobno" class="form-control" placeholder="Enter your Phone Number" />
                        </div>
                        <div class="col-sm-6">
                            <label for="altmobno">Alternate Number</label>
                                    <input type="number" id="altmobno" name="AlternateMobile" class="form-control" placeholder="Enter alternate Phone Number" />
                        </div>
                    </div> 
                    <div class="row">
                        <div class="col-sm-6">
                        <label for="gender">Gender</label>
                                    <select class="form-control" id="gender" name="Gender">
                        <option selected disabled>--select gender--</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                        </div>
                        <div class="col-sm-6">
                            <label for="language">Language</label>
                                    <select id="language" name="lang" class="form-control form-control-sm " multiple>
                                <option value="">Select Language</option>
                            </select>
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="col-sm-6">
                            <label for="dob">Date of Birth</label>
                                    <input type="date" id="dob" name="DateOfBirth" class="form-control" />
                        </div>
                       
                    </div>
                        </form>

                    <div class="text-end"><button type="button" role="button" class="btn btn-primary nxtBtn basicnxtBtn" data-page="2">Next</button></div>
                </div>

                <!--Address-->
                <div class="col-sm-9" id="address">
                    <form id="addressform">
                    <div class="row">
                        <div class="col-sm-6 mb-3">
                            <label for="country">Country:</label>
                            <select id="country" name="country" class="form-control form-control-sm select2" required>
                                <option selected disabled>Select Country</option>
                            </select>
                        </div>
                        <div class="col-sm-6 mb-3">
                            <label for="state">State:</label>
                            <select id="state" name="state" class="form-control select2 form-control-sm" disabled>
                                <option selected disabled>Select State</option>
                            </select>
                        </div>
                        <div class="col-sm-6 mb-3">
                            <label for="city">City:</label>
                            <select id="city" name="city" class="form-control select2 form-control-sm" disabled>
                                <option selected disabled>Select City</option>
                            </select>
                        </div>
                        <div class="col-sm-6 mb-3">
                            <label for="pincode">Pincode</label>
                            <input type="number" id="pincode" name="pincode" class="form-control" placeholder="Enter your pincode" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <textarea rows="4" name="address" id="addresstext" placeholder="Enter your full address" class="form-control"></textarea>
                        </div></div>
                        </form>
                    <div class="text-end mt-3"><button type="button" role="button" class="btn btn-primary nxtBtn" data-page="3">Next</button></div>
                </div>

                <!--Availability-->
              
                    <div class="col-sm-9" id="availability">
                        <div class="row">

                        <div class="col-sm-6">
                            <input type="checkbox" id="poojaCheckbox" class="checkboxforavail" value="1" name="pooja" /> Pooja &nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="checkbox" id="callCheckbox" class="checkboxforavail" value="1" name="call" /> Call &nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="checkbox" id="chatCheckbox" class="checkboxforavail" value="1" name="chat" /> Chat &nbsp;&nbsp;
                            <div id="callInputBox" class="input-box">
                                <input type="text" class="form-control my-2" id="callprice" name="callprice" placeholder="Enter call price" />
                            </div>
                            <div id="chatInputBox" class="input-box">
                                <input type="text" class="form-control " id="chatprice" name="chatprice" placeholder="Enter chat price" />
                            </div>
                            <p class=" my-4 text-secondary alertforbox">Please check boxes if you are available</p>
                        </div>
                        <div class="col-sm-6">
                            <div class="d-flex justify-content-between">
                            <label for="timefrom">Time From</label>
                            <label for="timeto">Time To</label>
                            </div>
                            <div class="d-flex gap-2 justify-content-between">
                            <input type="time" name="timeFrom" class="form-control" id="timefrom" />
                                <input type="time" name="timeTo" class="form-control" id="timeto" />
                            </div>
                        </div>
                        </div>
                  <div class="text-end mt-3"><button type="button" role="button" class="btn btn-primary nxtBtn" data-page="4">Next</button></div>
                </div>

                <!--About-->
                
                    <div class="col-sm-9" id="about">
                        <form id="aboutForm">
                        <div class="row">
                            <div class="col-sm-6">
                            <label for="expertise">Expertise:</label>
                                    <select id="expertise" name="Expert" class="form-control select2 form-control-sm" multiple>
                                <option value="" selected disabled>Select Expertise</option>
                            </select>
                            </div>
                            <div class="col-sm-6">
                            <label for="specialization">Specialization:</label>
                                    <input type="text" id="specialization" name="Specialization" class="form-control form-control-sm" required>
                            </div>
                        </div>
                        <div class="row my-3">
                            <div class="col-sm-6">
                            <label for="awardsAndAchievement">Awards and Achievement:</label>
                                    <input type="text" id="awardsAndAchievement" name="AwordsAndAchievement" class="form-control form-control-sm">
                            </div>
                            <div class="col-sm-6">
                            <label for="experiance">Experiance:</label>
                                    <input type="number" id="experiance" name="Experience" class="form-control form-control-sm">
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-sm-12">
                                    <textarea rows="4" placeholder="About us" name="About" id="aboutus" class="form-control"></textarea>
                            </div>
                            </div>
                        </form>
                    <div class="text-end mt-3"><button type="button" role="button" class="btn btn-primary nxtBtn" data-page="5">Next</button></div>
                </div>

                <!--Documents-->
                <div class="col-sm-9 " id="document">
                    <div class="row">
<div class="col-sm-6 mb-3">
    <input type="file" name="addressdoc" id="addressdoc"/>
</div>
<div class="col-sm-6  mb-3">
    <input type="file" name="idProof" id="idProof"/>

</div>
                        <div class="col-sm-6  mb-3">
                   <input type="file" name="professionaldoc" id="professionaldoc" />

</div>
                        <div class="col-sm-6  mb-3">
               <input type="file" name="metricdocs" id="metricdocs" />

</div>
                        <div class="col-sm-6  mb-3">
                  <input type="file" name="postmetricdocs" id="postmetricdocs" />

</div>
</div>
                    <div class="text-end mt-3"><input type="submit" id="finalSubmit" value="Submit" class="btn fw-bold btn-primary " /></div>
                </div>
        </div>
    </div>
</div>
</div>


<script>

    
      
    async function loadLanguage() {
        try {
            const response = await fetch("@BaseUrl" + 'Api/Account/Languages');
            const data = await response.json();
            const $languageDropdown = $('#language');
            $languageDropdown.html('<option value="">Select Language</option>');

            data.data.forEach(language => {
                $languageDropdown.append(`<option value="${language}">${language}</option>`);
            });
        } catch (error) {
            console.error('Error fetching Language:', error);
        }
    }
    loadLanguage();
    function loadExpertise() {
        var token = localStorage.getItem('Token2');

        $.ajax({
            url: "@BaseUrl" + 'Api/Jyotish/Expertise',
            type: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            success: function (response) {
                var expertiseDropdown = $('#expertise');
                expertiseDropdown.empty().append('<option value="" selected disabled>Select Expertise</option>');
                response.data.forEach(expertise => {
                    expertiseDropdown.append(new Option(expertise.name, expertise.name));
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error fetching expertise:', textStatus, errorThrown);
            }
        });
    }
    loadExpertise();

        $("#profile").on("change",function(){
            const file = this.files[0]; 
            if (file) {
                const url = URL.createObjectURL(file); 
                $("#profileImage").attr("src", url).show();
                $(".saveProfile").removeClass("d-none")

            } else {
                $("#profileImage").attr("src", "/user-not-found.png");
            }
        })
    </script>


    <script>
    $("#basicDetails").show()
    $("#address").hide();
    $("#availability").hide();
    $("#about").hide();
    $("#document").hide();

    function pagination(page,clickby) {
        if (page == 1) {
               
            $("#basicDetails").show()
            $("#address").hide();
            $("#availability").hide();
            $("#about").hide();
            $("#document").hide();
                

        } else if (page == 2) {
            let basicData = $("#basicForm").serializeArray();
            let enablenxt = 0;
            debugger
            basicData.forEach(function (d) {
                if (d.value != "" & d.value != null & d.value != 0) {
                    enablenxt++;
                }
            })
            if (enablenxt == basicData.length) {
                $(".active2").attr("disabled", false)
            }else{
                $(".active2").attr("disabled", true)

            }
            if ($(".active2").attr("disabled") === undefined) {
                if(clickby=="btn"){
                basicData.push({name:"Id",value:localStorage.getItem("Id")})
                    basicData.push({ name:"BasicSection",value: true })
                    addDataonTemp(basicData)
                }
            $("#basicDetails").hide()
            $("#address").show();
            $("#availability").hide();
            $("#about").hide();
            $("#document").hide();
                }

        } else if (page == 3) {
                let basicData = $("#addressform").serializeArray();
                let enablenxt = 0;
                debugger
                basicData.forEach(function (d) {
                    if (d.value != "" & d.value != null & d.value != 0) {
                        enablenxt++;
                    }
                })
                if (enablenxt == basicData.length) {
                    
                    $(".active3").attr("disabled", false)
                } else {
                    $(".active3").attr("disabled", true)

                }
                if ($(".active3").attr("disabled") === undefined) {
                    if (clickby == "btn") {
                        basicData.push({ name: "Id", value: localStorage.getItem("Id") })
                        basicData.push({ name: "AddressSection", value: true })
                        addDataonTemp(basicData)
                    }
            $("#availability").show();
            $("#address").hide();
            $("#basicDetails").hide()
            $("#about").hide();
            $("#document").hide();
                }


        } else if (page == 4) {
                let callPrice = $("#callprice").val()
                let chatPrice = $("#chatprice").val()
                if ($("#timefrom").val() != "" & $("#timefrom").val() != "" & $("#timeto").val() != "" & $("#timeto").val() != "") {
                    $(".active4").attr("disabled", false)

                    if ($("#callCheckbox:checked").length > 0 && callPrice != "") {

                        $(".active4").attr("disabled", false)
                    } else if ($("#callCheckbox:checked").length > 0 && callPrice =="") {
                    $(".active4").attr("disabled", true)

               }
                    if ($("#chatCheckbox:checked").length > 0 && chatPrice != "" &$("#callCheckbox:checked").length > 0 && callPrice != "") {

                    $(".active4").attr("disabled", false)
                    } else if ($("#chatCheckbox:checked").length > 0 && chatPrice == "" ) {
                    $(".active4").attr("disabled", true)
                }
           }else{
                    $(".active4").attr("disabled", true)
           }
                if ($(".active4").attr("disabled") === undefined) {
                    if (clickby == "btn") {

                        let availability = []
                        availability.push({ name: "Id", value: localStorage.getItem("Id") })
                        availability.push({ name: "AvailbilitySection", value: true })
                        availability.push({ name: "pooja", value: $("#poojaCheckbox:checked").length > 0 ? true : false })
                        availability.push({ name: "Call", value: $("#callCheckbox:checked").length > 0 ? true : false })
                        availability.push({ name: "Chat", value: $("#chatCheckbox:checked").length > 0 ? true : false })
                        availability.push({ name: "CallCharges", value: $("#callCheckbox:checked").length > 0 ? callPrice : 0 })
                        availability.push({ name: "ChatCharges", value: $("#chatCheckbox:checked").length > 0 ? chatPrice : 0 })
                        availability.push({ name: "TimeFrom", value: $("#timefrom").val() })
                        availability.push({ name: "TimeTo", value: $("#timeto").val() })
                        addDataonTemp(availability)
                    }
            $("#availability").hide();
            $("#address").hide();
            $("#basicDetails").hide()
            $("#about").show();
            $("#document").hide();
                }

        } else if (page == 5) {
                let basicData = $("#aboutForm").serializeArray();
                let enablenxt = 0;
                debugger
                basicData.forEach(function (d) {
                    if (d.value != "" & d.value != null & d.value != 0) {
                        enablenxt++;
                    }
                })
                if (enablenxt == basicData.length) {
                    $(".active5").attr("disabled", false)
                } else {
                    $(".active5").attr("disabled", true)

                }
                if ($(".active5").attr("disabled") === undefined) {
                    if (clickby == "btn") {

                        basicData.push({ name: "Id", value: localStorage.getItem("Id") })
                        basicData.push({ name: "AboutSection", value: true })
                        addDataonTemp(basicData)
                    }
            $("#availability").hide();
            $("#address").hide();
            $("#basicDetails").hide()
            $("#about").hide();
            $("#document").show();
                }

        }
    }

        $("#finalSubmit").click(function () {
        var token = localStorage.getItem('Token3');

            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick:false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
           let formData=new FormData();
                
           formData.append("JyotishId",localStorage.getItem("Id"))
            let addressdoc = $("#addressdoc").get(0).files[0]
            let iddoc = $("#idProof").get(0).files[0]
            let profdoc = $("#professionaldoc").get(0).files[0]
            let metrics = $("#metricdocs").get(0).files[0]
            let postmetrics = $("#postmetricdocs").get(0).files[0]
            if (addressdoc) {
                 formData.append("AddressProof" , addressdoc);
            }

            if (iddoc) {
                formData.append("IdProof", iddoc);
            }

            if (profdoc) {
                 formData.append("ProfessionalCertificate" , profdoc);
            }

            if (metrics) {
                 formData.append("TenthCertificate" ,metrics);
            }

            if (postmetrics) {
                 formData.append("TwelveCertificate" ,postmetrics);
            }
            debugger
            $.ajax({
                url: "https://localhost:7118/Api/PendingJyotish/UploadDocument",
                type: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                processData:false,
                contentType:false,
                data: formData,
                success: function (response) {
                    if (response.status == 200) {
                        Swal.fire({
                            title: "Success!",
                            text: "Profile Updated Successfully",
                            icon: "success",
                            didClose: () => { location.href = "/pendingJyotish/documents"; }
                        });
                    }else{
                        Swal.fire({
                            title: "error",
                            text: response.messsage,
                            icon: "error"
                        });
                    }
                },error:function(err){
                    Swal.fire({
                        title: "error",
                        text: "some error occured",
                        icon: "error"
                    });
                }
            })
        });

    $(".navigatorBtn").click(function(){
        $(".navigatorBtn").each(function (i, d) {
            d.classList.remove("bg-primary")
            d.classList.remove("text-light")
        });
        let page=$(this).attr("data-page")
            $(this).addClass("bg-primary")
            $(this).addClass("text-light")
        pagination(page,"nbtn")
    })

    $(".nxtBtn").click(function(){
            $(".navigatorBtn").each(function (i, d) {
                d.classList.remove("bg-primary")
                d.classList.remove("text-light")
            });
            let page = $(this).attr("data-page")
            $(".active"+page).addClass("bg-primary")
            $(".active" + page).addClass("text-light")
            pagination(page, "btn")
    })

    document.getElementById('callCheckbox').addEventListener('change', function () {
        document.getElementById('callInputBox').style.display = this.checked ? 'block' : 'none';
            if ($('.checkboxforavail:checked').length == 0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }
    });

    document.getElementById('chatCheckbox').addEventListener('change', function () {
        document.getElementById('chatInputBox').style.display = this.checked ? 'block' : 'none';
            if ($('.checkboxforavail:checked').length ==0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }

    });
        document.getElementById('poojaCheckbox').addEventListener('change', function () {
            if ($('.checkboxforavail:checked').length == 0) {
                $(".alertforbox").show();

            } else {
                $(".alertforbox").hide();

            }

        })
    </script>


    <script>
    function loadCountries() {
        $.ajax({
            url: "@BaseUrl" + 'Api/Jyotish/Country',
            type: 'GET',

            success: function (response) {
                var countryDropdown = $('#country');
                countryDropdown.empty().append('<option value="">Select Country</option>');
                response.data.forEach(country => {
                    countryDropdown.append(`<option class='country' value="${country.id}">${country.name}</option>`);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error fetching countries:', textStatus, errorThrown);
            }
        });
    }
        loadCountries();
    // Fetch States based on selected Country
    $('#country').change(function () {
        var countryId = $(this).val();
        $('#state').prop('disabled', false).empty().append('<option value="">Select State</option>'); // Reset State dropdown
        $('#city').prop('disabled', true).empty().append('<option value="">Select City</option>'); // Reset City dropdown

        if (countryId) {
            $.ajax({
                url: "@BaseUrl" + 'Api/Jyotish/State',
                type: 'GET',
                data: { Id: countryId },

                success: function (response) {
                    var stateDropdown = $('#state');
                    stateDropdown.empty().append('<option value="">Select State</option>');
                    response.data.forEach(state => {
                        stateDropdown.append(`<option class='state' value="${state.id}">${state.name}</option>`);
                    });
                    stateDropdown.prop('disabled', false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching states:', textStatus, errorThrown);
                }
            });
        }
    });

    // Fetch Cities based on selected State
    $('#state').change(function () {
        var stateId = $(this).val();
        $('#city').prop('disabled', false).empty().append('<option value="">Select City</option>'); // Reset City dropdown

        if (stateId) {
            $.ajax({
                url: "@BaseUrl" + 'Api/Jyotish/City',
                type: 'GET',
                data: { Id: stateId },

                success: function (response) {
                    var cityDropdown = $('#city');
                    cityDropdown.empty().append('<option value="">Select City</option>');
                    response.data.forEach(city => {
                        cityDropdown.append(`<option class='city' value="${city.id}">${city.name}</option>`);
                    });
                    cityDropdown.prop('disabled', false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching cities:', textStatus, errorThrown);
                }
            });
        }
    });
    </script>

<script>
    $(document).ready(function () {
        
        $(".select2").select2();
        $('#addressdoc').dropify(
            {
                messages: {
                    default: 'Upload Address proof max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        ) 
        $('#idProof').dropify(
            {
                messages: {
                    default: 'Upload Any Id proof max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )
        $('#professionaldoc').dropify(
            {
                messages: {
                    default: 'Upload Professional Certificate max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )
        $('#metricdocs').dropify(
            {
                messages: {
                    default: 'Upload metrics max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )
        $('#postmetricdocs').dropify(
            {
                messages: {
                    default: 'Upload post metrics max size 2mb',
                    replace: 'Drag and drop or click to replace',
                    remove: 'Remove',
                    error: 'Oops, something went wrong.'
                },
                maxFileSize: '2M',
               
            }
        )

$("#language").select2({
            placeholder: "--select language--"
})
        var token = localStorage.getItem('Token3');
        var email = localStorage.getItem("userEmail");

        async function loadLanguage() {
            try {
                const response = await fetch("@BaseUrl"+'Api/Account/Languages');
                const data = await response.json();
                const $languageDropdown = $('#language');
                $languageDropdown.html('<option value="">Select Language</option>');

                data.data.forEach(language => {
                    $languageDropdown.append(`<option value="${language}">${language}</option>`);
                });
            } catch (error) {
                console.error('Error fetching Language:', error);
            }
        }
        // Load Expertise
        function loadExpertise() {
            $.ajax({
                url: "@BaseUrl"+'Api/Jyotish/Expertise',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    var expertiseDropdown = $('#expertise');
                    expertiseDropdown.empty().append('<option value="">Select Expertise</option>');
                    response.data.forEach(expertise => {
                        expertiseDropdown.append(new Option(expertise.name, expertise.name));
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching expertise:', textStatus, errorThrown);
                }
            });
        }

        // Load Countries
        function loadCountries() {
            $.ajax({
                url: "@BaseUrl" + 'Api/Jyotish/Country',
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    var countryDropdown = $('#country');
                    countryDropdown.empty().append('<option value="">Select Country</option>');
                    response.data.forEach(country => {
                        countryDropdown.append(new Option(country.name, country.id));
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching countries:', textStatus, errorThrown);
                }
            });
        }

        // Load States
        function loadStates(countryId) {
            $.ajax({
                url: "@BaseUrl" + `Api/Jyotish/State`,
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: countryId }, // Query string parameter
                success: function (response) {
                    var stateDropdown = $('#state');
                    stateDropdown.empty().append('<option value="">Select State</option>');
                    response.data.forEach(state => {
                        stateDropdown.append(new Option(state.name, state.id));
                    });
                    stateDropdown.prop('disabled', false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching states:', textStatus, errorThrown);
                }
            });
        }

        // Load Cities
        function loadCities(stateId) {
            $.ajax({
                url: "@BaseUrl"+`Api/Jyotish/City`,
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: { Id: stateId }, // Query string parameter
                success: function (response) {
                    var cityDropdown = $('#city');
                    cityDropdown.empty().append('<option value="">Select City</option>');
                    response.data.forEach(city => {
                        cityDropdown.append(new Option(city.name, city.id));
                    });
                    cityDropdown.prop('disabled', false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching cities:', textStatus, errorThrown);
                }
            });
        }

        // Event Listeners
        $('#country').on('change', function () {
            const countryId = $(this).val();
            if (countryId) {
                loadStates(countryId);
            } else {
                $('#state').empty().append('<option value="">Select State</option>').prop('disabled', true);
                $('#city').empty().append('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        $('#state').on('change', function () {
            const stateId = $(this).val();
            if (stateId) {
                loadCities(stateId);
            } else {
                $('#city').empty().append('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        // Submit Form Data
        $('#profileUpdateForm').on('submit', function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Create a FormData object from the form
            var formData = new FormData(this);
            formData.append('email', email);

            // If you need to handle the profile image separately
            var profileImage = $('#profileImage')[0].files[0];
            if (profileImage) {
                formData.append('Image', profileImage);
            }

            // Send the data via AJAX
            $.ajax({
                url: "@BaseUrl" + 'Api/PendingJyotish/UpdateProfile',
                type: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: formData,
                processData: false, // Prevent jQuery from automatically processing the data
                contentType: false, // Prevent jQuery from setting content type, as it is handled by FormData
                success: function (response) {
                    console.log('Profile updated successfully:', response);
                    alert('Profile updated successfully!');
                    window.location.pathname('Profile');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error updating profile:', textStatus, errorThrown);
                    alert('There was a problem updating your profile. Please try again.');
                }
            });
        });


            $(".saveProfile").click(function () {
                Swal.fire({
                    title: "Processing Your Request",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                })
            let profileImage=$("#profile").get(0).files[0]
            if(profileImage!=null){
                let formData = new FormData();
                formData.append("Id",localStorage.getItem("Id"))
                    formData.append("Image", profileImage)
                $.ajax({
                    url: "https://localhost:7118/Api/PendingJyotish/UploadProfileImage",
                    type: 'POST',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem("Token3")}`

                    },
                    processData:false,
                    contentType:false,
                        data: formData,
                    success: function (response) {
                        if(response.status==200){
                                Swal.fire({
                                    title: "success",
                                    text: "Profile Image Saved",
                                    icon: "success",
                                    didClose:()=>{
                                        $(".saveProfile").addClass("d-none")
                                    }
                                });
                        }else{
                                Swal.fire({
                                    title: "error",
                                    text: response.messsage,
                                    icon: "error"
                                });
                        }
                    },error:function(){
                            Swal.fire({
                                title: "error",
                                text: "Some error occured",
                                icon: "error"
                            });
                    }
                })
            }
        })
        // Load data on page load
       
        loadLanguage();
        loadExpertise();
        loadCountries();
    })
            function loadJyotishProfile() {
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
                var Id = localStorage.getItem('Id');
                let checkData = true;
            $.ajax({

                url: "https://localhost:7118/Api/PendingJyotish/ProfileTempData",
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem("Token3")}`

                },
                data: { Id: Id },
                success: function (response) {
                    console.log(response)
                    if (response.status === 200) {
                        checkData = false;
                        $("#name").val(response.data.name)
                        $("#email").val(response.data.email)
                        $("#mobno").val(response.data.mobile)
                        $("#gender").val(response.data.gender)
                        $("#altmobno").val(response.data.alternateMobile)
                        $("#dob").val(response.data.dateOfBirth)
                        $("#language").val(response.data.language != null ? response.data.language.split(",") : response.data.language).change()
                        $("#expertise").val(response.data.expertise != null ? response.data.expertise.split(",") : response.data.expertise).change()

                        
                        $("#pincode").val(response.data.pincode)
                        $("#addresstext").val(response.data.address)
                        $("#timefrom").val(response.data.timeFrom)
                        $("#timeto").val(response.data.timeTo)
                        $("#poojaCheckbox").attr("checked", response.data.pooja)
                        $("#callCheckbox").attr("checked", response.data.call)
                        $("#chatCheckbox").attr("checked", response.data.chat)
                        document.getElementById('chatInputBox').style.display = $("#chatCheckbox:checked").length>0 ? 'block' : 'none';
                        document.getElementById('callInputBox').style.display = $("#callCheckbox:checked").length>0 ? 'block' : 'none';
                        if ($('.checkboxforavail:checked').length == 0) {
                            $(".alertforbox").show();

                        } else {
                            $(".alertforbox").hide();

                        }
                        $("#chatprice").val(response.data.chatCharges)
                        $("#callprice").val(response.data.callCharges)
                        $("#timeto").val(response.data.timeTo)
                        $("#specialization").val(response.data.specialization)
                        $("#experiance").val(response.data.experience)
                        $("#awardsAndAchievement").val(response.data.awordsAndAchievement)
                        $("#aboutus").val(response.data.about)
                        if(response.data.Image!=null){

                        $("#profileImage").attr("src", "@BaseUrl" + response.data.image)
                        }
                        if (response.data.basicSection){
                            $(".active2").attr("disabled",false)
                        } if (response.data.addressSection) {
                            $(".active3").attr("disabled",false)
                        } if (response.data.availbilitySection) {
                            $(".active4").attr("disabled",false)
                        } if (response.data.aboutSection) {
                            $(".active5").attr("disabled",false)
                        }
                        setTimeout(()=>{
                            $("#country option").filter(function () {
                                return $(this).text() === response.data.country;
                            }).prop("selected", true).change()
                        },1000)
                        
                        setTimeout(() => {
                            
                            $("#state option").filter(function () {
                                return $(this).text() === response.data.state;
                            }).prop("selected", true).change()
                        }, 2000)
                        setTimeout(() => {
                            $("#city option").filter(function () {
                                return $(this).text() === response.data.city;
                            }).prop("selected", true).change()
                        }, 3000)
                        Swal.close()
                    }
                }
            })
            if(checkData){
                $.ajax({

                    url: "https://localhost:7118/Api/PendingJyotish/ProfileData",
                    type: 'GET',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem("Token3")}`

                    },
                    data: { Id: Id },
                    success: function (response) {
                        console.log(response)
                        if (response.status === 200) {
                            $("#name").val(response.data.name)
                            $("#email").val(response.data.email)
                            $("#mobno").val(response.data.mobile)
                            $("#gender").val(response.data.gender)
                            $("#language").val(response.data.language != null ? response.data.language.split(",") : response.data.language).change()
                            $("#expertise").val(response.data.expertise != null ? response.data.expertise.split(",") : response.data.expertise).change()

                            $("#state").val()
                            $("#city").val()
                            $("#profileImage").attr("src", "@BaseUrl" + response.data.profileImageUrl)

                             $("#country option").filter(function () {
                                return $(this).text() === response.data.country;
                            }).prop("selected", true).change()
                            setTimeout(()=>{
                            $("#state option").filter(function () {
                                return $(this).text() === response.data.state;
                            }).prop("selected", true).change()
                            }, 1000)
                        setTimeout(() => {
                            $("#city option").filter(function () {
                                return $(this).text() === response.data.city;
                            }).prop("selected", true).change()
                        },2000)
                            Swal.close()

                        }
                    }
                })
            }
            }
            loadJyotishProfile()

            function addDataonTemp(sArray)
            {
            var token = localStorage.getItem('Token3');
            debugger
            let language=[]
            let expertise=[]
                let formData=new FormData();
                sArray.forEach(function(d){
                    formData.append(d.name,d.value)
                    if(d.name=="lang"){
                    language.push(d.value)
                    }
                if (d.name == "Expert"){
                    expertise.push(d.value)
                }
                })
                let joinlang = language.toString();
                formData.append("Language",joinlang)
            let joinexpert = expertise.toString();
                formData.append("Expertise", joinexpert)
            $.ajax({
                url: "https://localhost:7118/Api/PendingJyotish/UpdateProfile",
                type: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                processData:false,
                contentType:false,
                data: formData,
                success: function (response) {
                    console.log("Profile updated successfully:", response);
                },
                error: function (err) {
                    console.error("Error occurred:", err);
                    if (err.responseJSON) {
                        console.error("Response JSON:", err.responseJSON);
                    } else {
                        console.error("Status:", err.status);
                        console.error("Status Text:", err.statusText);
                    }
                }
            });
            }
    
</script>

<script>
    function manageforms(){
        //basic Details
            let basicData = $("#basicForm").serializeArray();
            let enablenxt = 0;
            debugger
            basicData.forEach(function (d) {
                if (d.value != "" & d.value != null & d.value != 0) {
                    enablenxt++;
                }
            })
            if (enablenxt == basicData.length) {
                $(".active2").attr("disabled", false)
            }
    }
    manageforms();
      
</script>
</body>
</html>