@{
    Layout = "PendingJyotishLayout";
  

}
 <style>
    .dates {
      display: flex;
      overflow-x: auto; /* Allows horizontal scrolling */
      width: auto; /* Adjust to your desired width */
      scroll-behavior: smooth; /* Smooth scrolling effect */
    }
    .date-item {
      min-width: 100px; /* Adjust width of individual date items */
      margin-right: 10px;
      text-align: center;
    }
  </style>

<style>
    .image-container {
        border: 1px solid #ddd;
        border-radius: 0.5rem;
        padding: 0.75rem;
        margin-bottom: 1rem;
        height: 140px;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        background-color: white !important;
    }

        .image-container img {
            max-width: 100%;
            max-height: 120px; /* Limit image height */
            object-fit: cover;
        }

        .image-container:hover {
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
            transform: translateY(-5px);
        }

        .image-container label {
            font-weight: bold;
            display: block;
            margin-bottom: 0.5rem;
            text-align: center;
            font-size: 0.9rem;
        }

    #loading {
        display: none;
        margin-bottom: 1rem;
        text-align: center;
        font-size: 1.2rem;
    }


    .col-md-6,
    .col-lg-4 {
        flex: 1 0 30%;
        max-width: 30%;
        margin-bottom: 1rem;
    }

        .col-md-6.increased-width,
        .col-lg-4.increased-width {
            flex: 1 0 35%;
            max-width: 45%;
        }

    @@media (max-width: 768px) {
        .col-md-6 {
            flex: 1 0 45%;
            max-width: 45%;
        }

            .col-md-6.increased-width {
                flex: 1 0 50%;
                max-width: 50%;
            }
    }

    @@media (max-width: 576px) {
        .col-md-6 {
            flex: 1 0 100%;
            max-width: 100%;
        }

            .col-md-6.increased-width {
                flex: 1 0 100%;
                max-width: 100%;
            }
    }

    .main-container {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
    }

    .img-text {
        
        justify-content: center;
    }

    /* For screens smaller than 576px (mobile) */
    @@media (max-width: 575.98px) {
        .container {
            padding: 0 15px;
        }

        .row {
            display: block;
        }

        .col-md-3 {
            width: 100% !important;
            margin-bottom: 15px;
        }

        .img-text {
            font-size: 14px;
        }
    }

    /* For screens between 576px and 768px (tablets) */
    @@media (min-width: 576px) and (max-width: 767.98px) {
        .col-md-3 {
            width: 50% !important;
            margin-bottom: 15px;
        }
    }

    /* For screens between 768px and 991px (medium to large tablets or small laptops) */
    @@media (min-width: 768px) and (max-width: 991.98px) {
        .col-md-3 {
            width: 33.33% !important;
        }
    }

    /* For screens above 992px (desktop) */
    @@media (min-width: 992px) {
        .col-md-3 {
            width: 20% !important;
        }
    }

   

        .dates::-webkit-scrollbar {
            display: none;
        }

    .dates {
        -ms-overflow-style: none;
    }

    .btn {
        border-radius: 0;
    }


    .btn {
        font-size: 14px !important;
        border-radius: 5px !important;
    }


    .btn-outline-secondary:hover {
        background-color: white !important;
        cursor: pointer !important;
        text-decoration: none !important;
    }

    .selected-date {
        background-color: #f84464 !important;
        color: white !important;
    }

    .date-btn div {
        margin: 0;
        padding: 0;
        line-height: 1.2;
        width: 35px !important;
        border-radius: 10px !important;
        font-size: 14px;
    }

    .day {
        font-weight: 300 !important;
        font-size: 16px !important;
    }

    #time-slot-container {
        width: 100%; /* Ensures the parent takes full width of its container */
        display: flex;
        justify-content: center;
        flex: wrap;
    }



    .time-slot {
        padding: 10px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        border-radius: 5px;
        text-align: center;
    }

    .container {
        font-family: sans-serif;
        border-radius: 10px;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
        padding-left: 60px;
        padding-right: 60px;
        padding-top: 20px;
        padding-bottom: 20px;
        background-color: white;
    }
    /* Global styles */
    .container-fluid {
        /*     padding-top: 20px; */
        padding-bottom: 20px;
    }

    .slotBookingDiv {
        max-width: 100%;
        margin: 0 auto;
    }

    /* Header */


    /* Date Picker Container */
    .dates {
        display: flex;
        overflow-x: auto;
        overflow:auto;
        padding: 10px;
        gap: 5px;
    }

        .dates::-webkit-scrollbar {
            display: none;
        }

    .dates {
        -ms-overflow-style: none; /* For IE */
    }

    .date-item {
        cursor: pointer !important;
        text-align: center;
        padding: 8px;
        border-radius: 5px;
        transition: background-color 0.3s;
        flex-shrink: 0;
        min-width: 70px;
        max-width: 100px;
    }

        .date-item.selected {
            background-color: #007bff !important;
            color: white;
        }

    .btn {
        border-radius: 5px !important;
        font-size: 14px;
    }

    /* Scroll Buttons */
    .scroll-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1.5rem;
        background-color: rgba(0, 0, 0, 0.1);
        border: none;
        padding: 10px;
        cursor: pointer;
    }

    .scroll-button-left {
        left: 0;
    }

    .scroll-button-right {
        right: 0;
    }

    /* Time Slot Container */
    .time-slot-container {
        margin-top: 20px;
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        justify-content: center;
    }

    .time-slot {
        padding: 10px;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        border-radius: 5px;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .time-slot:hover {
            background-color: #e2e6ea;
        }

        .time-slot.selected {
            background-color: #007bff !important;
            color: white;
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        /* Stack elements on smaller screens */
        .slotBookingDiv {
            padding: 10px;
        }

        #slots-title {
            font-size: 1em;
        }

        .dates {
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
        }

        .date-item {
            min-width: 60px;
            max-width: 90px;
            padding: 8px;
        }

        .scroll-button {
            font-size: 1.2rem;
        }

        .time-slot-container {
            gap: 5px;
            justify-content: flex-start;
        }

        .time-slot {
            padding: 8px;
        }

        .btn {
            font-size: 14px;
        }
    }

    @@media (max-width: 576px) {
        /* More mobile-specific tweaks */
        .slotBookingDiv {
            padding: 5px;
        }

        .dates {
            gap: 5px;
        }

        .time-slot-container {
            flex-direction: column;
            align-items: center;
        }

        .time-slot {
            padding: 8px;
            width: 100%;
        }

        .scroll-button {
            font-size: 1rem;
        }

        .btn {
            font-size: 12px;
        }
    }

    .swal2-overlay {
        backdrop-filter: blur(5px); /* Apply the blur effect */
        -webkit-backdrop-filter: blur(5px); /* Safari support */
    }
</style>


<div class="container-fluid pt-4 px-4" id="dashboardMainDiv"  >
    <div class=" text-center  border border-1 rounded p-3">

        <div class="row">
            <div class="col-1"> <img src="https://api.myjyotishg.in/Images/Logo.png" height=50 weight=50 /></div>
            <div class="col-11">
                 <div class="col-md-12 d-flex justify-content-center mb-3 fw-bold fs-2 text-primary">
                <div style="font-weight:300;"> Uploaded Documents</div>
            </div>
            </div>
           
           
        </div>

        <div class="row justify-content-evenly">
            <div class="col-md-3 col-lg-2 mb-4 increased-width">
                <a id="idProofLink">
                    <div class="image-container bg-light rounded">
                        <img id="idProof" alt="ID Proof" class="img-fluid" src="">
                    </div>
                </a>
                    <div class="img-text">


                        <span>Id Proof</span>
                        <br />
                        <p id="idStatus"> </p>
                    </div>
                <div id="idProofUploadRejectDoc">

                </div>    

            </div>
            <div class="col-md-3 col-lg-2 mb-4 increased-width">
                <a id="addressProofLink">
                    <div class="image-container bg-light rounded">
                        <img id="addressProof" alt="Address Proof" src="">
                    </div>
                </a>
                    <div class="img-text">

                        <span>Address Proof</span>
                        <br />
                        <p id="addressStatus"></p>
                    </div>
                <div id="addressProofUploadRejectDoc">
                </div>

            </div>
            <div class="col-md-3 col-lg-2 mb-4 increased-width" id="tenthCertificateDiv">
                <a id="tenthCertificateLink">
                    <div class="image-container bg-light rounded">
                        <img id="tenthCertificate" alt="Tenth Certificate" src="">
                    </div>
                </a>
                    <div class="img-text">

                        <span>Tenth Certificate</span>
                        <br />
                        <p id="tenthStatus"></p>
                    </div>
                <div id="tenthCertificateUploadRejectDoc">
                </div>

            </div>
            <div class="col-md-3 col-lg-2 mb-4 increased-width" id="twelveCertificateDiv">
                <a id="twelveCertificateLink">
                    <div class="image-container bg-light rounded">
                        <img id="twelveCertificate" alt="Twelve Certificate" src="">
                    </div>
                </a>
                    <div class="img-text">

                        <span>Twelve Certificate</span>
                        <br />
                        <p id="twelveStatus"></p>
                    </div>
                <div id="twelveCertificateUploadRejectDoc">
                </div>

            </div>
            <div class="col-md-3 col-lg-2 mb-4 increased-width">
                <a id="professionalCertificateLink">
                    <div class="image-container bg-light rounded">
                        <img id="professionalCertificate" alt="Professional Certificate" src="">
                    </div>
                </a>
                    <div class="img-text">

                        <span>Professional Certificate</span>
                        <br />
                    <p id="professionalStatus"></p>
                    </div>
                <div id="professionalCertificateUploadRejectDoc">
                </div>

            </div>
        </div>

        <div class="row justify-content-center">
            <h5 id="registrationNumber" style="font-weight:300"></h5>
            <p id="details">
                Your profile and documents are currently under processing and verification.<br />
                Updates will be available within 24 to 72 hours.<br />
                Please check back within this timeframe for further information.
            </p>
           
        </div>
    </div>
</div>


<!-- Bootstrap Modal Structure --> 
<div class="modal fade" id="slotBookingModal" data-bs-backdrop="static"  tabindex="-1" aria-labelledby="slotBookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title  fw-light" id="slotBookingModalLabel" >Interview Slot Booking</h5>
            </div>
            <div class="modal-body">
                <!-- Slot Booking Content Starts Here -->
                <div class="container-fluid pt-4 px-4">
                    <div class="text-center border border-1 rounded p-3">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="alert p-0 m-0 justify-content-center" role="alert">
                                    <span id="slots-title" class="fw-light text-primary fs-3">Interview Slot Booking</span>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="BookingDetails">
                            <div class="col-md-6"></div>
                        </div>
                        <div class="slotBookingDiv">
                            <div class="container">
                                <div class="font-weight-boldx">Select a Date and Time</div>
                                <div class="d-flex align-items-center justify-content-center">
                                    <button class="btn btn-outline-primary" id="scroll-left">&#8592;</button>
                                    <div class="dates"></div>
                                    <button class="btn btn-outline-primary" id="scroll-right">&#8594;</button>
                                </div>
                                <div class="time-slot-container" id="time-slot-container">
                                    <div class="row">
                                        <div class="col-sm-12" ></div>
                                        <div class="row gap-3 justify-content-center" id="time-slots">
                                            </div>
                                        </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-4" id="bookingbtn">
                            <div class="col-md-12 d-flex justify-content-center">
                                <button id="book-now" class="btn btn-primary rounded-2">Book Now</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Slot Booking Content Ends Here -->
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="rejectedDocUploadModal" tabindex="-1" role="dialog" aria-labelledby="rejectedDocUploadModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectedDocUploadModalLabel">Upload File</h5>
                <button type="button" class="close btn" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- File upload input field -->
                <form id="fileUploadForm">
                    <div class="form-group">
                        <label for="fileInput">Choose a file:</label>
                        <input type="file" class="form-control-file" id="fileInput" name="fileInput">
                    </div>
                    <!-- Hidden field to store the 'data-name' value -->
                    <input type="hidden" id="dataNameInput" name="dataName" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="rejectedDocSubmitFile">Upload</button>
            </div>
        </div>
    </div>
</div>


<!-- Script to handle dynamic date selection and time slots -->

<script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
  $(document).ready(function() {
    // Scroll right when clicking the left button
    $('#scroll-left').on('click', function() {
      $('.dates').animate({
        scrollLeft: '-=150px' // Adjust scroll distance
      }, 300); // Scroll speed
    });

    // Scroll left when clicking the right button
    $('#scroll-right').on('click', function() {
      $('.dates').animate({
        scrollLeft: '+=150px' // Adjust scroll distance
      }, 300); // Scroll speed
    });
  });
</script>



<script>

    function confirmAction() {
        const token = localStorage.getItem('Token3');

        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        $.ajax({
            url: BaseUrl + `Api/PendingJyotish/AddConfirmation`,
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            },
            data:{Id:localStorage.getItem("Id")},
            success: function (response) {
                if(response.status==200){
                    Swal.fire({
                        title:"success",
                        text:"Thankyou for confirm your meating",
                        icon:'success',
                        didClose:()=>{
                            location.reload();
                        }
                    })
                }

            }
        })
    }

    $(document).ready(function () {
        let checkBookinStatus=false;
        const token = localStorage.getItem('Token3');
        const userId = localStorage.getItem('Id');
        Swal.fire({
            title: "Processing Your Request",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });
      
        function getJyotishSlotDetails() {
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            $.ajax({
                url: BaseUrl + `Api/PendingJyotish/JyotishSlotDetails?id=${userId}`, // Adjust the URL as needed
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
                dataType: 'json',
                // Check if the response status is 200 and then hide the modal
                success: function (response) {
                   
                    if (response.status === 200) {
                     
                        console.log("Data retrieved successfully:", response.data);
                        const $detailsContainer = $('#details');
                        const dateObject = new Date(response.data.date);
                        const formattedDate = dateObject.toLocaleDateString('en-GB');
                        let time = response.data.time;
                        let formattedTime = time.substring(0, 5);
                        const $detailsElement = $(`
                                <div class="interview-details p-3 border rounded">
                                    <h5 class="font-weight-bold mb-2">Upcoming Interview Details</h5>
                                    <p>
                                            <span class="d-inline-block me-3">
                                            <i class="far fa-calendar-alt"></i> <strong>Date:</strong> ${formattedDate}
                                        </span>
                                        <span class="d-inline-block">
                                                <i class="far fa-clock"></i> <strong>Time:</strong> ${formattedTime}
                                        </span>
                                    </p>
                                    <p>We look forward to having you! Please ensure to be prepared and join promptly at the scheduled time.</p>
                                    <p id='meatingUrl'></p>
                                </div>
                                `);
                        $detailsContainer.html($detailsElement);
                        // Hide the modal using Bootstrap 5 native JavaScript API
                            checkBookinStatus= true
                            Swal.close()
                    } else {
                        console.log("Error:", response.Message);
                            checkBookinStatus= false
                    }
                }
                ,
                error: function (jqXHR, textStatus, errorThrown) {
                   
                    console.error("AJAX error:", textStatus, errorThrown);
                }
            }).then(()=>{
                fetchDocuments()

                function getJyotishInterViewMeetingLink() {
                    $.ajax({
                        url: BaseUrl + "api/pendingjyotish/InterviewMeetingListByJyotishId",
                        type: 'Get',
                        headers: {
                            'Authorization': `Bearer ${localStorage.getItem("Token3")}`,
                            'Content-Type': 'application/json',
                        },
                        data: { jyotishId: localStorage.getItem("Id") },
                        success: function (result) {
                            console.log(result)
                            if(result.status==200 && result.data.length>0){
                                if(result.data[0].completeStatus){
                                    $('#details').html(
                                    `
                                    <p>Your interview are completed please wait for approvel. its may take some times.</p>
                                    `
                                    )
                                }else{
                                $("#meatingUrl").append(`
                                        <span>Meating Url : </span><a target='_blank' href='${result.data[0].link}'>${result.data[0].link}</a>
                                             ${result.data[0].approveStatus ? "" : "<p>Please Click here to confirm your meating : <button class='btn btn-primary' onClick='confirmAction()'>Confirm</button></p>"}
                                `)
                                }
                            if(result.data[0].jyotishRole=="Jyotish"){
                                location.href="/jyotish/Dashboard";
                            }else if(result.data[0].jyotishRole=="Rejected"){
                                location.href="/PendingJyotish/Rejected";
                            }
                            }


                        }
                    })
                }
                getJyotishInterViewMeetingLink()
                
            })
        }

        getJyotishSlotDetails()
       
        function SlotBooking() {
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            const apiUrl = BaseUrl + `Api/PendingJyotish/SlotList`;

            let selectedDate = null;
            let selectedTime = null;
            let selectedSlotId = null; // Store the slot ID

            // Make an AJAX GET request to retrieve the data
            $.ajax({
                url: apiUrl,
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
                success: function (response) {
                    const dateTimeMap = {};
                    response.data.forEach(item => {
                        const dateKey = new Date(item.date).toLocaleDateString('en-CA');
                        if (!dateTimeMap[dateKey]) {
                            dateTimeMap[dateKey] = [];
                        }
                        item.times.forEach(timeSlot => {
                            dateTimeMap[dateKey].push({
                                id: timeSlot.id,
                                time: timeSlot.time,
                                status: timeSlot.status
                            });
                        });
                    });

                    const $dateContainer = $('.dates');
                    const $timeContainer = $('#time-slots');

                    for (const date in dateTimeMap) {
                        const dateObject = new Date(date);
                        const dayName = dateObject.toLocaleString('en-US', { weekday: 'short' });
                        const dayNumber = dateObject.getDate();
                        const monthName = dateObject.toLocaleString('en-US', { month: 'short' });

                        const $dateElement = $(`
                                <div class="date-item date" data-date='${date}'>
                                    <button class="btn btn-light date-btn" data-date="${date}">
                                        <div>${dayName}</div>
                                        <div class="day">${dayNumber}</div>
                                        <div>${monthName}</div>
                                    </button>
                                </div>
                            `);
                        $dateContainer.append($dateElement);
                    }

                    $('.date').on('click', function () {
                        $timeContainer.empty();
                        selectedDate = $(this).data('date');

                        dateTimeMap[selectedDate].forEach(slot => {
                            const { id, time, status } = slot;
                            const slotStatusClass = status === 'Booked' ? 'btn-danger' : 'btn-success';
                              const timeParts = time.split(':');
                            const $timeElement = $(`
                                    <div class="col-md">
                                        <button class="btn btn-outline-secondary rounded-3 text-success time-button"
                                                data-date='${selectedDate}'
                                                data-time='${time}'
                                                data-id='${id}'  // Add ID here for form submission
                                                    ${status === 'Booked' ? 'disabled' : 'style="background-color: #90ee98; color: black !important;"'}>
                                                ${timeParts[0]}:${timeParts[1]}
                                        </button>
                                    </div>
                                `);
                            $timeContainer.append($timeElement);
                        });

                        $('.time-button').on('click', function () {
                            selectedTime = $(this).data('time');
                            selectedSlotId = $(this).data('id'); // Capture slot ID

                            $('.time-button').removeClass('selected');
                            $(this).addClass('selected');
                        });
                    });
                    Swal.close()
                },
                error: function (error) {
                    Swal.fire({
                        title: "error",
                        text: `some error occurred`,
                        icon: "error"
                    });
                }
            });

            $('#book-now').on('click', function () {
                if (!selectedDate || !selectedTime || !selectedSlotId) {
                    Swal.fire({
                        title: 'Warning',
                        text: `"Please select both a date, time slot, and ensure slot ID is present before booking."`,
                        icon: 'warning',


                    });

                    return;
                }

                Swal.fire({
                    title: 'Confirm Booking',
                    text: `Do you want to book the slot on ${selectedDate} at ${selectedTime}?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, book it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        const postData = {
                            JyotishId: userId,
                            SlotId: selectedSlotId // Include slot ID for the booking request
                        };
                        Swal.fire({
                            title: "Processing Your Request",
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        })
                        $.ajax({
                            url: BaseUrl + 'Api/PendingJyotish/AddSlotBooking',
                            method: 'POST',
                            headers: {
                                'Authorization': `Bearer ${token}`,
                                'Content-Type': 'application/json'
                            },
                            data: JSON.stringify(postData),
                            success: function (response) {
                                if (response.status === 200) {

                                    Swal.fire({
                                        title: "Slot successfully booked",
                                        text: `Slot successfully booked for: ${selectedDate} at ${selectedTime}`,
                                        icon: "success"
                                    });
                                    location.reload();

                                } else {
                                    Swal.fire({
                                        title: `${response.message}`,
                                        icon: response.status === 409 ? "warning" : "error"
                                    });
                                }
                            },
                            error: function (error) {
                                Swal.fire({
                                    title: "error",
                                    text: `some error occurred`,
                                    icon: "error"
                                });
                            }
                        });
                    }
                });
            });
        }

        async function fetchDocuments() {
            const Id = localStorage.getItem('Id');
            if (!Id) {
                location.replace('/Jyotish/Login')
                return;
            }
            var RegistrationNumber = document.getElementById('registrationNumber');
            RegistrationNumber.textContent = 'Registration No :' + 'MYJYOTISHG' + Id;



            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            try {

                const token = localStorage.getItem('Token3');
                const imageApiUrl = BaseUrl + `Api/PendingJyotish/Documents?id=${encodeURIComponent(Id)}`; // Replace with your API endpoint for images

                const response = await $.ajax({
                    url: imageApiUrl,
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

               
                console.log(response)

                $('#idProof').attr('src', response.data.idProof ? BaseUrl + response.data.idProof : '/Img/SampleDoc.jpeg');
                $('#idProofLink').attr('href', `${BaseUrl}${response.data.idProof}`);

                
                if (response.data.idProofStatus === "Verified")
                {
                    $('#idStatus').addClass('text-primary').html('Verified <i class="fas fa-check-circle"></i>');

                } 
                else if (response.data.idProofStatus === "Rejected") 
                {
                    $('#idStatus')
                        .addClass('text-danger')
                        .html(`Rejected <i class="fas fa-times-circle" data-bs-toggle="idTooltip" data-bs-placement="top"
             data-bs-custom-class="custom-tooltip" data-bs-title="${response.data.idProofMessage}"></i>`);

                    $('#idProofUploadRejectDoc').html(`<button class="btn btn-primary btn-sm rejectedDocUploadBtn" data-name="idProof" > Reupload</button> `);
                    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="idTooltip"]');
                    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => {
                        const tooltipInstance = new bootstrap.Tooltip(tooltipTriggerEl);
                        tooltipInstance.show();
                        return tooltipInstance;
                    });
                   
                }

                
                $('#addressProof').attr('src', response.data.addressProof ? BaseUrl + response.data.addressProof : '/Img/SampleDoc.jpeg');
                $('#addressProofLink').attr('href', `${BaseUrl}${response.data.addressProof}`);

                 if (response.data.addressProofStatus === "Verified") 
                 {
                    $('#addressStatus').addClass('text-primary').html('Verified <i class="fas fa-check-circle"></i>');

                }
                else if (response.data.addressProofStatus === "Rejected") 
                {
                    $('#addressStatus')
                        .addClass('text-danger')
                        .html(`Rejected <i class="fas fa-times-circle" data-bs-toggle="addressTooltip" data-bs-placement="top"
            data-bs-custom-class="custom-tooltip"
            data-bs-title="${response.data.addressProofMessage}"></i>`);

                    $('#addressProofUploadRejectDoc').html(`<button class="btn btn-primary btn-sm rejectedDocUploadBtn" data-name="addressProof" > Reupload</button> `);
                    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="addressTooltip"]')
                     const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => {
                         const tooltipInstance = new bootstrap.Tooltip(tooltipTriggerEl);
                         tooltipInstance.show();
                         return tooltipInstance;
                     });
                }

                if (response.data.tenthCertificate == null) {
                    // Hide the 'tenthCertificateDiv' if it exists
                    $('#tenthCertificateDiv').hide();
                    // Set the 'href' for the 'tenthCertificateLink' if it exists
                    $('#tenthCertificateLink').attr('href', `${BaseUrl}${response.data.tenthCertificate}`);
                }

                $('#tenthCertificate').attr('src', response.data.tenthCertificate ? BaseUrl + response.data.tenthCertificate : '/Img/SampleDoc.jpeg');
                // Check if the element exists and set the href
                $('#tenthCertificateLink').attr('href', `${BaseUrl}${response.data.tenthCertificate}`);

                 if (response.data.tenthCertificateStatus === "Verified") {
                    $('#tenthStatus').addClass('text-primary').html('Verified <i class="fas fa-check-circle"></i>');

                } else if (response.data.tenthCertificateStatus === "Rejected") {
                    $('#tenthStatus')
                        .addClass('text-danger')
                        .html(`Rejected <i class="fas fa-times-circle" data-bs-toggle="tenthCertificateTooltip" data-bs-placement="top"
              data-bs-custom-class="custom-tooltip"
              data-bs-title="${response.data.tenthCertificateMessage}"></i>`);

                    $('#tenthCertificateUploadRejectDoc').html(`<button class="btn btn-primary btn-sm rejectedDocUploadBtn" data-name="tenthCertificate" > Reupload</button> `);
                        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tenthCertificateTooltip"]')
                        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => {
                            const tooltipInstance = new bootstrap.Tooltip(tooltipTriggerEl)
                            tooltipInstance.show()
                            return tooltipInstance;
                    });
                }

                if (response.data.twelveCertificate == null) {
                    // Hide the 'twelveCertificateDiv' if it exists
                    $('#twelveCertificateDiv').hide();
                    // Set the href for 'twelveCertificateLink' if it exists
                    $('#twelveCertificateLink').attr('href', `${BaseUrl}${response.data.twelveCertificate}`);
                }

                $('#twelveCertificate').attr('src', response.data.twelveCertificate ? BaseUrl + response.data.twelveCertificate : '/Img/SampleDoc.jpeg');

                $('#twelveCertificateLink').attr('href', `${BaseUrl}${response.data.twelveCertificate}`);

                  if (response.data.twelveCertificateStatus === "Verified") {
                    $('#twelveStatus').addClass('text-primary').html('Verified <i class="fas fa-check-circle"></i>');

                } else if (response.data.twelveCertificate === "Rejected") {
                    $('#twelveStatus')
                        .addClass('text-danger')
                        .html(`Rejected <i class="fas fa-times-circle" data-bs-toggle="twelveCertificateTooltip" data-bs-placement="top"
        data-bs-custom-class="custom-tooltip" data-bs-title="${response.data.twelveCertificateMessage}"></i>`);

                    $('#twelveCertificateUploadRejectDoc').html(`<button class="btn btn-primary btn-sm rejectedDocUploadBtn" data-name="twelveCertificate" > Reupload</button> `);
                            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="twelveCertificateTooltip"]')
                            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => {
                                const tooltipInstance = new bootstrap.Tooltip(tooltipTriggerEl)
                                tooltipInstance.show()
                                return tooltipInstance;
                    });
                }


                $('#professionalCertificate').attr('src', response.data.professionalCertificate ? BaseUrl + response.data.professionalCertificate : '/Img/SampleDoc.jpeg');
                $('#professionalCertificateLink').attr('href', BaseUrl + response.data.professionalCertificate);

              
                  if (response.data.professionalCertificateStatus === "Verified") {
                    $('#professionalStatus').addClass('text-primary').html('Verified <i class="fas fa-check-circle"></i>');
                  
                } else if (response.data.professionalCertificateStatus === "Rejected") {

                   
                    $('#professionalStatus').html(`Rejected <i class="fas fa-times-circle text-danger" data-bs-toggle="professionalCertificateTooltip" data-bs-placement="top" data-bs-custom-class="custom-tooltip" data-bs-title="${response.data.professionalCertificateMessage}"></i>`);

                    $('#professionalCertificateUploadRejectDoc').html(`<button class="btn btn-primary btn-sm rejectedDocUploadBtn" data-name="professionalCertificate" > Reupload</button> `);

                                const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="professionalCertificateTooltip"]')
                                const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => {
                                    const tooltipInstance = new bootstrap.Tooltip(tooltipTriggerEl)
                                    tooltipInstance.show()
                                    return tooltipInstance;
                    });
                }
                $('#loading').hide();
                if (response.data.idProofStatus == "Verified" && response.data.addressProofStatus == "Verified" && response.data.professionalCertificateStatus == "Verified") {
                    if (checkBookinStatus) {
                        $('#slotBookingModal').modal('hide');

                   }else{
                    $('#slotBookingModal').modal('show');
                        SlotBooking()
                   }
                }
                Swal.close()
            } catch (error) {
                console.error('Error:', error);
                $('#statusMessage').text(`Error: ${error.message}`);
            }

        }

        $('#fileInput').dropify({
            messages: {
                default: 'max size 2mb',
                replace: 'Drag and drop or click to replace',
                remove: 'Remove',
                error: 'Oops, something went wrong.'
            },
            maxFileSize: '2M',  // Limit file size to 2 MB

        });


        // Click event for the submit button
        $('#rejectedDocSubmitFile').click(function () {
            Swal.fire({
                title: "Processing Your Request",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            })
            var fileInput = $('#fileInput')[0].files[0];
            var dataName = $('#dataNameInput').val();
            var JyotishId = localStorage.getItem('Id');

            if (fileInput) {
                

          
                var formData = new FormData();
              
                formData.append(dataName, fileInput);
                formData.append('JyotishId', JyotishId);

                // Perform AJAX request to upload the file
                $.ajax({
                    url: BaseUrl + "Api/PendingJyotish/UploadRejectedDocumentAsync",
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    },
                    data: formData,
                    processData: false, // Important: prevents jQuery from converting the data
                    contentType: false, // Important: prevents jQuery from setting the Content-Type header
                    success: function (response) {
                        if (response.status == 200) {
                            Swal.fire({
                                title: "Success",
                                text: "Your file has been uploaded successfully!",
                                icon: "success",
                                confirmButtonText: "OK"
                            }).then(function () {
                                // Refresh the page when OK is clicked
                                location.reload();
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error",
                                text: response.messsage,
                                icon: "error",

                            });
                        }
                       
                    },
                    error: function (error) {
                        Swal.fire({
                            title: "Error",
                            text: `An error occurred: ${error.responseText}`,
                            icon: "error"
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: "warning",
                    text: `Please select a file before uploading.`,
                    icon: "warning"
                });
               
            }
        });

        // Click event for the rejected doc upload button
        $(document).on('click', '.rejectedDocUploadBtn', function () {
            var dataName = $(this).data('name'); // Get the value of the 'data-name' attribute
            // Update modal title and hidden input field with the data-name value
            $('#dataNameInput').val(dataName); // Set the hidden field value
            $('#rejectedDocUploadModal').modal('show'); // Show the modal
        });

       
      

       
    });

</script>




